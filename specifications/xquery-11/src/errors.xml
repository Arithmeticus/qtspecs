<?xml version="1.0" encoding="UTF-8"?>
<div1 id="id-errors">	
<head>Error Conditions</head>	
<error-list>
<error spec="XP" code="0001" class="ST" type="static">
<p>
It is a <termref def="dt-static-error">static error</termref>
if analysis of an 
expression relies on some component of the <termref def="dt-static-context">static context</termref> that has not been 
assigned a value.</p></error>

<error spec="XP" code="0002" class="DY" type="dynamic">
<p>It is a  <termref def="dt-dynamic-error">dynamic error</termref>
if evaluation of an expression relies on some part of the <termref def="dt-dynamic-context">dynamic
context</termref> that has not been assigned a value.</p></error>

<error spec="XP" code="0003" class="ST" type="static">
<p>
It is a <termref def="dt-static-error">static error</termref> if an expression 
is not a valid instance of the grammar defined in <specref ref="id-grammar"/>.</p></error>

<error spec="XP" code="0004" class="TY" type="type">
<p>It is a  <termref def="dt-type-error">type error</termref> 
if, during the <termref def="dt-static-analysis">static analysis phase</termref>, an expression is found to have a <termref def="dt-static-type">static type</termref> that is not appropriate
for the context in which the expression occurs, or during the <termref def="dt-dynamic-evaluation">dynamic evaluation
phase</termref>, the <termref def="dt-dynamic-type">dynamic type</termref> of a value does not match a required type as
specified by the matching rules in <specref ref="id-sequencetype-matching"/>.</p></error>

<error spec="XP" code="0005" class="ST" type="static">
<p>
During the analysis phase,
it is a  <termref def="dt-static-error">static error</termref> 
if the <termref def="dt-static-type">static type</termref> assigned to an expression other than the expression <code>()</code> or <code>data(())</code> is <code>empty-sequence()</code>.</p></error>

<error spec="XP" code="0006" class="TY" type="type">
<p>
(Not currently used.)</p></error>

<error spec="XP" code="0007" class="TY" type="type">
<p>(Not currently used.)</p>
</error>

<error spec="XP" code="0008" class="ST" type="static">
<p>
It is a  <termref def="dt-static-error">static error</termref>  if
an expression refers to an element name, attribute name,  schema type name, namespace prefix,
or variable name that is not defined in the 
<termref def="dt-static-context">static context</termref>, except for an ElementName in an <nt def="ElementTest">ElementTest</nt> or an AttributeName in an <nt def="AttributeTest">AttributeTest</nt>.</p>
</error>

<error spec="XQ" role="xquery" code="0009" class="ST" type="static">
<p>
An implementation that does not support the Schema Import Feature must raise a  <termref def="dt-static-error">static error</termref> if 
a Prolog contains a schema import.</p>
</error>

<error spec="XP" code="0010" class="ST" type="static">
<p>
An implementation  must raise a  <termref def="dt-static-error">static error</termref> if 
it encounters a reference to an axis that it does not support.</p>
</error>

<error spec="XQ" role="xquery" code="0012" class="ST" type="static">
<p>
It is a  <termref def="dt-static-error">static error</termref> if the set of
definitions contained in all schemas imported by a Prolog do not satisfy the
conditions for schema validity specified in Sections 3 and 5 of
<bibref ref="XMLSchema"/> Part 1--i.e., each definition must
be valid, complete, and unique.</p>
</error>

<error spec="XQ" role="xquery" code="0013" class="ST" type="static">
<p>It is a  <termref def="dt-static-error">static error</termref> 
if an implementation recognizes a pragma but
determines that its content is  invalid.</p>
</error>

<error spec="XQ" role="xquery" code="0014" class="ST" type="static">
<p>(Not currently used.)</p>
</error>

<error spec="XQ" role="xquery" code="0015" class="ST" type="static">
<p>(Not currently used.)</p>
</error>

<error spec="XQ" role="xquery" code="0016" class="ST" type="static">
<p>An implementation that does not support the Module  Feature raises a  <termref def="dt-static-error">static 
error</termref> if it encounters a <termref def="dt-module-declaration">module declaration</termref> or a   <termref def="dt-module-import">module import</termref>.</p>
</error>

<error spec="XP" code="0017" class="ST" type="static">
<p>
It is a <termref def="dt-static-error">static error</termref> if the <termref def="dt-expanded-qname">expanded QName</termref> and number of arguments in a function call do
not match the name and arity of a <termref def="dt-function-signature">function signature</termref> in
the <termref def="dt-static-context">static context</termref>.</p>
</error>

<error spec="XP" code="0018" class="TY" type="type">
<p>It is a  <termref def="dt-type-error">type error</termref> if
the result of  the last step in a path expression contains both nodes and non-nodes.</p>
</error>

<error spec="XP" code="0019" class="TY" type="type">
<p>
It is a  <termref def="dt-type-error">type error</termref> if
the result of a step (other than the last step) in a path expression contains an atomic value.</p>
</error>

<error spec="XP" code="0020" class="TY" type="type">
<p>
It is a <termref def="dt-type-error">type error</termref> if,
in an axis step, the context item is not a node.</p>
</error>

<error spec="XP" code="0021" class="DY" type="dynamic">
<p>
(Not currently used.)</p>
</error>

<error spec="XQ" role="xquery" code="0022" class="ST" type="static">
<p>
It is a <termref def="dt-static-error">static error</termref>
if the value of a <termref def="dt-namespace-decl-attr">namespace declaration
attribute</termref> is not a <nt def="URILiteral">URILiteral</nt>.
</p>
</error>

<error spec="XQ" role="xquery" code="0023" class="TY" type="type">
<p>(Not currently used.)</p>
</error>

<error spec="XQ" role="xquery" code="0024" class="TY" type="type">
<p>
It is  a <termref def="dt-type-error">type error</termref>
if the content sequence in an element constructor contains an attribute
node following a node that is not an attribute node.</p></error>

<error spec="XQ" role="xquery" code="0025" class="DY" type="dynamic">
<p>
It is a <termref def="dt-dynamic-error">dynamic error</termref>
if any attribute of a constructed element 
does not have a name that is distinct from the names of all other attributes of the constructed element.</p>
</error>

<error spec="XQ" role="xquery" code="0026" class="DY" type="dynamic">
<p>
It is a <termref def="dt-dynamic-error">dynamic error</termref> if the result of the content expression of a computed processing instruction constructor contains the string "<code>?&gt;</code>".</p>
</error>

<error spec="XQ" role="xquery" code="0027" class="DY" type="dynamic">
<p>
In a validate expression, 
it is a <termref def="dt-dynamic-error">dynamic error</termref> if
the root element information item in the PSVI resulting from validation does not have the expected validity property: <code>valid</code> if validation mode is <code>strict</code>, or either <code>valid</code> or <code>notKnown</code> if  validation mode is <code>lax</code>.</p>
</error>

<error spec="XQ" role="xquery" code="0028" class="TY" type="type">
<p>
(Not currently used.)</p>
</error>

<error spec="XQ" code="0029" class="DY" type="dynamic" role="xquery">
<p>(Not currently used.)</p>
</error>

<error spec="XQ" role="xquery" code="0030" class="TY" type="type">
<p>
It is a <termref def="dt-type-error">type error</termref> 
if the argument of a <code>validate</code> expression does not
evaluate to exactly one document or element node.
</p>
</error>

<error spec="XQ" role="xquery" code="0031" class="ST" type="static">
<p>It is a <termref def="dt-static-error">static error</termref>
if the version number specified in a version declaration is not
supported by the implementation.
</p>
</error>

<error spec="XQ" role="xquery" code="0032" class="ST" type="static">
<p>A <termref def="dt-static-error">static error</termref> is raised 
if a Prolog contains more than one <termref def="dt-base-uri-decl">base URI declaration</termref>.</p>
</error>

<error spec="XQ" role="xquery" code="0033" class="ST" type="static">
<p>It is a <termref def="dt-static-error">static error</termref>
if a module contains multiple bindings for the same
namespace prefix.</p>
</error>

<error spec="XQ" role="xquery" code="0034" class="ST" type="static">
<p>It is a <termref def="dt-static-error">static error</termref> 
if multiple functions declared or imported by a <termref def="dt-module">module</termref> have the <phrase diff="add" at="XQ.E25">same</phrase> number of arguments and their <termref def="dt-expanded-qname">expanded QNames</termref> are equal (as defined by the <code>eq</code> operator).</p>
</error>

<error spec="XQ" role="xquery" code="0035" class="ST" type="static">
<p>
It is a <termref def="dt-static-error">static error</termref> to import two schema components that both define the same
name in the same symbol space and in the same scope. </p>
</error>

<error spec="XQ" role="xquery" code="0036" class="ST" type="type">
<!--	<change diff="chg" at="XQ.E6"> -->
          <p>
            It is a <termref def="dt-static-error">static error</termref> 
            to import a module if the 
            <termref def="dt-issd">in-scope schema definitions</termref>
            of the importing module do not include all of the following:
          </p>
          <olist>
             <item>
                <p>An <termref def="dt-is-types">in-scope schema type</termref> 
                   for each type-name that appears:
                </p>
                <olist>
                   <item>
                      <p>in the type of a variable that is declared in the imported module
                         and referenced in the importing module, OR
                      </p>
                   </item><item>
                      <p>in a parameter-type or result-type of a function that is declared
                         in the imported module and referenced in the importing module.
                      </p>
                   </item>
                </olist>
             </item><item>
                <p>An <termref def="dt-is-elems">in-scope element declaration</termref>
                   for each element-name <code>EN</code> such that:
                </p>
                <olist>
                   <item>
                      <p><code>schema-element(EN)</code> appears in the declared 
                         type of a variable 
                         in the imported module, and that variable is referenced 
                         in the importing module, OR
                      </p>
                   </item><item>
                      <p><code>schema-element(EN)</code> appears in a parameter-type or 
                         result-type of a function declared in the imported module, and 
                         that function is referenced in the importing module.
                      </p>
                   </item>
                </olist>
             </item><item>
                <p>An <termref def="dt-is-attrs">in-scope attribute declaration</termref>
                   for each attribute-name <code>AN</code> such that:
                </p>
                <olist>
                   <item>
                      <p><code>schema-attribute(AN)</code> appears in the declared 
                         type of a variable 
                         in the imported module, and that variable is referenced 
                         in the importing module, OR
                      </p>
                   </item><item>
                      <p><code>schema-attribute(AN)</code> appears in a parameter-type 
                         or result-type 
                         of a function declared in the imported module, and that function 
                         is referenced in the importing module.
                      </p>
                   </item>
                </olist>
             </item>
          </olist>
<!--	</change> -->
</error>

<error spec="XQ" role="xquery" code="0037" class="ST" type="static">
<p>(Not currently used.)</p>
</error>

<error spec="XQ" role="xquery" code="0038" class="ST" type="static">
<p>
It is a <termref def="dt-static-error">static error</termref>
if a Prolog contains more than one <termref def="dt-default-collation-decl">default
collation declaration</termref>, or the value specified by a default collation declaration is not present in <termref def="dt-static-collations">statically known collations</termref>.</p>
</error>

<error spec="XQ" role="xquery" code="0039" class="ST" type="static">
<p>
It is a <termref def="dt-static-error">static error</termref> for a
function declaration to have more than one parameter with the same name.
</p>
</error>

<error spec="XQ" role="xquery" code="0040" class="ST" type="static">
<p>
It is a <termref def="dt-static-error">static error</termref> if the attributes specified by a direct element constructor do not have distinct <termref def="dt-expanded-qname">expanded QNames</termref>.</p>
</error>

<error spec="XQ" role="xquery" code="0041" class="DY" type="dynamic">
<p>
It is  a <termref def="dt-dynamic-error">dynamic error</termref>
if the value of the name expression in a computed processing instruction constructor cannot be cast to the type <code>xs:NCName</code>.</p></error>

<error spec="XQ" role="xquery" code="0042" class="ST" type="static">
<p>
(Not currently used.)</p>
</error>

<error spec="XQ" role="xquery" code="0043" class="ST" type="static">
<p>
(Not currently used.)</p>
</error>

<error spec="XQ" role="xquery" code="0044" class="DY" type="dynamic">
<!-- <change diff="chg" at="XQ.E19"> -->
             <p>It is a <termref def="dt-dynamic-error">dynamic error</termref>
                the node-name of a node constructed by a computed 
                attribute constructor has any of the following properties:
             </p>
             <ulist>
                <item><p>Its namespace prefix is <code>xmlns</code>.
                </p></item>
                <item><p>It has no namespace prefix and its local name is 
                   <code>xmlns</code>.
                </p></item>
                <item><p>Its namespace URI is <code>http://www.w3.org/2000/xmlns/</code>.
                </p></item>
                <item><p>Its namespace prefix is <code>xml</code> and its namespace 
                   URI is not <code>http://www.w3.org/XML/1998/namespace</code>.
                </p></item>
                <item><p>Its namespace prefix is other than <code>xml</code> and its 
                   namespace URI is <code>http://www.w3.org/XML/1998/namespace</code>.
                </p></item>
             </ulist>
<!-- </change> -->
</error>

<error spec="XQ" role="xquery" code="0045" class="ST" type="static">
<p>
It is  a <termref def="dt-static-error">static error</termref>
if the function name in a function declaration is in one of the following namespaces: <code>http://www.w3.org/XML/1998/namespace, http://www.w3.org/2001/XMLSchema, http://www.w3.org/2001/XMLSchema-instance, http://www.w3.org/2005/xpath-functions</code>.</p>
</error>

<error spec="XQ" role="xquery" code="0046" class="ST" type="static">
<p>An implementation <termref def="may">MAY</termref> raise a <termref def="dt-static-error">static error</termref> if the value of a <nt def="URILiteral">URILiteral</nt> is of nonzero length and is not in the lexical
space of <code>xs:anyURI</code>.</p>
</error>

<error spec="XQ" role="xquery" code="0047" class="ST" type="static">
<p>
It is  a <termref def="dt-static-error">static error</termref>
if multiple module imports in the same Prolog specify the same target namespace.</p>
</error>

<error spec="XQ" role="xquery" code="0048" class="ST" type="static">
<p>
It is  a <termref def="dt-static-error">static error</termref>
if a function or variable declared in a library module is not in the target namespace of the library module.</p>
</error>

<error spec="XQ" role="xquery" code="0049" class="ST" type="static">
<p>It is a <termref def="dt-static-error">static error</termref> 
if two or more variables declared or imported by a <termref def="dt-module">module</termref> have equal <termref def="dt-expanded-qname">expanded QNames</termref> (as defined by the <code>eq</code> operator.)</p>
</error>

<error spec="XP" code="0050" class="DY" type="dynamic">
<p>It is  a <termref def="dt-dynamic-error">dynamic error</termref>
if the <termref def="dt-dynamic-type">dynamic type</termref> of the operand of a <code>treat</code> expression does not match the <termref def="dt-sequence-type">sequence type</termref> specified by the <code>treat</code> expression. This error might also be raised by a path expression beginning with "<code>/</code>" or "<code>//</code>" if the context node is not in a tree that is rooted at a document node. This is because a leading "<code>/</code>" or "<code>//</code>" in a path expression is an abbreviation for an initial step that includes the clause <code>treat as document-node()</code>.</p>
</error>

<error spec="XP" code="0051" class="ST" type="static">
<p>It is  a <termref def="dt-static-error">static error</termref>
if the <termref def="dt-expanded-qname">expanded QName</termref> for an <nt def="AtomicType">AtomicType</nt> in a <nt def="SequenceType">SequenceType</nt> is not defined in the <termref def="dt-is-types">in-scope schema types</termref> as an atomic type.</p></error>

<error spec="XQ" role="xquery" code="0052" class="DY" type="dynamic">
<p>(Not currently used.)</p>
</error>

<error spec="XQ" role="xquery" code="0053" class="ST" type="static">
<p>
(Not currently used.)</p>
</error>

<error spec="XQ" role="xquery" code="0054" class="ST" type="static">
<p>It is a <termref def="dt-static-error">static error</termref> if a variable <termref def="dt-depends-on-variable">depends</termref> on itself.</p>
</error>

<error spec="XQ" code="0055" class="ST" type="static" role="xquery">
<p>It is a <termref def="dt-static-error">static error</termref> if a Prolog contains more than one <termref def="dt-copy-namespaces-decl">copy-namespaces declaration</termref>.</p>
</error>

<error spec="XQ" code="0056" class="ST" type="static" role="xquery">
<p>
(Not currently used.)</p>
</error>

<error spec="XQ" code="0057" class="ST" type="static" role="xquery">
<p>
It is  a <termref def="dt-static-error">static error</termref>
if a schema import binds a namespace prefix but does not specify a target namespace other than a zero-length string.</p>
</error>

<error spec="XQ" code="0058" class="ST" type="static" role="xquery">
<p>
It is  a <termref def="dt-static-error">static error</termref>
if multiple schema imports specify the same target namespace.</p>
</error>

<error spec="XQ" code="0059" class="ST" type="static" role="xquery">
<p>
It is  a <termref def="dt-static-error">static error</termref>
if an implementation is unable to process a schema or module import by finding a schema or module with the specified target namespace.</p>
</error>

<error spec="XQ" code="0060" class="ST" type="static" role="xquery">
<p>
It is a <termref def="dt-static-error">static error</termref> if the name of a function in a function declaration is not in a namespace (<termref def="dt-expanded-qname">expanded QName</termref> has a null namespace URI).</p>
</error>

<error spec="XQ" role="xquery" code="0061" class="DY" type="dynamic">
<p>
It is a <termref def="dt-dynamic-error">dynamic error</termref>
if the operand of a validate expression is a document node whose children do not consist of exactly one element node  and zero or more comment and processing instruction nodes, in any order.</p>
</error>

<error spec="XQ" role="xquery" code="0062" class="DY" type="dynamic">
<p>(Not currently used.)</p>
</error>

<error spec="XQ" code="0063" class="ST" type="static" role="xquery">
<p>
(Not currently used.)</p>
</error>

<error spec="XQ" role="xquery" code="0064" class="DY" type="dynamic">
<p>
It is  a <termref def="dt-dynamic-error">dynamic error</termref>
if the value of the name expression in a computed processing instruction constructor is equal to "XML" (in any combination of upper and lower case).</p>
</error>

<error spec="XQ" role="xquery" code="0065" class="ST" type="static">
<p>A <termref def="dt-static-error">static error</termref> is raised 
if a Prolog contains more than one <termref def="dt-ordering-mode-decl">ordering mode declaration</termref>.</p>
</error>

<error spec="XQ" role="xquery" code="0066" class="ST" type="static">
<p>A <termref def="dt-static-error">static error</termref> is raised 
if a Prolog contains more than one default element/type namespace declaration, or more than one default function namespace declaration.
</p>
</error>

<error spec="XQ" role="xquery" code="0067" class="ST" type="static">
<p>A <termref def="dt-static-error">static error</termref> is raised 
if a Prolog contains more than one <termref def="dt-construction-decl">construction declaration</termref>.</p>
</error>

<error spec="XQ" role="xquery" code="0068" class="ST" type="static">
<p>A <termref def="dt-static-error">static error</termref> is raised 
if a Prolog contains more than one <termref def="dt-boundary-space-decl">boundary-space declaration</termref>.</p>
</error>

<error spec="XQ" role="xquery" code="0069" class="ST" type="static">
<p>A <termref def="dt-static-error">static error</termref> is raised 
if a Prolog contains more than one <termref def="dt-empty-order-decl">empty order declaration</termref>.</p>
</error>

<error spec="XQ" role="xquery" code="0070" class="ST" type="static">
<!-- <change diff="chg" at="XQ.E19"> -->
             <p>A <termref def="dt-static-error">static error</termref> is raised 
                if one of the predefined prefixes <code>xml</code> or <code>xmlns</code> 
                appears in a namespace declaration, or if any of the following conditions 
                is statically detected in any expression or declaration:
             </p>
             <ulist>
                <item><p>The prefix <code>xml</code> is bound to some namespace URI 
                   other than <code>http://www.w3.org/XML/1998/namespace</code>.
                </p></item>
                <item><p>A prefix other than <code>xml</code> is bound to the 
                   namespace URI <code>http://www.w3.org/XML/1998/namespace</code>.
                </p></item>
                <item><p>The prefix <code>xmlns</code> is bound to any namespace URI.
                </p></item>
                <item><p>A prefix other than <code>xmlns</code> is bound to the 
                   namespace URI <code>http://www.w3.org/2000/xmlns/</code>.
                </p></item>
             </ulist>
<!-- </change> -->
</error>

<error spec="XQ" role="xquery" code="0071" class="ST" type="static">
<p>A <termref def="dt-static-error">static error</termref> is raised 
if the namespace declaration attributes of a direct element constructor do not have distinct names.</p>
</error>

<error spec="XQ" role="xquery" code="0072" class="DY" type="dynamic">
<p>
It is a <termref def="dt-dynamic-error">dynamic
error</termref> if the result of the content expression of a computed comment constructor contains two adjacent hyphens or ends with a hyphen.</p>
</error>

<error spec="XQ" role="xquery" code="0073" class="ST" type="static">
<p diff="chg" at="XQ.E8">(Not currently used.)</p>
</error>

<error spec="XQ" role="xquery" code="0074" class="DY" type="dynamic">
<p>
It is  a <termref def="dt-dynamic-error">dynamic error</termref>
if the value of the name expression in a computed element or attribute constructor cannot be converted to an <termref def="dt-expanded-qname">expanded QName</termref> (for example, because it contains a namespace prefix not found in <termref def="dt-static-namespaces">statically known namespaces</termref>.)</p>
</error>

<error spec="XQ" role="xquery" code="0075" class="ST" type="static">
<p>
An implementation that does not support the Validation Feature must raise a  <termref def="dt-static-error">static error</termref> if 
it encounters a <code>validate</code> expression.</p>
</error>

<error spec="XQ" role="xquery" code="0076" class="ST" type="static">
<p>
It is a <termref def="dt-static-error">static
error</termref>
if a <code>collation</code> subclause in an <code>order by</code> clause of a FLWOR expression does not identify a collation that is present in <termref def="dt-static-collations">statically known collations</termref>.</p>
</error>

<error spec="XQ" role="xquery" code="0077" class="ST" type="static">
<p>
(Not currently used.)</p>
</error>

<error spec="XQ" role="xquery" code="0078" class="ST" type="static">
<p>
(Not currently used.)</p>
</error>

<error spec="XQ" role="xquery" code="0079" class="ST" type="static">
<p>
It is a <termref def="dt-static-error">static error</termref>
if an extension expression contains neither a <termref def="dt-pragma">pragma</termref> that is recognized by the implementation nor an expression enclosed in curly braces.</p>
</error>

<error spec="XP" code="0080" class="ST" type="static">
<p>It is a 
<termref def="dt-static-error">static
error</termref> if the target type of a <code>cast</code> or <code>castable</code> expression is  <code>xs:NOTATION</code> or <code>xs:anyAtomicType</code>.</p>
</error>

<error spec="XP" code="0081" class="ST" type="static">
<p>
It is a <termref def="dt-static-error">static
error</termref>
if a QName used in <phrase role="xquery">a query</phrase><phrase role="xpath">an expression</phrase> contains a namespace prefix that cannot be expanded into a namespace URI by using the <termref def="dt-static-namespaces">statically known namespaces</termref>.</p>
</error>

<error spec="XQ" role="xquery" code="0082" class="ST" type="static">
<p>(Not currently used.)</p>
</error>

<error spec="XP" code="0083" class="ST" type="static">
<p>
(Not currently used.)</p>
</error>

<error spec="XQ" code="0084" class="DY" type="dynamic" role="xquery">
<p>
It is a <termref def="dt-dynamic-error">dynamic error</termref>
if the element validated by a <code>validate</code> statement does not have a top-level element declaration in the <termref def="dt-is-elems">in-scope element declarations</termref>, if validation mode is <code>strict</code>.</p>
</error>

<error spec="XQ" role="xquery" code="0085" class="ST" type="static">
<p>
It is a <termref def="dt-static-error">static
error</termref>
if the namespace URI in a namespace declaration attribute is a zero-length string, and the implementation does not support <bibref ref="XMLNAMES11"/>.</p>
</error>

<error spec="XQ" role="xquery" code="0086" class="TY" type="type">
<p>
It is a <termref def="dt-type-error">type error</termref> 
if the typed value of a copied element or attribute node is <termref def="dt-namespace-sensitive">namespace-sensitive</termref> when <termref def="dt-construction-mode">construction mode</termref> is <code>preserve</code> and <termref def="dt-copy-namespaces-mode">copy-namespaces mode</termref> is <code>no-preserve</code>.</p>
</error>

<error spec="XQ" role="xquery" code="0087" class="ST" type="static">
<p>
It is a <termref def="dt-static-error">static
error</termref>
if the encoding specified in a Version Declaration does not conform to  the definition of <code>EncName</code> specified in <bibref ref="XML"/>.</p>
</error>

<error spec="XQ" role="xquery" code="0088" class="ST" type="static">
<p>
It is a <termref def="dt-static-error">static
error</termref>
if the literal that specifies the target namespace in a <termref def="dt-module-import">module import</termref> or a <termref def="dt-module-declaration">module declaration</termref> is of zero length.</p>
</error>

<error spec="XQ" role="xquery" code="0089" class="ST" type="static">
<p>
It is a <termref def="dt-static-error">static
error</termref>
if a variable bound in a <code>for</code> or <code>window</code> clause of a FLWOR expression, and its associated positional variable, do not have distinct names (<termref def="dt-expanded-qname">expanded QNames</termref>).</p>
</error>

<error spec="XQ" role="xquery" code="0090" class="ST" type="static">
<p>
It is a <termref def="dt-static-error">static
error</termref>
if a <termref def="dt-character-reference">character reference</termref>
does not identify a valid character in the version of XML that is in use.</p>
</error>

<error spec="XQ" role="xquery" code="0091" class="DY" type="dynamic">
<p>An implementation <termref def="may">MAY</termref> raise a <termref def="dt-dynamic-error">dynamic error</termref>
if an <code>xml:id</code> error, as defined in <bibref ref="XMLID"/>, is encountered during construction of an attribute named <code>xml:id</code>.</p>
</error>

<error spec="XQ" role="xquery" code="0092" class="DY" type="dynamic">
<p>An implementation <termref def="may">MAY</termref> raise a <termref def="dt-dynamic-error">dynamic error</termref>
if a constructed attribute named <code>xml:space</code> has a value other than <code>preserve</code> or <code>default</code>.</p>
</error>
<!--
<error spec="XQ" role="xquery" code="0093" class="ST" type="static">
<p>
It is a <termref def="dt-static-error">static
error</termref> to import a module M<sub>1</sub> if there exists a sequence of modules M<sub>1</sub> ... M<sub>i</sub> ... M<sub>1</sub> such that each module <termref def="dt-module-directly-depends">directly depends</termref> on the next module in the sequence (informally, if M<sub>1</sub> depends on itself through some chain of module dependencies.)</p>
</error>
-->

<error spec="XQ" role="xquery" code="0094" class="ST" type="static">
<p>
In the <code>group by</code> clause of a FLWOR expression, it is a <termref def="dt-static-error">static
error</termref> if the name of a grouping variable is not equal (by the <code>eq</code> operator on <termref def="dt-expanded-qname">expanded QNames</termref>) to the name of a variable that is bound by a <code>for</code> or <code>let</code> clause that precedes the <code>group by</code> clause.</p>
</error><error spec="XQ" role="xquery" code="0095" class="DY" type="dynamic">
<p>
In the <code>group by</code> clause of a FLWOR expression, it is a <termref def="dt-dynamic-error">dynamic error</termref>
if the value bound to a grouping  variable consists of a sequence of more than one item.</p>
</error>

<!-- ################ -->

<error spec="XQ" role="xquery" code="0096" class="DY" type="dynamic">
<!-- 	   <change diff="chg" at="XQ.E19"> -->
             <p>It is a <termref def="dt-dynamic-error">dynamic error</termref>
                the node-name of a node constructed by a computed 
                element constructor has any of the following properties:
             </p>
             <ulist>
                <item><p>Its namespace prefix is <code>xmlns</code>.
                </p></item>
                <item><p>Its namespace URI is <code>http://www.w3.org/2000/xmlns/</code>.
                </p></item>
                <item><p>Its namespace prefix is <code>xml</code> and its namespace 
                   URI is not <code>http://www.w3.org/XML/1998/namespace</code>.
                </p></item>
                <item><p>Its namespace prefix is other than <code>xml</code> and its 
                   namespace URI is <code>http://www.w3.org/XML/1998/namespace</code>.
                </p></item>
             </ulist>
<!--	    </change>          -->
</error>

<error  spec="XQ" role="xquery" code="0097" class="ST" type="static">
<p>
It is a static error for a decimal-format to specify a value that is
not legal for a given property, as described in <termref
def="dt-static-decimal-formats">statically known decimal
formats</termref></p>
</error>

<error  spec="XQ" role="xquery" code="0098" class="ST" type="static">
<p>

It is a static error if, for any named or unnamed decimal format, the
properties representing characters used in a picture string do not
each have distinct values.

These properties are
<termref def="id-static-decimal-separator">decimal-separator-sign</termref>, 
<termref def="id-static-decimal-format-grouping-separator">grouping-separator</termref>, 
<termref def="id-static-decimal-format-percent-sign">percent-sign</termref>, 
<termref def="id-static-decimal-format-per-mille-sign">per-mille-sign</termref>,
<termref def="id-static-decimal-format-zero-digit">zero-digit</termref>, 
<termref def="id-static-decimal-format-digit-sign">digit-sign</termref>, and 
<termref def="id-static-decimal-format-pattern-separator-sign">pattern-separator-sign</termref>.
</p>
</error>

<error  spec="XQ" role="xquery" code="0099" class="ST" type="static">
<p>
A <code>ContextItemDecl</code> must not occur after an expression that relies on the initial 
context item, and no query may contain more than one ContextItemDecl.
</p>
</error>

<error  spec="XQ" role="xquery" code="0100" class="ST" type="static">
<p>
  It is a static error if any of the following decimal format properties is not a single character.
</p>
  <ulist>

  <item><p><termref
  def="id-static-decimal-separator">decimal-separator</termref></p></item>
  <item><p><termref
    def="id-static-decimal-format-grouping-separator">grouping-separator</termref></p></item>

    <item><p><termref
    def="id-static-decimal-format-percent-sign">percent-sign</termref></p></item>

    <item><p><termref
    def="id-static-decimal-format-per-mille-sign">per-mille-sign</termref></p></item>

    <item><p><termref
		 def="id-static-decimal-format-zero-digit">zero-digit</termref></p></item>

    <item><p><termref def="id-static-decimal-format-digit-sign">digit-sign</termref></p></item>
    <item><p><termref def="id-static-decimal-format-pattern-separator-sign">pattern-separator-sign</termref></p></item>
  </ulist>
</error>

<error  spec="XQ" role="xquery" code="0101" class="DY" type="dynamic">

    <p>An error is raised if the
    namespace URI in a computed namespace constructor is bound to the predefined prefix
    <code>xmlns</code>, or if a namespace URI other than
    <code>http://www.w3.org/XML/1998/namespace</code> is bound to the
    prefix <code>xml</code>, or if the prefix <code>xml</code> is
    bound to a namespace URI other than
    <code>http://www.w3.org/XML/1998/namespace.</code></p>
</error>

<error  spec="XQ" role="xquery" code="0102" class="TY" type="type">
<p>
In an element constructor, if two or more namespace bindings in the
in-scope bindings would have the same prefix, then an error is raised
if they have different URIs; if they would have the same prefix and
URI, duplicate bindings are ignored.
</p>
</error>

<error  spec="XQ" role="xquery" code="0103" class="ST" type="static">

<p>All variables in a <code>window</code> clause must have distinct names.</p>
</error>

<error  spec="XQ" role="xquery" code="0104" class="ST" type="static">

<p>A <nt
def="TypeName">TypeName</nt> that is specified in a <code>validate</code> expression must be found in the <termref def="dt-issd">in-scope
  schema definitions</termref>
</p>
</error>

<error spec="XQ" role="xquery" code="0105" class="TY" type="type">
<p>
It is  a <termref def="dt-type-error">type error</termref>
if the content sequence in an element constructor contains a function item.</p></error>

<error spec="XQ" role="xquery" code="0106" class="ST" type="static">
<p>
It is a <termref def="dt-static-error">static error</termref>
if a function's annotations contain more than one annotation named <code>%private</code> or <code>%public</code>.</p>

<p>
It is a <termref def="dt-static-error">static error</termref> if a
function's annotations contain more than one annotation named
<code>%deterministic</code> or <code>%nondeterministic</code>. </p>
</error>


<!-- ############ -->

<error spec="XQ" role="xquery" code="0107" class="ST" type="static">
<p>
It is a <termref def="dt-static-error">static error</termref> if the initializer of the context item  <termref def="dt-depends-on-context-item">depends on</termref> the context item.
</p>
</error>

<error spec="XQ" role="xquery" code="0108" class="ST" type="static">
<p>
It is a <termref def="dt-static-error">static error</termref> if an <termref def="dt-output-declaration">output declaration</termref> occurs in a  <termref def="dt-library-module">library module</termref>.
</p>
</error>

<error spec="XQ" role="xquery" code="0109" class="ST" type="static">
<p>
It is a <termref def="dt-static-error">static error</termref> if the local name of an output declaration in the <code>http://www.w3.org/2009/xquery-serialization</code> namespace is not  one of
the serialization parameter names listed in <specref
ref="id-xq-serialization-parameters"/>.
</p>
</error>

<error spec="XQ" role="xquery" code="0110" class="ST" type="static">
<p>
It is a <termref def="dt-static-error">static error</termref> if the same serialization parameter is used more than once in an <termref def="dt-output-declaration">output declaration</termref>.</p>

</error>


<error  spec="XQ" role="xquery" code="0111" class="ST" type="static">

<p>It is a  <termref def="dt-static-error">static error</termref> for a query prolog to contain two decimal
formats with the same name, or to contain two default decimal formats.
<errorref class="ST" code="0111"/>.
</p>
</error>

<error  spec="XP" code="0112" class="ST" type="static">
<p>It is a <termref def="dt-static-error">static error</termref> to partially apply or create a function item for a function which accesses the focus <errorref class="ST" code="0112"/>.
</p>
</error>

<error  spec="XQ" role="xquery" code="0113" class="ST" type="static">
<p>
Specifying a <nt def="VarValue">VarValue</nt> or <nt def="VarDefaultValue">VarDefaultValue</nt> for a context item declaration
in a library module is a  <termref def="dt-static-error">static error</termref>.
</p>
</error>


<!--


<error  spec="XQ" role="xquery" code="010X" class="ST" type="static">
<p>
</p>
</error>

<error  spec="XQ" role="xquery" code="010X" class="ST" type="static">
<p>
</p>
</error>

<error  spec="XQ" role="xquery" code="010X" class="ST" type="static">
<p>
</p>
</error>

<error  spec="XQ" role="xquery" code="010X" class="ST" type="static">
<p>
</p>
</error>

<error  spec="XQ" role="xquery" code="010X" class="ST" type="static">
<p>
</p>
</error>

-->

</error-list>
</div1>


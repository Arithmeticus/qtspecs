<?xml version="1.0" encoding="UTF-8"?><table>
<tbody>
<tr role="document" id="ex-D1">
<td colspan="3">// Document node D1</td>
</tr>
<tr role="document">
<td>dm:base-uri(D1)</td>
<td> = </td>
<td>xs:anyURI("http://www.example.com/catalog.xml")</td>
</tr>
<tr role="document">
<td>dm:node-kind(D1)</td>
<td> = </td>
<td>"document"</td>
</tr>
<tr role="document">
<td>dm:string-value(D1)</td>
<td>=</td>
<td>"  Staind:  Been  Awhile  Tee  Black  (1-sided)  \n            Lyrics  from  the  hit  song  'It's  Been  Awhile'\n            are  shown  in  white,  beneath  the  large\n            'Flock  &amp;  Weld'  Staind  logo.\n          25.00    It's  Been  A  While    10.99    Staind  "</td>
</tr>
<tr role="document">
<td>dm:typed-value(D1)</td>
<td>=</td>
<td>xs:untypedAtomic("  Staind:  Been  Awhile  Tee  Black  (1-sided)  \n            Lyrics  from  the  hit  song  'It's  Been  Awhile'\n            are  shown  in  white,  beneath  the  large\n            'Flock  &amp;  Weld'  Staind  logo.\n          25.00    It's  Been  A  While    10.99    Staind  ")</td>
</tr>
<tr role="document">
<td>dm:children(D1)</td>
<td> = </td>
<td>([<loc href="#ex-P1">P1</loc>], [<loc href="#ex-E1">E1</loc>])</td>
</tr>
<tr>
<td colspan="3"> </td>
</tr>
<tr role="namespace" id="ex-N1">
<td colspan="3">// Namespace node N1</td>
</tr>
<tr role="namespace">
<td>dm:node-kind(N1)</td>
<td> = </td>
<td>"namespace"</td>
</tr>
<tr role="namespace">
<td>dm:node-name(N1)</td>
<td> = </td>
<td>xs:QName("", "xml")</td>
</tr>
<tr role="namespace">
<td>dm:string-value(N1)</td>
<td>=</td>
<td>"http://www.w3.org/XML/1998/namespace"</td>
</tr>
<tr role="namespace">
<td>dm:typed-value(N1)</td>
<td>=</td>
<td>"http://www.w3.org/XML/1998/namespace"</td>
</tr>
<tr>
<td colspan="3"> </td>
</tr>
<tr role="namespace" id="ex-N2">
<td colspan="3">// Namespace node N2</td>
</tr>
<tr role="namespace">
<td>dm:node-kind(N2)</td>
<td> = </td>
<td>"namespace"</td>
</tr>
<tr role="namespace">
<td>dm:node-name(N2)</td>
<td> = </td>
<td>()</td>
</tr>
<tr role="namespace">
<td>dm:string-value(N2)</td>
<td>=</td>
<td>"http://www.example.com/catalog"</td>
</tr>
<tr role="namespace">
<td>dm:typed-value(N2)</td>
<td>=</td>
<td>"http://www.example.com/catalog"</td>
</tr>
<tr>
<td colspan="3"> </td>
</tr>
<tr role="namespace" id="ex-N3">
<td colspan="3">// Namespace node N3</td>
</tr>
<tr role="namespace">
<td>dm:node-kind(N3)</td>
<td> = </td>
<td>"namespace"</td>
</tr>
<tr role="namespace">
<td>dm:node-name(N3)</td>
<td> = </td>
<td>xs:QName("", "html")</td>
</tr>
<tr role="namespace">
<td>dm:string-value(N3)</td>
<td>=</td>
<td>"http://www.w3.org/1999/xhtml"</td>
</tr>
<tr role="namespace">
<td>dm:typed-value(N3)</td>
<td>=</td>
<td>"http://www.w3.org/1999/xhtml"</td>
</tr>
<tr>
<td colspan="3"> </td>
</tr>
<tr role="namespace" id="ex-N4">
<td colspan="3">// Namespace node N4</td>
</tr>
<tr role="namespace">
<td>dm:node-kind(N4)</td>
<td> = </td>
<td>"namespace"</td>
</tr>
<tr role="namespace">
<td>dm:node-name(N4)</td>
<td> = </td>
<td>xs:QName("", "xlink")</td>
</tr>
<tr role="namespace">
<td>dm:string-value(N4)</td>
<td>=</td>
<td>"http://www.w3.org/1999/xlink"</td>
</tr>
<tr role="namespace">
<td>dm:typed-value(N4)</td>
<td>=</td>
<td>"http://www.w3.org/1999/xlink"</td>
</tr>
<tr>
<td colspan="3"> </td>
</tr>
<tr role="namespace" id="ex-N5">
<td colspan="3">// Namespace node N5</td>
</tr>
<tr role="namespace">
<td>dm:node-kind(N5)</td>
<td> = </td>
<td>"namespace"</td>
</tr>
<tr role="namespace">
<td>dm:node-name(N5)</td>
<td> = </td>
<td>xs:QName("", "xsi")</td>
</tr>
<tr role="namespace">
<td>dm:string-value(N5)</td>
<td>=</td>
<td>"http://www.w3.org/2001/XMLSchema-instance"</td>
</tr>
<tr role="namespace">
<td>dm:typed-value(N5)</td>
<td>=</td>
<td>"http://www.w3.org/2001/XMLSchema-instance"</td>
</tr>
<tr>
<td colspan="3"> </td>
</tr>
<tr id="ex-P1">
<td colspan="3">// Processing Instruction node P1</td>
</tr>
<tr role="processing-instruction">
<td>dm:base-uri(P1)</td>
<td> = </td>
<td>xs:anyURI("http://www.example.com/catalog.xml")</td>
</tr>
<tr role="processing-instruction">
<td>dm:node-kind(P1)</td>
<td> = </td>
<td>"processing-instruction"</td>
</tr>
<tr role="processing-instruction">
<td>dm:node-name(P1)</td>
<td> = </td>
<td>xs:QName("", "xml-stylesheet")</td>
</tr>
<tr role="processing-instruction">
<td>dm:string-value(P1)</td>
<td>=</td>
<td>"type="text/xsl"  href="dm-example.xsl""</td>
</tr>
<tr role="processing-instruction">
<td>dm:typed-value(P1)</td>
<td>=</td>
<td>"type="text/xsl"  href="dm-example.xsl""</td>
</tr>
<tr role="processing-instruction">
<td>dm:parent(P1)</td>
<td> = </td>
<td>([<loc href="#ex-D1">D1</loc>])</td>
</tr>
<tr>
<td colspan="3"> </td>
</tr>
<tr role="element" id="ex-E1">
<td colspan="3">// Element node E1</td>
</tr>
<tr role="element">
<td>dm:base-uri(E1)</td>
<td> = </td>
<td>xs:anyURI("http://www.example.com/catalog.xml")</td>
</tr>
<tr role="element">
<td>dm:node-kind(E1)</td>
<td> = </td>
<td>"element"</td>
</tr>
<tr role="element">
<td>dm:node-name(E1)</td>
<td> = </td>
<td>xs:QName("http://www.example.com/catalog", "catalog")</td>
</tr>
<tr role="element">
<td>dm:string-value(E1)</td>
<td>=</td>
<td>"  Staind:  Been  Awhile  Tee  Black  (1-sided)  \n            Lyrics  from  the  hit  song  'It's  Been  Awhile'\n            are  shown  in  white,  beneath  the  large\n            'Flock  &amp;  Weld'  Staind  logo.\n          25.00    It's  Been  A  While    10.99    Staind  "</td>
</tr>
<tr role="element">
<td>dm:typed-value(E1)</td>
<td> = </td>
<td>fn:error()</td>
</tr>
<tr role="element">
<td>dm:type-name(E1)</td>
<td> = </td>
<td>anon:TYP000001</td>
</tr>
<tr role="element">
<td>dm:is-id(E1)</td>
<td> = </td>
<td>false</td>
</tr>
<tr role="element">
<td>dm:is-idrefs(E1)</td>
<td> = </td>
<td>false</td>
</tr>
<tr role="element">
<td>dm:parent(E1)</td>
<td> = </td>
<td>([<loc href="#ex-D1">D1</loc>])</td>
</tr>
<tr role="element">
<td>dm:children(E1)</td>
<td> = </td>
<td>([<loc href="#ex-C1">C1</loc>], [<loc href="#ex-E2">E2</loc>], [<loc href="#ex-E7">E7</loc>])</td>
</tr>
<tr role="element">
<td>dm:attributes(E1)</td>
<td> = </td>
<td>([<loc href="#ex-A1">A1</loc>], [<loc href="#ex-A2">A2</loc>], [<loc href="#ex-A3">A3</loc>])</td>
</tr>
<tr role="element">
<td>dm:namespace-nodes(E1)</td>
<td> = </td>
<td>([<loc href="#ex-N1">N1</loc>], [<loc href="#ex-N2">N2</loc>], [<loc href="#ex-N3">N3</loc>], [<loc href="#ex-N4">N4</loc>], [<loc href="#ex-N5">N5</loc>])</td>
</tr>
<tr role="element">
<td>dm:namespace-bindings(E1)</td>
<td> = </td>
<td>("xml", "http://www.w3.org/XML/1998/namespace", "", "http://www.example.com/catalog", "html", "http://www.w3.org/1999/xhtml", "xlink", "http://www.w3.org/1999/xlink", "xsi", "http://www.w3.org/2001/XMLSchema-instance")</td>
</tr>
<tr>
<td colspan="3"> </td>
</tr>
<tr role="attribute" id="ex-A1">
<td colspan="3">// Attribute node A1</td>
</tr>
<tr role="attribute">
<td>dm:node-kind(A1)</td>
<td> = </td>
<td>"attribute"</td>
</tr>
<tr role="attribute">
<td>dm:node-name(A1)</td>
<td> = </td>
<td>xs:QName("http://www.w3.org/2001/XMLSchema-instance", "xsi:schemaLocation")</td>
</tr>
<tr role="attribute">
<td>dm:string-value(A1)</td>
<td>=</td>
<td>"http://www.example.com/catalog                                                            dm-example.xsd"</td>
</tr>
<tr role="attribute">
<td>dm:typed-value(A1)</td>
<td> = </td>
<td>(xs:anyURI("http://www.example.com/catalog"), xs:anyURI("catalog.xsd"))</td>
</tr>
<tr role="attribute">
<td>dm:type-name(A1)</td>
<td> = </td>
<td>anon:TYP000002</td>
</tr>
<tr role="attribute">
<td>dm:is-id(A1)</td>
<td> = </td>
<td>false</td>
</tr>
<tr role="attribute">
<td>dm:is-idrefs(A1)</td>
<td> = </td>
<td>false</td>
</tr>
<tr role="attribute">
<td>dm:parent(A1)</td>
<td> = </td>
<td>([<loc href="#ex-E1">E1</loc>])</td>
</tr>
<tr>
<td colspan="3"> </td>
</tr>
<tr role="attribute" id="ex-A2">
<td colspan="3">// Attribute node A2</td>
</tr>
<tr role="attribute">
<td>dm:node-kind(A2)</td>
<td> = </td>
<td>"attribute"</td>
</tr>
<tr role="attribute">
<td>dm:node-name(A2)</td>
<td> = </td>
<td>xs:QName("http://www.w3.org/XML/1998/namespace", "xml:lang")</td>
</tr>
<tr role="attribute">
<td>dm:string-value(A2)</td>
<td>=</td>
<td>"en"</td>
</tr>
<tr role="attribute">
<td>dm:typed-value(A2)</td>
<td> = </td>
<td>"en"</td>
</tr>
<tr role="attribute">
<td>dm:type-name(A2)</td>
<td> = </td>
<td>xs:NMTOKEN</td>
</tr>
<tr role="attribute">
<td>dm:is-id(A2)</td>
<td> = </td>
<td>false</td>
</tr>
<tr role="attribute">
<td>dm:is-idrefs(A2)</td>
<td> = </td>
<td>false</td>
</tr>
<tr role="attribute">
<td>dm:parent(A2)</td>
<td> = </td>
<td>([<loc href="#ex-E1">E1</loc>])</td>
</tr>
<tr>
<td colspan="3"> </td>
</tr>
<tr role="attribute" id="ex-A3">
<td colspan="3">// Attribute node A3</td>
</tr>
<tr role="attribute">
<td>dm:node-kind(A3)</td>
<td> = </td>
<td>"attribute"</td>
</tr>
<tr role="attribute">
<td>dm:node-name(A3)</td>
<td> = </td>
<td>xs:QName("", "version")</td>
</tr>
<tr role="attribute">
<td>dm:string-value(A3)</td>
<td>=</td>
<td>"0.1"</td>
</tr>
<tr role="attribute">
<td>dm:typed-value(A3)</td>
<td> = </td>
<td>"0.1"</td>
</tr>
<tr role="attribute">
<td>dm:type-name(A3)</td>
<td> = </td>
<td>xs:string</td>
</tr>
<tr role="attribute">
<td>dm:is-id(A3)</td>
<td> = </td>
<td>false</td>
</tr>
<tr role="attribute">
<td>dm:is-idrefs(A3)</td>
<td> = </td>
<td>false</td>
</tr>
<tr role="attribute">
<td>dm:parent(A3)</td>
<td> = </td>
<td>([<loc href="#ex-E1">E1</loc>])</td>
</tr>
<tr>
<td colspan="3"> </td>
</tr>
<tr role="comment" id="ex-C1">
<td colspan="3">// Comment node C1</td>
</tr>
<tr role="comment">
<td>dm:base-uri(C1)</td>
<td> = </td>
<td>xs:anyURI("http://www.example.com/catalog.xml")</td>
</tr>
<tr role="comment">
<td>dm:node-kind(C1)</td>
<td> = </td>
<td>"comment"</td>
</tr>
<tr role="comment">
<td>dm:string-value(C1)</td>
<td>=</td>
<td>"  This  example  is  for  data  model  illustration  only.\n          It  does  not  demonstrate  good  schema  design.  "</td>
</tr>
<tr role="comment">
<td>dm:typed-value(C1)</td>
<td> = </td>
<td>"  This  example  is  for  data  model  illustration  only.\n          It  does  not  demonstrate  good  schema  design.  "</td>
</tr>
<tr role="comment">
<td>dm:parent(C1)</td>
<td> = </td>
<td>([<loc href="#ex-E1">E1</loc>])</td>
</tr>
<tr>
<td colspan="3"> </td>
</tr>
<tr role="element" id="ex-E2">
<td colspan="3">// Element node E2</td>
</tr>
<tr role="element">
<td>dm:base-uri(E2)</td>
<td> = </td>
<td>xs:anyURI("http://www.example.com/catalog.xml")</td>
</tr>
<tr role="element">
<td>dm:node-kind(E2)</td>
<td> = </td>
<td>"element"</td>
</tr>
<tr role="element">
<td>dm:node-name(E2)</td>
<td> = </td>
<td>xs:QName("http://www.example.com/catalog", "tshirt")</td>
</tr>
<tr role="element">
<td>dm:string-value(E2)</td>
<td>=</td>
<td>"  Staind:  Been  Awhile  Tee  Black  (1-sided)  \n            Lyrics  from  the  hit  song  'It's  Been  Awhile'\n            are  shown  in  white,  beneath  the  large\n            'Flock  &amp;  Weld'  Staind  logo.\n          25.00  "</td>
</tr>
<tr role="element">
<td>dm:typed-value(E2)</td>
<td> = </td>
<td>fn:error()</td>
</tr>
<tr role="element">
<td>dm:type-name(E2)</td>
<td> = </td>
<td>cat:tshirtType</td>
</tr>
<tr role="element">
<td>dm:is-id(E2)</td>
<td> = </td>
<td>false</td>
</tr>
<tr role="element">
<td>dm:is-idrefs(E2)</td>
<td> = </td>
<td>false</td>
</tr>
<tr role="element">
<td>dm:parent(E2)</td>
<td> = </td>
<td>([<loc href="#ex-E1">E1</loc>])</td>
</tr>
<tr role="element">
<td>dm:children(E2)</td>
<td> = </td>
<td>([<loc href="#ex-E3">E3</loc>], [<loc href="#ex-E4">E4</loc>], [<loc href="#ex-E6">E6</loc>])</td>
</tr>
<tr role="element">
<td>dm:attributes(E2)</td>
<td> = </td>
<td>([<loc href="#ex-A4">A4</loc>], [<loc href="#ex-A5">A5</loc>], [<loc href="#ex-A6">A6</loc>], [<loc href="#ex-A7">A7</loc>])</td>
</tr>
<tr role="element">
<td>dm:namespace-nodes(E2)</td>
<td> = </td>
<td>([<loc href="#ex-N1">N1</loc>], [<loc href="#ex-N2">N2</loc>], [<loc href="#ex-N3">N3</loc>], [<loc href="#ex-N4">N4</loc>], [<loc href="#ex-N5">N5</loc>])</td>
</tr>
<tr role="element">
<td>dm:namespace-bindings(E2)</td>
<td> = </td>
<td>("xml", "http://www.w3.org/XML/1998/namespace", "", "http://www.example.com/catalog", "html", "http://www.w3.org/1999/xhtml", "xlink", "http://www.w3.org/1999/xlink", "xsi", "http://www.w3.org/2001/XMLSchema-instance")</td>
</tr>
<tr>
<td colspan="3"> </td>
</tr>
<tr role="attribute" id="ex-A4">
<td colspan="3">// Attribute node A4</td>
</tr>
<tr role="attribute">
<td>dm:node-kind(A4)</td>
<td> = </td>
<td>"attribute"</td>
</tr>
<tr role="attribute">
<td>dm:node-name(A4)</td>
<td> = </td>
<td>xs:QName("", "code")</td>
</tr>
<tr role="attribute">
<td>dm:string-value(A4)</td>
<td>=</td>
<td>"T1534017"</td>
</tr>
<tr role="attribute">
<td>dm:typed-value(A4)</td>
<td> = </td>
<td>xs:ID("T1534017")</td>
</tr>
<tr role="attribute">
<td>dm:type-name(A4)</td>
<td> = </td>
<td>xs:ID</td>
</tr>
<tr role="attribute">
<td>dm:is-id(A4)</td>
<td> = </td>
<td>true</td>
</tr>
<tr role="attribute">
<td>dm:is-idrefs(A4)</td>
<td> = </td>
<td>false</td>
</tr>
<tr role="attribute">
<td>dm:parent(A4)</td>
<td> = </td>
<td>([<loc href="#ex-E2">E2</loc>])</td>
</tr>
<tr>
<td colspan="3"> </td>
</tr>
<tr role="attribute" id="ex-A5">
<td colspan="3">// Attribute node A5</td>
</tr>
<tr role="attribute">
<td>dm:node-kind(A5)</td>
<td> = </td>
<td>"attribute"</td>
</tr>
<tr role="attribute">
<td>dm:node-name(A5)</td>
<td> = </td>
<td>xs:QName("", "label")</td>
</tr>
<tr role="attribute">
<td>dm:string-value(A5)</td>
<td>=</td>
<td>"Staind  :  Been  Awhile"</td>
</tr>
<tr role="attribute">
<td>dm:typed-value(A5)</td>
<td> = </td>
<td>xs:token("Staind : Been Awhile")</td>
</tr>
<tr role="attribute">
<td>dm:type-name(A5)</td>
<td> = </td>
<td>xs:token</td>
</tr>
<tr role="attribute">
<td>dm:is-id(A5)</td>
<td> = </td>
<td>false</td>
</tr>
<tr role="attribute">
<td>dm:is-idrefs(A5)</td>
<td> = </td>
<td>false</td>
</tr>
<tr role="attribute">
<td>dm:parent(A5)</td>
<td> = </td>
<td>([<loc href="#ex-E2">E2</loc>])</td>
</tr>
<tr>
<td colspan="3"> </td>
</tr>
<tr role="attribute" id="ex-A6">
<td colspan="3">// Attribute node A6</td>
</tr>
<tr role="attribute">
<td>dm:node-kind(A6)</td>
<td> = </td>
<td>"attribute"</td>
</tr>
<tr role="attribute">
<td>dm:node-name(A6)</td>
<td> = </td>
<td>xs:QName("http://www.w3.org/1999/xlink", "xlink:href")</td>
</tr>
<tr role="attribute">
<td>dm:string-value(A6)</td>
<td>=</td>
<td>"http://example.com/0,,1655091,00.html"</td>
</tr>
<tr role="attribute">
<td>dm:typed-value(A6)</td>
<td> = </td>
<td>xs:anyURI("http://example.com/0,,1655091,00.html")</td>
</tr>
<tr role="attribute">
<td>dm:type-name(A6)</td>
<td> = </td>
<td>xs:anyURI</td>
</tr>
<tr role="attribute">
<td>dm:is-id(A6)</td>
<td> = </td>
<td>false</td>
</tr>
<tr role="attribute">
<td>dm:is-idrefs(A6)</td>
<td> = </td>
<td>false</td>
</tr>
<tr role="attribute">
<td>dm:parent(A6)</td>
<td> = </td>
<td>([<loc href="#ex-E2">E2</loc>])</td>
</tr>
<tr>
<td colspan="3"> </td>
</tr>
<tr role="attribute" id="ex-A7">
<td colspan="3">// Attribute node A7</td>
</tr>
<tr role="attribute">
<td>dm:node-kind(A7)</td>
<td> = </td>
<td>"attribute"</td>
</tr>
<tr role="attribute">
<td>dm:node-name(A7)</td>
<td> = </td>
<td>xs:QName("", "sizes")</td>
</tr>
<tr role="attribute">
<td>dm:string-value(A7)</td>
<td>=</td>
<td>"M  L  XL"</td>
</tr>
<tr role="attribute">
<td>dm:typed-value(A7)</td>
<td> = </td>
<td>(xs:token("M"), xs:token("L"), xs:token("XL"))</td>
</tr>
<tr role="attribute">
<td>dm:type-name(A7)</td>
<td> = </td>
<td>cat:sizeList</td>
</tr>
<tr role="attribute">
<td>dm:is-id(A7)</td>
<td> = </td>
<td>false</td>
</tr>
<tr role="attribute">
<td>dm:is-idrefs(A7)</td>
<td> = </td>
<td>false</td>
</tr>
<tr role="attribute">
<td>dm:parent(A7)</td>
<td> = </td>
<td>([<loc href="#ex-E2">E2</loc>])</td>
</tr>
<tr>
<td colspan="3"> </td>
</tr>
<tr role="element" id="ex-E3">
<td colspan="3">// Element node E3</td>
</tr>
<tr role="element">
<td>dm:base-uri(E3)</td>
<td> = </td>
<td>xs:anyURI("http://www.example.com/catalog.xml")</td>
</tr>
<tr role="element">
<td>dm:node-kind(E3)</td>
<td> = </td>
<td>"element"</td>
</tr>
<tr role="element">
<td>dm:node-name(E3)</td>
<td> = </td>
<td>xs:QName("http://www.example.com/catalog", "title")</td>
</tr>
<tr role="element">
<td>dm:string-value(E3)</td>
<td>=</td>
<td>"Staind:  Been  Awhile  Tee  Black  (1-sided)"</td>
</tr>
<tr role="element">
<td>dm:typed-value(E3)</td>
<td> = </td>
<td>xs:token("Staind: Been Awhile Tee Black (1-sided)")</td>
</tr>
<tr role="element">
<td>dm:type-name(E3)</td>
<td> = </td>
<td>xs:token</td>
</tr>
<tr role="element">
<td>dm:is-id(E3)</td>
<td> = </td>
<td>false</td>
</tr>
<tr role="element">
<td>dm:is-idrefs(E3)</td>
<td> = </td>
<td>false</td>
</tr>
<tr role="element">
<td>dm:parent(E3)</td>
<td> = </td>
<td>([<loc href="#ex-E2">E2</loc>])</td>
</tr>
<tr role="element">
<td>dm:children(E3)</td>
<td> = </td>
<td>([<loc href="#ex-T1">T1</loc>])</td>
</tr>
<tr role="element">
<td>dm:attributes(E3)</td>
<td> = </td>
<td>()</td>
</tr>
<tr role="element">
<td>dm:namespace-nodes(E3)</td>
<td> = </td>
<td>([<loc href="#ex-N1">N1</loc>], [<loc href="#ex-N2">N2</loc>], [<loc href="#ex-N3">N3</loc>], [<loc href="#ex-N4">N4</loc>], [<loc href="#ex-N5">N5</loc>])</td>
</tr>
<tr role="element">
<td>dm:namespace-bindings(E3)</td>
<td> = </td>
<td>("xml", "http://www.w3.org/XML/1998/namespace", "", "http://www.example.com/catalog", "html", "http://www.w3.org/1999/xhtml", "xlink", "http://www.w3.org/1999/xlink", "xsi", "http://www.w3.org/2001/XMLSchema-instance")</td>
</tr>
<tr>
<td colspan="3"> </td>
</tr>
<tr role="text" id="ex-T1">
<td colspan="3">// Text node T1</td>
</tr>
<tr role="text">
<td>dm:base-uri(T1)</td>
<td> = </td>
<td>xs:anyURI("http://www.example.com/catalog.xml")</td>
</tr>
<tr role="text">
<td>dm:node-kind(T1)</td>
<td> = </td>
<td>"text"</td>
</tr>
<tr role="text">
<td>dm:string-value(T1)</td>
<td>=</td>
<td>"Staind:  Been  Awhile  Tee  Black  (1-sided)"</td>
</tr>
<tr role="text">
<td>dm:typed-value(T1)</td>
<td> = </td>
<td>xs:untypedAtomic("Staind:  Been  Awhile  Tee  Black  (1-sided)")</td>
</tr>
<tr role="text">
<td>dm:type-name(T1)</td>
<td> = </td>
<td>xs:untypedAtomic</td>
</tr>
<tr role="text">
<td>dm:parent(T1)</td>
<td> = </td>
<td>([<loc href="#ex-E3">E3</loc>])</td>
</tr>
<tr>
<td colspan="3"> </td>
</tr>
<tr role="element" id="ex-E4">
<td colspan="3">// Element node E4</td>
</tr>
<tr role="element">
<td>dm:base-uri(E4)</td>
<td> = </td>
<td>xs:anyURI("http://www.example.com/catalog.xml")</td>
</tr>
<tr role="element">
<td>dm:node-kind(E4)</td>
<td> = </td>
<td>"element"</td>
</tr>
<tr role="element">
<td>dm:node-name(E4)</td>
<td> = </td>
<td>xs:QName("http://www.example.com/catalog", "description")</td>
</tr>
<tr role="element">
<td>dm:string-value(E4)</td>
<td>=</td>
<td>"\n            Lyrics  from  the  hit  song  'It's  Been  Awhile'\n            are  shown  in  white,  beneath  the  large\n            'Flock  &amp;  Weld'  Staind  logo.\n        "</td>
</tr>
<tr role="element">
<td>dm:typed-value(E4)</td>
<td> = </td>
<td>xs:untypedAtomic("\n            Lyrics  from  the  hit  song  'It's  Been  Awhile'\n            are  shown  in  white,  beneath  the  large\n            'Flock  &amp;  Weld'  Staind  logo.\n        ")</td>
</tr>
<tr role="element">
<td>dm:type-name(E4)</td>
<td> = </td>
<td>cat:description</td>
</tr>
<tr role="element">
<td>dm:is-id(E4)</td>
<td> = </td>
<td>false</td>
</tr>
<tr role="element">
<td>dm:is-idrefs(E4)</td>
<td> = </td>
<td>false</td>
</tr>
<tr role="element">
<td>dm:parent(E4)</td>
<td> = </td>
<td>([<loc href="#ex-E2">E2</loc>])</td>
</tr>
<tr role="element">
<td>dm:children(E4)</td>
<td> = </td>
<td>([<loc href="#ex-E5">E5</loc>])</td>
</tr>
<tr role="element">
<td>dm:attributes(E4)</td>
<td> = </td>
<td>()</td>
</tr>
<tr role="element">
<td>dm:namespace-nodes(E4)</td>
<td> = </td>
<td>([<loc href="#ex-N1">N1</loc>], [<loc href="#ex-N2">N2</loc>], [<loc href="#ex-N3">N3</loc>], [<loc href="#ex-N4">N4</loc>], [<loc href="#ex-N5">N5</loc>])</td>
</tr>
<tr role="element">
<td>dm:namespace-bindings(E4)</td>
<td> = </td>
<td>("xml", "http://www.w3.org/XML/1998/namespace", "", "http://www.example.com/catalog", "html", "http://www.w3.org/1999/xhtml", "xlink", "http://www.w3.org/1999/xlink", "xsi", "http://www.w3.org/2001/XMLSchema-instance")</td>
</tr>
<tr>
<td colspan="3"> </td>
</tr>
<tr role="element" id="ex-E5">
<td colspan="3">// Element node E5</td>
</tr>
<tr role="element">
<td>dm:base-uri(E5)</td>
<td> = </td>
<td>xs:anyURI("http://www.example.com/catalog.xml")</td>
</tr>
<tr role="element">
<td>dm:node-kind(E5)</td>
<td> = </td>
<td>"element"</td>
</tr>
<tr role="element">
<td>dm:node-name(E5)</td>
<td> = </td>
<td>xs:QName("http://www.w3.org/1999/xhtml", "html:p")</td>
</tr>
<tr role="element">
<td>dm:string-value(E5)</td>
<td>=</td>
<td>"\n            Lyrics  from  the  hit  song  'It's  Been  Awhile'\n            are  shown  in  white,  beneath  the  large\n            'Flock  &amp;  Weld'  Staind  logo.\n        "</td>
</tr>
<tr role="element">
<td>dm:typed-value(E5)</td>
<td> = </td>
<td>xs:untypedAtomic("\n            Lyrics  from  the  hit  song  'It's  Been  Awhile'\n            are  shown  in  white,  beneath  the  large\n            'Flock  &amp;  Weld'  Staind  logo.\n        ")</td>
</tr>
<tr role="element">
<td>dm:type-name(E5)</td>
<td> = </td>
<td>xs:anyType</td>
</tr>
<tr role="element">
<td>dm:is-id(E5)</td>
<td> = </td>
<td>false</td>
</tr>
<tr role="element">
<td>dm:is-idrefs(E5)</td>
<td> = </td>
<td>false</td>
</tr>
<tr role="element">
<td>dm:parent(E5)</td>
<td> = </td>
<td>([<loc href="#ex-E4">E4</loc>])</td>
</tr>
<tr role="element">
<td>dm:children(E5)</td>
<td> = </td>
<td>([<loc href="#ex-T2">T2</loc>])</td>
</tr>
<tr role="element">
<td>dm:attributes(E5)</td>
<td> = </td>
<td>()</td>
</tr>
<tr role="element">
<td>dm:namespace-nodes(E5)</td>
<td> = </td>
<td>([<loc href="#ex-N1">N1</loc>], [<loc href="#ex-N2">N2</loc>], [<loc href="#ex-N3">N3</loc>], [<loc href="#ex-N4">N4</loc>], [<loc href="#ex-N5">N5</loc>])</td>
</tr>
<tr role="element">
<td>dm:namespace-bindings(E5)</td>
<td> = </td>
<td>("xml", "http://www.w3.org/XML/1998/namespace", "", "http://www.example.com/catalog", "html", "http://www.w3.org/1999/xhtml", "xlink", "http://www.w3.org/1999/xlink", "xsi", "http://www.w3.org/2001/XMLSchema-instance")</td>
</tr>
<tr>
<td colspan="3"> </td>
</tr>
<tr role="text" id="ex-T2">
<td colspan="3">// Text node T2</td>
</tr>
<tr role="text">
<td>dm:base-uri(T2)</td>
<td> = </td>
<td>xs:anyURI("http://www.example.com/catalog.xml")</td>
</tr>
<tr role="text">
<td>dm:node-kind(T2)</td>
<td> = </td>
<td>"text"</td>
</tr>
<tr role="text">
<td>dm:string-value(T2)</td>
<td>=</td>
<td>"\n            Lyrics  from  the  hit  song  'It's  Been  Awhile'\n            are  shown  in  white,  beneath  the  large\n            'Flock  &amp;  Weld'  Staind  logo.\n        "</td>
</tr>
<tr role="text">
<td>dm:typed-value(T2)</td>
<td> = </td>
<td>xs:untypedAtomic("\n            Lyrics  from  the  hit  song  'It's  Been  Awhile'\n            are  shown  in  white,  beneath  the  large\n            'Flock  &amp;  Weld'  Staind  logo.\n        ")</td>
</tr>
<tr role="text">
<td>dm:type-name(T2)</td>
<td> = </td>
<td>xs:untypedAtomic</td>
</tr>
<tr role="text">
<td>dm:parent(T2)</td>
<td> = </td>
<td>([<loc href="#ex-E5">E5</loc>])</td>
</tr>
<tr>
<td colspan="3"> </td>
</tr>
<tr role="element" id="ex-E6">
<td colspan="3">// Element node E6</td>
</tr>
<tr role="element">
<td>dm:base-uri(E6)</td>
<td> = </td>
<td>xs:anyURI("http://www.example.com/catalog.xml")</td>
</tr>
<tr role="element">
<td>dm:node-kind(E6)</td>
<td> = </td>
<td>"element"</td>
</tr>
<tr role="element">
<td>dm:node-name(E6)</td>
<td> = </td>
<td>xs:QName("http://www.example.com/catalog", "price")</td>
</tr>
<tr role="element">
<td>dm:string-value(E6)</td>
<td>=</td>
<td>"25.00"</td>
</tr>
<tr role="element">
<td colspan="3">// The typed-value is based on the content type of the complex type for the element</td>
</tr>
<tr role="element">
<td>dm:typed-value(E6)</td>
<td> = </td>
<td>cat:monetaryAmount(25.0)</td>
</tr>
<tr role="element">
<td>dm:type-name(E6)</td>
<td> = </td>
<td>cat:price</td>
</tr>
<tr role="element">
<td>dm:is-id(E6)</td>
<td> = </td>
<td>false</td>
</tr>
<tr role="element">
<td>dm:is-idrefs(E6)</td>
<td> = </td>
<td>false</td>
</tr>
<tr role="element">
<td>dm:parent(E6)</td>
<td> = </td>
<td>([<loc href="#ex-E2">E2</loc>])</td>
</tr>
<tr role="element">
<td>dm:children(E6)</td>
<td> = </td>
<td>([<loc href="#ex-T3">T3</loc>])</td>
</tr>
<tr role="element">
<td>dm:attributes(E6)</td>
<td> = </td>
<td>()</td>
</tr>
<tr role="element">
<td>dm:namespace-nodes(E6)</td>
<td> = </td>
<td>([<loc href="#ex-N1">N1</loc>], [<loc href="#ex-N2">N2</loc>], [<loc href="#ex-N3">N3</loc>], [<loc href="#ex-N4">N4</loc>], [<loc href="#ex-N5">N5</loc>])</td>
</tr>
<tr role="element">
<td>dm:namespace-bindings(E6)</td>
<td> = </td>
<td>("xml", "http://www.w3.org/XML/1998/namespace", "", "http://www.example.com/catalog", "html", "http://www.w3.org/1999/xhtml", "xlink", "http://www.w3.org/1999/xlink", "xsi", "http://www.w3.org/2001/XMLSchema-instance")</td>
</tr>
<tr>
<td colspan="3"> </td>
</tr>
<tr role="text" id="ex-T3">
<td colspan="3">// Text node T3</td>
</tr>
<tr role="text">
<td>dm:base-uri(T3)</td>
<td> = </td>
<td>xs:anyURI("http://www.example.com/catalog.xml")</td>
</tr>
<tr role="text">
<td>dm:node-kind(T3)</td>
<td> = </td>
<td>"text"</td>
</tr>
<tr role="text">
<td>dm:string-value(T3)</td>
<td>=</td>
<td>"25.00"</td>
</tr>
<tr role="text">
<td>dm:typed-value(T3)</td>
<td> = </td>
<td>xs:untypedAtomic("25.00")</td>
</tr>
<tr role="text">
<td>dm:type-name(T3)</td>
<td> = </td>
<td>xs:untypedAtomic</td>
</tr>
<tr role="text">
<td>dm:parent(T3)</td>
<td> = </td>
<td>([<loc href="#ex-E6">E6</loc>])</td>
</tr>
<tr>
<td colspan="3"> </td>
</tr>
<tr role="element" id="ex-E7">
<td colspan="3">// Element node E7</td>
</tr>
<tr role="element">
<td>dm:base-uri(E7)</td>
<td> = </td>
<td>xs:anyURI("http://www.example.com/catalog.xml")</td>
</tr>
<tr role="element">
<td>dm:node-kind(E7)</td>
<td> = </td>
<td>"element"</td>
</tr>
<tr role="element">
<td>dm:node-name(E7)</td>
<td> = </td>
<td>xs:QName("http://www.example.com/catalog", "album")</td>
</tr>
<tr role="element">
<td>dm:string-value(E7)</td>
<td>=</td>
<td>"  It's  Been  A  While    10.99    Staind  "</td>
</tr>
<tr role="element">
<td>dm:typed-value(E7)</td>
<td> = </td>
<td>fn:error()</td>
</tr>
<tr role="element">
<td>dm:type-name(E7)</td>
<td> = </td>
<td>cat:albumType</td>
</tr>
<tr role="element">
<td>dm:is-id(E7)</td>
<td> = </td>
<td>false</td>
</tr>
<tr role="element">
<td>dm:is-idrefs(E7)</td>
<td> = </td>
<td>false</td>
</tr>
<tr role="element">
<td>dm:parent(E7)</td>
<td> = </td>
<td>([<loc href="#ex-E1">E1</loc>])</td>
</tr>
<tr role="element">
<td>dm:children(E7)</td>
<td> = </td>
<td>([<loc href="#ex-E8">E8</loc>], [<loc href="#ex-E9">E9</loc>], [<loc href="#ex-E10">E10</loc>], [<loc href="#ex-E11">E11</loc>])</td>
</tr>
<tr role="element">
<td>dm:attributes(E7)</td>
<td> = </td>
<td>([<loc href="#ex-A8">A8</loc>], [<loc href="#ex-A9">A9</loc>], [<loc href="#ex-A10">A10</loc>])</td>
</tr>
<tr role="element">
<td>dm:namespace-nodes(E7)</td>
<td> = </td>
<td>([<loc href="#ex-N1">N1</loc>], [<loc href="#ex-N2">N2</loc>], [<loc href="#ex-N3">N3</loc>], [<loc href="#ex-N4">N4</loc>], [<loc href="#ex-N5">N5</loc>])</td>
</tr>
<tr role="element">
<td>dm:namespace-bindings(E7)</td>
<td> = </td>
<td>("xml", "http://www.w3.org/XML/1998/namespace", "", "http://www.example.com/catalog", "html", "http://www.w3.org/1999/xhtml", "xlink", "http://www.w3.org/1999/xlink", "xsi", "http://www.w3.org/2001/XMLSchema-instance")</td>
</tr>
<tr>
<td colspan="3"> </td>
</tr>
<tr role="attribute" id="ex-A8">
<td colspan="3">// Attribute node A8</td>
</tr>
<tr role="attribute">
<td>dm:node-kind(A8)</td>
<td> = </td>
<td>"attribute"</td>
</tr>
<tr role="attribute">
<td>dm:node-name(A8)</td>
<td> = </td>
<td>xs:QName("", "code")</td>
</tr>
<tr role="attribute">
<td>dm:string-value(A8)</td>
<td>=</td>
<td>"A1481344"</td>
</tr>
<tr role="attribute">
<td>dm:typed-value(A8)</td>
<td> = </td>
<td>xs:ID("A1481344")</td>
</tr>
<tr role="attribute">
<td>dm:type-name(A8)</td>
<td> = </td>
<td>xs:ID</td>
</tr>
<tr role="attribute">
<td>dm:is-id(A8)</td>
<td> = </td>
<td>true</td>
</tr>
<tr role="attribute">
<td>dm:is-idrefs(A8)</td>
<td> = </td>
<td>false</td>
</tr>
<tr role="attribute">
<td>dm:parent(A8)</td>
<td> = </td>
<td>([<loc href="#ex-E7">E7</loc>])</td>
</tr>
<tr>
<td colspan="3"> </td>
</tr>
<tr role="attribute" id="ex-A9">
<td colspan="3">// Attribute node A9</td>
</tr>
<tr role="attribute">
<td>dm:node-kind(A9)</td>
<td> = </td>
<td>"attribute"</td>
</tr>
<tr role="attribute">
<td>dm:node-name(A9)</td>
<td> = </td>
<td>xs:QName("", "label")</td>
</tr>
<tr role="attribute">
<td>dm:string-value(A9)</td>
<td>=</td>
<td>"Staind  :  Its  Been  A  While"</td>
</tr>
<tr role="attribute">
<td>dm:typed-value(A9)</td>
<td> = </td>
<td>xs:token("Staind : Its Been A While")</td>
</tr>
<tr role="attribute">
<td>dm:type-name(A9)</td>
<td> = </td>
<td>xs:token</td>
</tr>
<tr role="attribute">
<td>dm:is-id(A9)</td>
<td> = </td>
<td>false</td>
</tr>
<tr role="attribute">
<td>dm:is-idrefs(A9)</td>
<td> = </td>
<td>false</td>
</tr>
<tr role="attribute">
<td>dm:parent(A9)</td>
<td> = </td>
<td>([<loc href="#ex-E7">E7</loc>])</td>
</tr>
<tr>
<td colspan="3"> </td>
</tr>
<tr role="attribute" id="ex-A10">
<td colspan="3">// Attribute node A10</td>
</tr>
<tr role="attribute">
<td>dm:node-kind(A10)</td>
<td> = </td>
<td>"attribute"</td>
</tr>
<tr role="attribute">
<td>dm:node-name(A10)</td>
<td> = </td>
<td>xs:QName("", "formats")</td>
</tr>
<tr role="attribute">
<td>dm:string-value(A10)</td>
<td>=</td>
<td>"CD"</td>
</tr>
<tr role="attribute">
<td>dm:typed-value(A10)</td>
<td> = </td>
<td>cat:formatType("CD")</td>
</tr>
<tr role="attribute">
<td>dm:type-name(A10)</td>
<td> = </td>
<td>cat:formatType</td>
</tr>
<tr role="attribute">
<td>dm:is-id(A10)</td>
<td> = </td>
<td>false</td>
</tr>
<tr role="attribute">
<td>dm:is-idrefs(A10)</td>
<td> = </td>
<td>false</td>
</tr>
<tr role="attribute">
<td>dm:parent(A10)</td>
<td> = </td>
<td>([<loc href="#ex-E7">E7</loc>])</td>
</tr>
<tr>
<td colspan="3"> </td>
</tr>
<tr role="element" id="ex-E8">
<td colspan="3">// Element node E8</td>
</tr>
<tr role="element">
<td>dm:base-uri(E8)</td>
<td> = </td>
<td>xs:anyURI("http://www.example.com/catalog.xml")</td>
</tr>
<tr role="element">
<td>dm:node-kind(E8)</td>
<td> = </td>
<td>"element"</td>
</tr>
<tr role="element">
<td>dm:node-name(E8)</td>
<td> = </td>
<td>xs:QName("http://www.example.com/catalog", "title")</td>
</tr>
<tr role="element">
<td>dm:string-value(E8)</td>
<td>=</td>
<td>"It's  Been  A  While"</td>
</tr>
<tr role="element">
<td>dm:typed-value(E8)</td>
<td> = </td>
<td>xs:token("It's Been A While")</td>
</tr>
<tr role="element">
<td>dm:type-name(E8)</td>
<td> = </td>
<td>xs:token</td>
</tr>
<tr role="element">
<td>dm:is-id(E8)</td>
<td> = </td>
<td>false</td>
</tr>
<tr role="element">
<td>dm:is-idrefs(E8)</td>
<td> = </td>
<td>false</td>
</tr>
<tr role="element">
<td>dm:parent(E8)</td>
<td> = </td>
<td>([<loc href="#ex-E7">E7</loc>])</td>
</tr>
<tr role="element">
<td>dm:children(E8)</td>
<td> = </td>
<td>([<loc href="#ex-T4">T4</loc>])</td>
</tr>
<tr role="element">
<td>dm:attributes(E8)</td>
<td> = </td>
<td>()</td>
</tr>
<tr role="element">
<td>dm:namespace-nodes(E8)</td>
<td> = </td>
<td>([<loc href="#ex-N1">N1</loc>], [<loc href="#ex-N2">N2</loc>], [<loc href="#ex-N3">N3</loc>], [<loc href="#ex-N4">N4</loc>], [<loc href="#ex-N5">N5</loc>])</td>
</tr>
<tr role="element">
<td>dm:namespace-bindings(E8)</td>
<td> = </td>
<td>("xml", "http://www.w3.org/XML/1998/namespace", "", "http://www.example.com/catalog", "html", "http://www.w3.org/1999/xhtml", "xlink", "http://www.w3.org/1999/xlink", "xsi", "http://www.w3.org/2001/XMLSchema-instance")</td>
</tr>
<tr>
<td colspan="3"> </td>
</tr>
<tr role="text" id="ex-T4">
<td colspan="3">// Text node T4</td>
</tr>
<tr role="text">
<td>dm:base-uri(T4)</td>
<td> = </td>
<td>xs:anyURI("http://www.example.com/catalog.xml")</td>
</tr>
<tr role="text">
<td>dm:node-kind(T4)</td>
<td> = </td>
<td>"text"</td>
</tr>
<tr role="text">
<td>dm:string-value(T4)</td>
<td>=</td>
<td>"It's  Been  A  While"</td>
</tr>
<tr role="text">
<td>dm:typed-value(T4)</td>
<td> = </td>
<td>xs:untypedAtomic("It's  Been  A  While")</td>
</tr>
<tr role="text">
<td>dm:type-name(T4)</td>
<td> = </td>
<td>xs:untypedAtomic</td>
</tr>
<tr role="text">
<td>dm:parent(T4)</td>
<td> = </td>
<td>([<loc href="#ex-E8">E8</loc>])</td>
</tr>
<tr>
<td colspan="3"> </td>
</tr>
<tr role="element" id="ex-E9">
<td colspan="3">// Element node E9</td>
</tr>
<tr role="element">
<td>dm:base-uri(E9)</td>
<td> = </td>
<td>xs:anyURI("http://www.example.com/catalog.xml")</td>
</tr>
<tr role="element">
<td>dm:node-kind(E9)</td>
<td> = </td>
<td>"element"</td>
</tr>
<tr role="element">
<td>dm:node-name(E9)</td>
<td> = </td>
<td>xs:QName("http://www.example.com/catalog", "description")</td>
</tr>
<tr role="element">
<td>dm:string-value(E9)</td>
<td>=</td>
<td>""</td>
</tr>
<tr role="element">
<td colspan="3">// xsi:nil is true so the typed value is the empty sequence</td>
</tr>
<tr role="element">
<td>dm:typed-value(E9)</td>
<td> = </td>
<td>()</td>
</tr>
<tr role="element">
<td>dm:type-name(E9)</td>
<td> = </td>
<td>cat:description</td>
</tr>
<tr role="element">
<td>dm:is-id(E9)</td>
<td> = </td>
<td>false</td>
</tr>
<tr role="element">
<td>dm:is-idrefs(E9)</td>
<td> = </td>
<td>false</td>
</tr>
<tr role="element">
<td>dm:parent(E9)</td>
<td> = </td>
<td>([<loc href="#ex-E7">E7</loc>])</td>
</tr>
<tr role="element">
<td>dm:children(E9)</td>
<td> = </td>
<td>()</td>
</tr>
<tr role="element">
<td>dm:attributes(E9)</td>
<td> = </td>
<td>([<loc href="#ex-A11">A11</loc>])</td>
</tr>
<tr role="element">
<td>dm:namespace-nodes(E9)</td>
<td> = </td>
<td>([<loc href="#ex-N1">N1</loc>], [<loc href="#ex-N2">N2</loc>], [<loc href="#ex-N3">N3</loc>], [<loc href="#ex-N4">N4</loc>], [<loc href="#ex-N5">N5</loc>])</td>
</tr>
<tr role="element">
<td>dm:namespace-bindings(E9)</td>
<td> = </td>
<td>("xml", "http://www.w3.org/XML/1998/namespace", "", "http://www.example.com/catalog", "html", "http://www.w3.org/1999/xhtml", "xlink", "http://www.w3.org/1999/xlink", "xsi", "http://www.w3.org/2001/XMLSchema-instance")</td>
</tr>
<tr>
<td colspan="3"> </td>
</tr>
<tr role="attribute" id="ex-A11">
<td colspan="3">// Attribute node A11</td>
</tr>
<tr role="attribute">
<td>dm:node-kind(A11)</td>
<td> = </td>
<td>"attribute"</td>
</tr>
<tr role="attribute">
<td>dm:node-name(A11)</td>
<td> = </td>
<td>xs:QName("http://www.w3.org/2001/XMLSchema-instance", "xsi:nil")</td>
</tr>
<tr role="attribute">
<td>dm:string-value(A11)</td>
<td>=</td>
<td>"true"</td>
</tr>
<tr role="attribute">
<td>dm:typed-value(A11)</td>
<td> = </td>
<td>xs:boolean("true")</td>
</tr>
<tr role="attribute">
<td>dm:type-name(A11)</td>
<td> = </td>
<td>xs:boolean</td>
</tr>
<tr role="attribute">
<td>dm:is-id(A11)</td>
<td> = </td>
<td>false</td>
</tr>
<tr role="attribute">
<td>dm:is-idrefs(A11)</td>
<td> = </td>
<td>false</td>
</tr>
<tr role="attribute">
<td>dm:parent(A11)</td>
<td> = </td>
<td>([<loc href="#ex-E9">E9</loc>])</td>
</tr>
<tr>
<td colspan="3"> </td>
</tr>
<tr role="element" id="ex-E10">
<td colspan="3">// Element node E10</td>
</tr>
<tr role="element">
<td>dm:base-uri(E10)</td>
<td> = </td>
<td>xs:anyURI("http://www.example.com/catalog.xml")</td>
</tr>
<tr role="element">
<td>dm:node-kind(E10)</td>
<td> = </td>
<td>"element"</td>
</tr>
<tr role="element">
<td>dm:node-name(E10)</td>
<td> = </td>
<td>xs:QName("http://www.example.com/catalog", "price")</td>
</tr>
<tr role="element">
<td>dm:string-value(E10)</td>
<td>=</td>
<td>"10.99"</td>
</tr>
<tr role="element">
<td>dm:typed-value(E10)</td>
<td> = </td>
<td>cat:monetaryAmount(10.99)</td>
</tr>
<tr role="element">
<td>dm:type-name(E10)</td>
<td> = </td>
<td>cat:price</td>
</tr>
<tr role="element">
<td>dm:is-id(E10)</td>
<td> = </td>
<td>false</td>
</tr>
<tr role="element">
<td>dm:is-idrefs(E10)</td>
<td> = </td>
<td>false</td>
</tr>
<tr role="element">
<td>dm:parent(E10)</td>
<td> = </td>
<td>([<loc href="#ex-E7">E7</loc>])</td>
</tr>
<tr role="element">
<td>dm:children(E10)</td>
<td> = </td>
<td>([<loc href="#ex-T5">T5</loc>])</td>
</tr>
<tr role="element">
<td>dm:attributes(E10)</td>
<td> = </td>
<td>([<loc href="#ex-A12">A12</loc>])</td>
</tr>
<tr role="element">
<td>dm:namespace-nodes(E10)</td>
<td> = </td>
<td>([<loc href="#ex-N1">N1</loc>], [<loc href="#ex-N2">N2</loc>], [<loc href="#ex-N3">N3</loc>], [<loc href="#ex-N4">N4</loc>], [<loc href="#ex-N5">N5</loc>])</td>
</tr>
<tr role="element">
<td>dm:namespace-bindings(E10)</td>
<td> = </td>
<td>("xml", "http://www.w3.org/XML/1998/namespace", "", "http://www.example.com/catalog", "html", "http://www.w3.org/1999/xhtml", "xlink", "http://www.w3.org/1999/xlink", "xsi", "http://www.w3.org/2001/XMLSchema-instance")</td>
</tr>
<tr>
<td colspan="3"> </td>
</tr>
<tr role="attribute" id="ex-A12">
<td colspan="3">// Attribute node A12</td>
</tr>
<tr role="attribute">
<td>dm:node-kind(A12)</td>
<td> = </td>
<td>"attribute"</td>
</tr>
<tr role="attribute">
<td>dm:node-name(A12)</td>
<td> = </td>
<td>xs:QName("", "currency")</td>
</tr>
<tr role="attribute">
<td>dm:string-value(A12)</td>
<td>=</td>
<td>"USD"</td>
</tr>
<tr role="attribute">
<td>dm:typed-value(A12)</td>
<td> = </td>
<td>cat:currencyType("USD")</td>
</tr>
<tr role="attribute">
<td>dm:type-name(A12)</td>
<td> = </td>
<td>cat:currencyType</td>
</tr>
<tr role="attribute">
<td>dm:is-id(A12)</td>
<td> = </td>
<td>false</td>
</tr>
<tr role="attribute">
<td>dm:is-idrefs(A12)</td>
<td> = </td>
<td>false</td>
</tr>
<tr role="attribute">
<td>dm:parent(A12)</td>
<td> = </td>
<td>([<loc href="#ex-E10">E10</loc>])</td>
</tr>
<tr>
<td colspan="3"> </td>
</tr>
<tr role="text" id="ex-T5">
<td colspan="3">// Text node T5</td>
</tr>
<tr role="text">
<td>dm:base-uri(T5)</td>
<td> = </td>
<td>xs:anyURI("http://www.example.com/catalog.xml")</td>
</tr>
<tr role="text">
<td>dm:node-kind(T5)</td>
<td> = </td>
<td>"text"</td>
</tr>
<tr role="text">
<td>dm:string-value(T5)</td>
<td>=</td>
<td>"10.99"</td>
</tr>
<tr role="text">
<td>dm:typed-value(T5)</td>
<td> = </td>
<td>xs:untypedAtomic("10.99")</td>
</tr>
<tr role="text">
<td>dm:type-name(T5)</td>
<td> = </td>
<td>xs:untypedAtomic</td>
</tr>
<tr role="text">
<td>dm:parent(T5)</td>
<td> = </td>
<td>([<loc href="#ex-E10">E10</loc>])</td>
</tr>
<tr>
<td colspan="3"> </td>
</tr>
<tr role="element" id="ex-E11">
<td colspan="3">// Element node E11</td>
</tr>
<tr role="element">
<td>dm:base-uri(E11)</td>
<td> = </td>
<td>xs:anyURI("http://www.example.com/catalog.xml")</td>
</tr>
<tr role="element">
<td>dm:node-kind(E11)</td>
<td> = </td>
<td>"element"</td>
</tr>
<tr role="element">
<td>dm:node-name(E11)</td>
<td> = </td>
<td>xs:QName("http://www.example.com/catalog", "artist")</td>
</tr>
<tr role="element">
<td>dm:string-value(E11)</td>
<td>=</td>
<td>"  Staind  "</td>
</tr>
<tr role="element">
<td>dm:typed-value(E11)</td>
<td> = </td>
<td>" Staind "</td>
</tr>
<tr role="element">
<td>dm:type-name(E11)</td>
<td> = </td>
<td>xs:string</td>
</tr>
<tr role="element">
<td>dm:is-id(E11)</td>
<td> = </td>
<td>false</td>
</tr>
<tr role="element">
<td>dm:is-idrefs(E11)</td>
<td> = </td>
<td>false</td>
</tr>
<tr role="element">
<td>dm:parent(E11)</td>
<td> = </td>
<td>([<loc href="#ex-E7">E7</loc>])</td>
</tr>
<tr role="element">
<td>dm:children(E11)</td>
<td> = </td>
<td>([<loc href="#ex-T6">T6</loc>])</td>
</tr>
<tr role="element">
<td>dm:attributes(E11)</td>
<td> = </td>
<td>()</td>
</tr>
<tr role="element">
<td>dm:namespace-nodes(E11)</td>
<td> = </td>
<td>([<loc href="#ex-N1">N1</loc>], [<loc href="#ex-N2">N2</loc>], [<loc href="#ex-N3">N3</loc>], [<loc href="#ex-N4">N4</loc>], [<loc href="#ex-N5">N5</loc>])</td>
</tr>
<tr role="element">
<td>dm:namespace-bindings(E11)</td>
<td> = </td>
<td>("xml", "http://www.w3.org/XML/1998/namespace", "", "http://www.example.com/catalog", "html", "http://www.w3.org/1999/xhtml", "xlink", "http://www.w3.org/1999/xlink", "xsi", "http://www.w3.org/2001/XMLSchema-instance")</td>
</tr>
<tr>
<td colspan="3"> </td>
</tr>
<tr role="text" id="ex-T6">
<td colspan="3">// Text node T6</td>
</tr>
<tr role="text">
<td>dm:base-uri(T6)</td>
<td> = </td>
<td>xs:anyURI("http://www.example.com/catalog.xml")</td>
</tr>
<tr role="text">
<td>dm:node-kind(T6)</td>
<td> = </td>
<td>"text"</td>
</tr>
<tr role="text">
<td>dm:string-value(T6)</td>
<td>=</td>
<td>"  Staind  "</td>
</tr>
<tr role="text">
<td>dm:typed-value(T6)</td>
<td> = </td>
<td>xs:untypedAtomic("  Staind  ")</td>
</tr>
<tr role="text">
<td>dm:type-name(T6)</td>
<td> = </td>
<td>xs:untypedAtomic</td>
</tr>
<tr role="text">
<td>dm:parent(T6)</td>
<td> = </td>
<td>([<loc href="#ex-E11">E11</loc>])</td>
</tr>
<tr>
<td colspan="3"> </td>
</tr>
</tbody>
</table>

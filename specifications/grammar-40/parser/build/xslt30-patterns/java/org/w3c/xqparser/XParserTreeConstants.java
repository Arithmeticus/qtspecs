/* Generated By:JJTree: Do not edit this line. build/xslt30-patterns/java/org/w3c/xqparser/XParserTreeConstants.java */

package org.w3c.xqparser;

public interface XParserTreeConstants
{
  public int JJTSTART = 0;
  public int JJTPATTERN30 = 1;
  public int JJTPREDICATEPATTERN = 2;
  public int JJTUNIONEXPRP = 3;
  public int JJTINTERSECTEXCEPTEXPRP = 4;
  public int JJTPATHEXPRP = 5;
  public int JJTSLASH = 6;
  public int JJTSLASHSLASH = 7;
  public int JJTROOTEDPATH = 8;
  public int JJTFUNCTIONCALLP = 9;
  public int JJTOUTERFUNCTIONNAME = 10;
  public int JJTURIQUALIFIEDNAME = 11;
  public int JJTARGUMENTLISTP = 12;
  public int JJTARGUMENTP = 13;
  public int JJTVOID = 14;
  public int JJTSTEPEXPRP = 15;
  public int JJTPOSTFIXEXPRP = 16;
  public int JJTPARENTHESIZEDEXPRP = 17;
  public int JJTAXISSTEPP = 18;
  public int JJTFORWARDAXISP = 19;
  public int JJTPARAMLIST = 20;
  public int JJTPARAM = 21;
  public int JJTFUNCTIONBODY = 22;
  public int JJTENCLOSEDEXPR = 23;
  public int JJTLBRACE = 24;
  public int JJTRBRACE = 25;
  public int JJTEXPR = 26;
  public int JJTFOREXPR = 27;
  public int JJTSIMPLEFORBINDING = 28;
  public int JJTLETEXPR = 29;
  public int JJTSIMPLELETCLAUSE = 30;
  public int JJTSIMPLELETBINDING = 31;
  public int JJTQUANTIFIEDEXPR = 32;
  public int JJTIFEXPR = 33;
  public int JJTOREXPR = 34;
  public int JJTANDEXPR = 35;
  public int JJTCOMPARISONEXPR = 36;
  public int JJTSTRINGCONCATEXPR = 37;
  public int JJTRANGEEXPR = 38;
  public int JJTADDITIVEEXPR = 39;
  public int JJTMULTIPLICATIVEEXPR = 40;
  public int JJTUNIONEXPR = 41;
  public int JJTINTERSECTEXCEPTEXPR = 42;
  public int JJTINSTANCEOFEXPR = 43;
  public int JJTTREATEXPR = 44;
  public int JJTCASTABLEEXPR = 45;
  public int JJTCASTEXPR = 46;
  public int JJTUNARYEXPR = 47;
  public int JJTMINUS = 48;
  public int JJTPLUS = 49;
  public int JJTSIMPLEMAPEXPR = 50;
  public int JJTPATHEXPR = 51;
  public int JJTAXISSTEP = 52;
  public int JJTFORWARDAXIS = 53;
  public int JJTABBREVFORWARDSTEP = 54;
  public int JJTREVERSEAXIS = 55;
  public int JJTABBREVREVERSESTEP = 56;
  public int JJTNODETEST = 57;
  public int JJTNAMETEST = 58;
  public int JJTWILDCARD = 59;
  public int JJTNCNAMECOLONSTAR = 60;
  public int JJTSTARCOLONNCNAME = 61;
  public int JJTURIQUALIFIEDSTAR = 62;
  public int JJTFILTEREXPR = 63;
  public int JJTPOSTFIXEXPR = 64;
  public int JJTARGUMENTLIST = 65;
  public int JJTPREDICATELIST = 66;
  public int JJTPREDICATE = 67;
  public int JJTSTRINGLITERAL = 68;
  public int JJTINTEGERLITERAL = 69;
  public int JJTDECIMALLITERAL = 70;
  public int JJTDOUBLELITERAL = 71;
  public int JJTVARNAME = 72;
  public int JJTPARENTHESIZEDEXPR = 73;
  public int JJTCONTEXTITEMEXPR = 74;
  public int JJTFUNCTIONCALL = 75;
  public int JJTARGUMENT = 76;
  public int JJTARGUMENTPLACEHOLDER = 77;
  public int JJTFUNCTIONITEMEXPR = 78;
  public int JJTNAMEDFUNCTIONREF = 79;
  public int JJTINLINEFUNCTIONEXPR = 80;
  public int JJTSINGLETYPE = 81;
  public int JJTTYPEDECLARATION = 82;
  public int JJTSEQUENCETYPE = 83;
  public int JJTOCCURRENCEINDICATOR = 84;
  public int JJTITEMTYPE = 85;
  public int JJTATOMICORUNIONTYPE = 86;
  public int JJTANYKINDTEST = 87;
  public int JJTDOCUMENTTEST = 88;
  public int JJTTEXTTEST = 89;
  public int JJTCOMMENTTEST = 90;
  public int JJTNAMESPACENODETEST = 91;
  public int JJTPITEST = 92;
  public int JJTATTRIBUTETEST = 93;
  public int JJTATTRIBNAMEORWILDCARD = 94;
  public int JJTSCHEMAATTRIBUTETEST = 95;
  public int JJTATTRIBUTEDECLARATION = 96;
  public int JJTELEMENTTEST = 97;
  public int JJTELEMENTNAMEORWILDCARD = 98;
  public int JJTSCHEMAELEMENTTEST = 99;
  public int JJTELEMENTDECLARATION = 100;
  public int JJTATTRIBUTENAME = 101;
  public int JJTELEMENTNAME = 102;
  public int JJTSIMPLETYPENAME = 103;
  public int JJTTYPENAME = 104;
  public int JJTFUNCTIONTEST = 105;
  public int JJTANYFUNCTIONTEST = 106;
  public int JJTTYPEDFUNCTIONTEST = 107;
  public int JJTPARENTHESIZEDITEMTYPE = 108;
  public int JJTNCNAME = 109;
  public int JJTQNAME = 110;
  public int JJTFUNCTIONQNAME = 111;


  public String[] jjtNodeName = {
    "START",
    "Pattern30",
    "PredicatePattern",
    "UnionExprP",
    "IntersectExceptExprP",
    "PathExprP",
    "Slash",
    "SlashSlash",
    "RootedPath",
    "FunctionCallP",
    "OuterFunctionName",
    "URIQualifiedName",
    "ArgumentListP",
    "ArgumentP",
    "void",
    "StepExprP",
    "PostfixExprP",
    "ParenthesizedExprP",
    "AxisStepP",
    "ForwardAxisP",
    "ParamList",
    "Param",
    "FunctionBody",
    "EnclosedExpr",
    "Lbrace",
    "Rbrace",
    "Expr",
    "ForExpr",
    "SimpleForBinding",
    "LetExpr",
    "SimpleLetClause",
    "SimpleLetBinding",
    "QuantifiedExpr",
    "IfExpr",
    "OrExpr",
    "AndExpr",
    "ComparisonExpr",
    "StringConcatExpr",
    "RangeExpr",
    "AdditiveExpr",
    "MultiplicativeExpr",
    "UnionExpr",
    "IntersectExceptExpr",
    "InstanceofExpr",
    "TreatExpr",
    "CastableExpr",
    "CastExpr",
    "UnaryExpr",
    "Minus",
    "Plus",
    "SimpleMapExpr",
    "PathExpr",
    "AxisStep",
    "ForwardAxis",
    "AbbrevForwardStep",
    "ReverseAxis",
    "AbbrevReverseStep",
    "NodeTest",
    "NameTest",
    "Wildcard",
    "NCNameColonStar",
    "StarColonNCName",
    "URIQualifiedStar",
    "FilterExpr",
    "PostfixExpr",
    "ArgumentList",
    "PredicateList",
    "Predicate",
    "StringLiteral",
    "IntegerLiteral",
    "DecimalLiteral",
    "DoubleLiteral",
    "VarName",
    "ParenthesizedExpr",
    "ContextItemExpr",
    "FunctionCall",
    "Argument",
    "ArgumentPlaceholder",
    "FunctionItemExpr",
    "NamedFunctionRef",
    "InlineFunctionExpr",
    "SingleType",
    "TypeDeclaration",
    "SequenceType",
    "OccurrenceIndicator",
    "ItemType",
    "AtomicOrUnionType",
    "AnyKindTest",
    "DocumentTest",
    "TextTest",
    "CommentTest",
    "NamespaceNodeTest",
    "PITest",
    "AttributeTest",
    "AttribNameOrWildcard",
    "SchemaAttributeTest",
    "AttributeDeclaration",
    "ElementTest",
    "ElementNameOrWildcard",
    "SchemaElementTest",
    "ElementDeclaration",
    "AttributeName",
    "ElementName",
    "SimpleTypeName",
    "TypeName",
    "FunctionTest",
    "AnyFunctionTest",
    "TypedFunctionTest",
    "ParenthesizedItemType",
    "NCName",
    "QName",
    "FunctionQName",
  };
}

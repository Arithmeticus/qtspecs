<?xml version="1.0" encoding="utf-8"?>
<div1 id="id-type-promotion-and-operator-mapping">
<head>Type Promotion and Operator Mapping</head>

<div2 id="promotion">
<head>Type Promotion</head>

<p><termdef term="type promotion" id="dt-type-promotion">Under certain circumstances, an atomic value can be promoted from
one type to another. <term>Type promotion</term> is used in evaluating function calls (see <specref ref="id-eval-function-call"/>)<phrase role="xquery">, <code>order by</code> clauses (see <specref ref="id-order-by-clause"/>),</phrase>  and operators that accept numeric or string operands (see <specref ref="mapping"/>).</termdef> The following type promotions are permitted:</p>

<olist>
<item><p>Numeric type promotion:</p><olist>
<item><p>A value of type <code>xs:float</code> (or any type
derived by restriction from <code>xs:float</code>) can be promoted to
the type <code>xs:double</code>. The result is the
<code>xs:double</code> value that is the same as the original
value.</p></item>


<item><p>A value of type <code>xs:decimal</code> (or any type derived
by restriction from <code>xs:decimal</code>) can be promoted to either
of the types <code>xs:float</code> or <code>xs:double</code>.  The
result of this promotion is created by casting the original value to
the required type. This kind of promotion may cause loss of
precision.</p></item></olist></item>
<item><p>URI type promotion: A value of type <code>xs:anyURI</code> (or any type derived by restriction from <code>xs:anyURI</code>) can be promoted to the type <code>xs:string</code>. The result of this promotion is created by casting the original value to the type <code>xs:string</code>.</p><note><p>Since <code>xs:anyURI</code> values can be promoted to <code>xs:string</code>, functions and operators that compare strings using the <termref def="dt-def-collation">default collation</termref> also compare <code>xs:anyURI</code> values using the <termref def="dt-def-collation">default collation</termref>. This ensures that orderings that include strings, <code>xs:anyURI</code> values, or any combination of the two types are consistent and well-defined.</p></note></item>


</olist>
<p>Note that <termref def="dt-type-promotion">type promotion</termref> is different from <termref def="dt-subtype-substitution">subtype substitution</termref>. For example:</p><ulist>
<item><p>A function that expects a parameter <code>$p</code> of type <code>xs:float</code> can be invoked with a value of type <code>xs:decimal</code>. This is an example of <termref def="dt-type-promotion">type promotion</termref>. The value is actually converted to the expected type. Within the body of the function, <code>$p instance of xs:decimal</code> returns <code>false</code>.</p></item>
<item><p>A function that expects a parameter <code>$p</code> of type <code>xs:decimal</code> can be invoked with a value of type <code>xs:integer</code>. This is an example of <termref def="dt-subtype-substitution">subtype substitution</termref>. The value retains its original type. Within the body of the function, <code>$p instance of xs:integer</code> returns <code>true</code>.</p></item></ulist></div2>

<div2 id="mapping">
<head>Operator Mapping</head> <p>The operator mapping tables in this section list the
combinations of types for which the various operators of &language;
are defined. <termdef term="operator function" id="dt-operator-function">For each operator and valid combination of operand types, the operator mapping tables specify a result type and an <term>operator function</term> that implements the semantics of the operator for the given types.</termdef> The definitions of the operator functions are given in  <bibref ref="xpath-functions-31"/>. The result of an operator may be the raising of an error by its operator function, as defined in <bibref ref="xpath-functions-31"/>. The operator function fully defines the semantics of a given operator for the case where the operands are single atomic values of the types given in the table. For the definition of each operator (including its
behavior for empty sequences or sequences of length greater than one),
see the descriptive material in the main part of this
document.</p><p>The <code>and</code> and
<code>or</code> operators are defined directly in the main body of
this document, and do not occur in the operator mapping tables.</p><p>If an operator in the operator mapping tables expects an operand of type
<emph>ET</emph>, that operator can be applied to an operand of type <emph>AT</emph> if type <emph>AT</emph> can
be converted to type <emph>ET</emph> by a combination of <termref def="dt-type-promotion">type promotion</termref> and <termref def="dt-subtype-substitution">subtype substitution</termref>. For example, a table entry indicates that the <code>gt</code> operator may
be applied to two <code>xs:date</code> operands, returning
<code>xs:boolean</code>. Therefore, the <code>gt</code> operator may
also be applied to two (possibly different) subtypes of
<code>xs:date</code>, also returning <code>xs:boolean</code>.</p>

<p><termdef id="dt-numeric" term="numeric">When referring to a type, the term <term>numeric</term> denotes the types
<code>xs:integer</code>, <code>xs:decimal</code>,
<code>xs:float</code>, and <code>xs:double</code><phrase diff="add" at="2014-11-11">which are all member types of the built-in union type <code>xs:numeric</code></phrase>.</termdef> An operator whose
operands and result are designated as <termref def="dt-numeric">numeric</termref> might be
thought of as representing four operators, one for each of the numeric
types. For example, the numeric <code>+</code> operator might be
thought of as representing the following four operators:</p>


<table width="80%" role="medium"><tbody>
<tr><th align="center">Operator</th><th align="center">First operand type</th><th align="center">Second operand type</th><th align="center">Result type</th></tr>
<tr><td align="center"><code>+</code></td><td align="center"><code>xs:integer</code></td><td align="center"><code>xs:integer</code></td><td align="center"><code>xs:integer</code></td></tr>
<tr><td align="center"><code>+</code></td><td align="center"><code>xs:decimal</code></td><td align="center"><code>xs:decimal</code></td><td align="center"><code>xs:decimal</code></td></tr>
<tr><td align="center"><code>+</code></td><td align="center"><code>xs:float</code></td><td align="center"><code>xs:float</code></td><td align="center"><code>xs:float</code></td></tr>
<tr><td align="center"><code>+</code></td><td align="center"><code>xs:double</code></td><td align="center"><code>xs:double</code></td><td align="center"><code>xs:double</code></td></tr></tbody></table><p>A numeric operator may be validly applied to an operand of type <emph>AT</emph> if type
<emph>AT</emph> can be converted to any of the four numeric types by a combination of
<termref def="dt-type-promotion">type promotion</termref> and <termref def="dt-subtype-substitution">subtype substitution</termref>. If the result type of an
operator is listed as numeric, it means "the first type in the ordered list <code>(xs:integer, xs:decimal, xs:float, xs:double)</code> into which all operands can be converted by <termref def="dt-subtype-substitution">subtype substitution</termref> and <termref def="dt-type-promotion">type promotion</termref>." As an example, suppose that the type <code>hatsize</code> is derived from <code>xs:integer</code> and the type <code>shoesize</code> is derived from <code>xs:float</code>.   Then if the <code>+</code> operator is invoked with operands of type <code>hatsize</code> and <code>shoesize</code>, it returns a result of type <code>xs:float</code>.  Similarly, if <code>+</code> is invoked with two operands of type <code>hatsize</code> it returns a result of type <code>xs:integer</code>.</p><p><termdef id="dt-gregorian" term="Gregorian">In the operator mapping tables,
the term <term>Gregorian</term> refers to the types
<code>xs:gYearMonth</code>, <code>xs:gYear</code>,
<code>xs:gMonthDay</code>, <code>xs:gDay</code>, and
<code>xs:gMonth</code>.</termdef>  For binary operators that accept two
Gregorian-type operands, both operands must have the same type (for
example, if one operand is of type <code>xs:gDay</code>, the other
operand must be of type <code>xs:gDay</code>.)</p>

<table border="1" role="small">
<caption>Binary Operators</caption>
<tbody>

<tr>
<th>Operator</th>
<th>Type(A)</th>
<th>Type(B)</th>
<th>Function</th>
<th>Result type</th>
</tr>

<tr><td>A + B</td><td>numeric</td><td>numeric</td><td>op:numeric-add(A, B)</td><td>numeric</td></tr>

<tr><td>A + B</td><td>xs:date</td><td>xs:yearMonthDuration</td><td>op:add-yearMonthDuration-to-date(A, B)</td><td>xs:date</td></tr>

<tr><td>A + B</td><td>xs:yearMonthDuration</td><td>xs:date</td><td>op:add-yearMonthDuration-to-date(B, A)</td><td>xs:date</td></tr>
<tr><td>A + B</td><td>xs:date</td><td>xs:dayTimeDuration</td><td>op:add-dayTimeDuration-to-date(A, B)</td><td>xs:date</td></tr>
<tr><td>A + B</td><td>xs:dayTimeDuration</td><td>xs:date</td><td>op:add-dayTimeDuration-to-date(B, A)</td><td>xs:date</td></tr>

<tr><td>A + B</td><td>xs:time</td><td>xs:dayTimeDuration</td><td>op:add-dayTimeDuration-to-time(A, B)</td><td>xs:time</td></tr>
<tr><td>A + B</td><td>xs:dayTimeDuration</td><td>xs:time</td><td>op:add-dayTimeDuration-to-time(B, A)</td><td>xs:time</td></tr>


<tr><td>A + B</td><td>xs:dateTime</td><td>xs:yearMonthDuration</td><td>op:add-yearMonthDuration-to-dateTime(A, B)</td><td>xs:dateTime</td></tr>
<tr><td>A + B</td><td>xs:yearMonthDuration</td><td>xs:dateTime</td><td>op:add-yearMonthDuration-to-dateTime(B, A)</td><td>xs:dateTime</td></tr>

<tr><td>A + B</td><td>xs:dateTime</td><td>xs:dayTimeDuration</td><td>op:add-dayTimeDuration-to-dateTime(A, B)</td><td>xs:dateTime</td></tr>
<tr><td>A + B</td><td>xs:dayTimeDuration</td><td>xs:dateTime</td><td>op:add-dayTimeDuration-to-dateTime(B, A)</td><td>xs:dateTime</td></tr>

<tr><td>A + B</td><td>xs:yearMonthDuration</td><td>xs:yearMonthDuration</td><td>op:add-yearMonthDurations(A, B)</td><td>xs:yearMonthDuration</td></tr>
<tr><td>A + B</td><td>xs:dayTimeDuration</td><td>xs:dayTimeDuration</td><td>op:add-dayTimeDurations(A, B)</td><td>xs:dayTimeDuration</td></tr>


<tr><td>A - B</td><td>numeric</td><td>numeric</td><td>op:numeric-subtract(A, B)</td><td>numeric</td></tr>


<tr><td>A - B</td><td>xs:date</td><td>xs:date</td><td>op:subtract-dates(A, B)</td><td>xs:dayTimeDuration</td></tr>
<tr><td>A - B</td><td>xs:date</td><td>xs:yearMonthDuration</td><td>op:subtract-yearMonthDuration-from-date(A, B)</td><td>xs:date</td></tr>
<tr><td>A - B</td><td>xs:date</td><td>xs:dayTimeDuration</td><td>op:subtract-dayTimeDuration-from-date(A, B)</td><td>xs:date</td></tr>

<tr><td>A - B</td><td>xs:time</td><td>xs:time</td><td>op:subtract-times(A, B)</td><td>xs:dayTimeDuration</td></tr>

<tr><td>A - B</td><td>xs:time</td><td>xs:dayTimeDuration</td><td>op:subtract-dayTimeDuration-from-time(A, B)</td><td>xs:time</td></tr>


<tr><td>A - B</td><td>xs:dateTime</td><td>xs:dateTime</td><td>op:subtract-dateTimes(A, B)</td><td>xs:dayTimeDuration</td></tr>
<tr><td>A - B</td><td>xs:dateTime</td><td>xs:yearMonthDuration</td><td>op:subtract-yearMonthDuration-from-dateTime(A, B)</td><td>xs:dateTime</td></tr>
<tr><td>A - B</td><td>xs:dateTime</td><td>xs:dayTimeDuration</td><td>op:subtract-dayTimeDuration-from-dateTime(A, B)</td><td>xs:dateTime</td></tr>

<tr><td>A - B</td><td>xs:yearMonthDuration</td><td>xs:yearMonthDuration</td><td>op:subtract-yearMonthDurations(A, B)</td><td>xs:yearMonthDuration</td></tr>
<tr><td>A - B</td><td>xs:dayTimeDuration</td><td>xs:dayTimeDuration</td><td>op:subtract-dayTimeDurations(A, B)</td><td>xs:dayTimeDuration</td></tr>


<tr><td>A * B</td><td>numeric</td><td>numeric</td><td>op:numeric-multiply(A, B)</td><td>numeric</td></tr>
<tr><td>A * B</td><td>xs:yearMonthDuration</td><td>numeric</td><td>op:multiply-yearMonthDuration(A, B)</td><td>xs:yearMonthDuration</td></tr>
<tr><td>A * B</td><td>numeric</td><td>xs:yearMonthDuration</td><td>op:multiply-yearMonthDuration(B, A)</td><td>xs:yearMonthDuration</td></tr>
<tr><td>A * B</td><td>xs:dayTimeDuration</td><td>numeric</td><td>op:multiply-dayTimeDuration(A, B)</td><td>xs:dayTimeDuration</td></tr>
<tr><td>A * B</td><td>numeric</td><td>xs:dayTimeDuration</td><td>op:multiply-dayTimeDuration(B, A)</td><td>xs:dayTimeDuration</td></tr>

<tr><td>A idiv B</td><td>numeric</td><td>numeric</td><td>op:numeric-integer-divide(A, B)</td><td>xs:integer</td></tr>
<tr><td>A div B</td><td>numeric</td><td>numeric</td><td>op:numeric-divide(A, B)</td><td>numeric; but xs:decimal if both operands are xs:integer</td></tr>
<tr><td>A div B</td><td>xs:yearMonthDuration</td><td>numeric</td><td>op:divide-yearMonthDuration(A, B)</td><td>xs:yearMonthDuration</td></tr>
<tr><td>A div B</td><td>xs:dayTimeDuration</td><td>numeric</td><td>op:divide-dayTimeDuration(A, B)</td><td>xs:dayTimeDuration</td></tr>
<tr><td>A div B</td><td>xs:yearMonthDuration</td><td>xs:yearMonthDuration</td><td>op:divide-yearMonthDuration-by-yearMonthDuration (A, B)</td><td>xs:decimal</td></tr>
<tr><td>A div B</td><td>xs:dayTimeDuration</td><td>xs:dayTimeDuration</td><td>op:divide-dayTimeDuration-by-dayTimeDuration (A, B)</td><td>xs:decimal</td></tr>

<tr><td>A mod B</td><td>numeric</td><td>numeric</td><td>op:numeric-mod(A, B)</td><td>numeric</td></tr>


<tr><td>A eq B</td><td>numeric</td><td>numeric</td><td>op:numeric-equal(A, B)</td><td>xs:boolean</td></tr>

<tr><td>A eq B</td><td>xs:boolean</td><td>xs:boolean</td><td>op:boolean-equal(A, B)</td><td>xs:boolean</td></tr>

<tr><td>A eq B</td><td>xs:string</td><td>xs:string</td><td>op:numeric-equal(fn:compare(A, B), 0)</td><td>xs:boolean</td></tr>

<tr><td>A eq B</td><td>xs:date</td><td>xs:date</td><td>op:date-equal(A, B)</td><td>xs:boolean</td></tr>

<tr><td>A eq B</td><td>xs:time</td><td>xs:time</td><td>op:time-equal(A, B)</td><td>xs:boolean</td></tr>

<tr><td>A eq B</td><td>xs:dateTime</td><td>xs:dateTime</td><td>op:dateTime-equal(A, B)</td><td>xs:boolean</td></tr>

<tr><td>A eq B</td><td>xs:duration</td><td>xs:duration</td><td>op:duration-equal(A, B)</td><td>xs:boolean</td></tr>

<tr><td>A eq B</td><td>Gregorian</td><td>Gregorian</td><td>op:gYear-equal(A, B) etc.</td><td>xs:boolean</td></tr>

<tr><td>A eq B</td><td>xs:hexBinary</td><td>xs:hexBinary</td><td>op:hexBinary-equal(A, B)</td><td>xs:boolean</td></tr>

<tr><td>A eq B</td><td>xs:base64Binary</td><td>xs:base64Binary</td><td>op:base64Binary-equal(A, B)</td><td>xs:boolean</td></tr>

<tr diff="del"><td>A eq B</td><td>xs:anyURI</td><td>xs:anyURI</td><td>op:numeric-equal(fn:compare(A, B), 0)</td><td>xs:boolean</td></tr>

<tr><td>A eq B</td><td>xs:QName</td><td>xs:QName</td><td>op:QName-equal(A, B)</td><td>xs:boolean</td></tr>

<tr><td>A eq B</td><td>xs:NOTATION</td><td>xs:NOTATION</td><td>op:NOTATION-equal(A, B)</td><td>xs:boolean</td></tr>

<tr diff="add" at="2014-04-08"><td>A eq B</td><td>xs:hexBinary</td><td>xs:hexBinary</td><td>op:hexBinary-equal(A, B)</td><td>xs:boolean</td></tr>
<tr diff="add" at="2014-04-08"><td>A eq B</td><td>xs:base64Binary</td><td>xs:base64Binary</td><td>op:hexBinary-equal(A, B)</td><td>xs:boolean</td></tr>



<tr><td>A ne B</td><td>numeric</td><td>numeric</td><td>fn:not(op:numeric-equal(A, B))</td><td>xs:boolean</td></tr>

<tr><td>A ne B</td><td>xs:boolean</td><td>xs:boolean</td><td>fn:not(op:boolean-equal(A, B))</td><td>xs:boolean</td></tr>

<tr><td>A ne B</td><td>xs:string</td><td>xs:string</td><td>fn:not(op:numeric-equal(fn:compare(A, B), 0))</td><td>xs:boolean</td></tr>

<tr><td>A ne B</td><td>xs:date</td><td>xs:date</td><td>fn:not(op:date-equal(A, B))</td><td>xs:boolean</td></tr>

<tr><td>A ne B</td><td>xs:time</td><td>xs:time</td><td>fn:not(op:time-equal(A, B))</td><td>xs:boolean</td></tr>

<tr><td>A ne B</td><td>xs:dateTime</td><td>xs:dateTime</td><td>fn:not(op:dateTime-equal(A, B))</td><td>xs:boolean</td></tr>

<tr><td>A ne B</td><td>xs:duration</td><td>xs:duration</td><td>fn:not(op:duration-equal(A, B))</td><td>xs:boolean</td></tr>

<tr><td>A ne B</td><td>Gregorian</td><td>Gregorian</td><td>fn:not(op:gYear-equal(A, B)) etc.</td><td>xs:boolean</td></tr>

<tr><td>A ne B</td><td>xs:hexBinary</td><td>xs:hexBinary</td><td>fn:not(op:hexBinary-equal(A, B))</td><td>xs:boolean</td></tr>

<tr><td>A ne B</td><td>xs:base64Binary</td><td>xs:base64Binary</td><td>fn:not(op:base64Binary-equal(A, B))</td><td>xs:boolean</td></tr>

<tr diff="del"><td>A ne B</td><td>xs:anyURI</td><td>xs:anyURI</td><td>fn:not(op:numeric-equal(fn:compare(A, B), 0))</td><td>xs:boolean</td></tr>

<tr><td>A ne B</td><td>xs:QName</td><td>xs:QName</td><td>fn:not(op:QName-equal(A, B))</td><td>xs:boolean</td></tr>


<tr><td>A ne B</td><td>xs:NOTATION</td><td>xs:NOTATION</td><td>fn:not(op:NOTATION-equal(A, B))</td><td>xs:boolean</td></tr>

<tr diff="add" at="2014-04-08"><td>A ne B</td><td>xs:hexBinary</td><td>xs:hexBinary</td><td>fn:not(op:hexBinary-equal(A, B))</td><td>xs:boolean</td></tr>
<tr diff="add" at="2014-04-08"><td>A ne B</td><td>xs:base64Binary</td><td>xs:base64Binary</td><td>fn:not(op:base64Binary-equal(A, B))</td><td>xs:boolean</td></tr>

<tr><td>A gt B</td><td>numeric</td><td>numeric</td><td>op:numeric-greater-than(A, B)</td><td>xs:boolean</td></tr>

<tr><td>A gt B</td><td>xs:boolean</td><td>xs:boolean</td><td>op:boolean-greater-than(A, B)</td><td>xs:boolean</td></tr>

<tr><td>A gt B</td><td>xs:string</td><td>xs:string</td><td>op:numeric-greater-than(fn:compare(A, B), 0)</td><td>xs:boolean</td></tr>

<tr><td>A gt B</td><td>xs:date</td><td>xs:date</td><td>op:date-greater-than(A, B)</td><td>xs:boolean</td></tr>

<tr><td>A gt B</td><td>xs:time</td><td>xs:time</td><td>op:time-greater-than(A, B)</td><td>xs:boolean</td></tr>

<tr><td>A gt B</td><td>xs:dateTime</td><td>xs:dateTime</td><td>op:dateTime-greater-than(A, B)</td><td>xs:boolean</td></tr>

<tr><td>A gt B</td><td>xs:yearMonthDuration</td><td>xs:yearMonthDuration</td><td>op:yearMonthDuration-greater-than(A, B)</td><td>xs:boolean</td></tr>
<tr><td>A gt B</td><td>xs:dayTimeDuration</td><td>xs:dayTimeDuration</td><td>op:dayTimeDuration-greater-than(A, B)</td><td>xs:boolean</td></tr>
<tr diff="del"><td>A gt B</td><td>xs:anyURI</td><td>xs:anyURI</td><td>op:numeric-greater-than(fn:compare(A, B), 0)</td><td>xs:boolean</td></tr>

<tr diff="add" at="2014-04-08"><td>A gt B</td><td>xs:hexBinary</td><td>xs:hexBinary</td><td>op:hexBinary-greater-than(A, B)</td><td>xs:boolean</td></tr>
<tr diff="add" at="2014-04-08"><td>A gt B</td><td>xs:base64Binary</td><td>xs:base64Binary</td><td>op:base64Binary-greater-than(A, B)</td><td>xs:boolean</td></tr>

<tr><td>A lt B</td><td>numeric</td><td>numeric</td><td>op:numeric-less-than(A, B)</td><td>xs:boolean</td></tr>

<tr><td>A lt B</td><td>xs:boolean</td><td>xs:boolean</td><td>op:boolean-less-than(A, B)</td><td>xs:boolean</td></tr>

<tr><td>A lt B</td><td>xs:string</td><td>xs:string</td><td>op:numeric-less-than(fn:compare(A, B), 0)</td><td>xs:boolean</td></tr>

<tr><td>A lt B</td><td>xs:date</td><td>xs:date</td><td>op:date-less-than(A, B)</td><td>xs:boolean</td></tr>

<tr><td>A lt B</td><td>xs:time</td><td>xs:time</td><td>op:time-less-than(A, B)</td><td>xs:boolean</td></tr>

<tr><td>A lt B</td><td>xs:dateTime</td><td>xs:dateTime</td><td>op:dateTime-less-than(A, B)</td><td>xs:boolean</td></tr>

<tr><td>A lt B</td><td>xs:yearMonthDuration</td><td>xs:yearMonthDuration</td><td>op:yearMonthDuration-less-than(A, B)</td><td>xs:boolean</td></tr>
<tr><td>A lt B</td><td>xs:dayTimeDuration</td><td>xs:dayTimeDuration</td><td>op:dayTimeDuration-less-than(A, B)</td><td>xs:boolean</td></tr>
<tr diff="del"><td>A lt B</td><td>xs:anyURI</td><td>xs:anyURI</td><td>op:numeric-less-than(fn:compare(A, B), 0)</td><td>xs:boolean</td></tr>
<tr diff="add" at="2014-04-08"><td>A lt B</td><td>xs:hexBinary</td><td>xs:hexBinary</td><td>op:hexBinary-less-than(A, B)</td><td>xs:boolean</td></tr>
<tr diff="add" at="2014-04-08"><td>A lt B</td><td>xs:base64Binary</td><td>xs:base64Binary</td><td>op:base64Binary-less-than(A, B)</td><td>xs:boolean</td></tr>

<tr><td>A ge B</td><td>numeric</td><td>numeric</td><td>op:numeric-greater-than(A, B) or op:numeric-equal(A, B)</td><td>xs:boolean</td></tr>
<tr><td>A ge B</td><td>xs:boolean</td><td>xs:boolean</td><td>fn:not(op:boolean-less-than(A, B))</td><td>xs:boolean</td></tr>

<tr><td>A ge B</td><td>xs:string</td><td>xs:string</td><td>op:numeric-greater-than(fn:compare(A, B), -1)</td><td>xs:boolean</td></tr>

<tr><td>A ge B</td><td>xs:date</td><td>xs:date</td><td>fn:not(op:date-less-than(A, B))</td><td>xs:boolean</td></tr>

<tr><td>A ge B</td><td>xs:time</td><td>xs:time</td><td>fn:not(op:time-less-than(A, B))</td><td>xs:boolean</td></tr>

<tr><td>A ge B</td><td>xs:dateTime</td><td>xs:dateTime</td><td>fn:not(op:dateTime-less-than(A, B))</td><td>xs:boolean</td></tr>

<tr><td>A ge B</td><td>xs:yearMonthDuration</td><td>xs:yearMonthDuration</td><td>fn:not(op:yearMonthDuration-less-than(A, B))</td><td>xs:boolean</td></tr>
<tr><td>A ge B</td><td>xs:dayTimeDuration</td><td>xs:dayTimeDuration</td><td>fn:not(op:dayTimeDuration-less-than(A, B))</td><td>xs:boolean</td></tr>
<tr diff="del"><td>A ge B</td><td>xs:anyURI</td><td>xs:anyURI</td><td>op:numeric-greater-than(fn:compare(A, B), -1)</td><td>xs:boolean</td></tr>
<tr diff="add" at="2014-04-08"><td>A ge B</td><td>xs:hexBinary</td><td>xs:hexBinary</td><td>fn:not(op:hexBinary-less-than(A, B))</td><td>xs:boolean</td></tr>
<tr diff="add" at="2014-04-08"><td>A ge B</td><td>xs:base64Binary</td><td>xs:base64Binary</td><td>fn:not(op:base64Binary-less-than(A, B))</td><td>xs:boolean</td></tr>

<tr><td>A le B</td><td>numeric</td><td>numeric</td><td>op:numeric-less-than(A, B) or op:numeric-equal(A, B)</td><td>xs:boolean</td></tr>
<tr><td>A le B</td><td>xs:boolean</td><td>xs:boolean</td><td>fn:not(op:boolean-greater-than(A, B))</td><td>xs:boolean</td></tr>

<tr><td>A le B</td><td>xs:string</td><td>xs:string</td><td>op:numeric-less-than(fn:compare(A, B), 1)</td><td>xs:boolean</td></tr>

<tr><td>A le B</td><td>xs:date</td><td>xs:date</td><td>fn:not(op:date-greater-than(A, B))</td><td>xs:boolean</td></tr>

<tr><td>A le B</td><td>xs:time</td><td>xs:time</td><td>fn:not(op:time-greater-than(A, B))</td><td>xs:boolean</td></tr>

<tr><td>A le B</td><td>xs:dateTime</td><td>xs:dateTime</td><td>fn:not(op:dateTime-greater-than(A, B))</td><td>xs:boolean</td></tr>

<tr><td>A le B</td><td>xs:yearMonthDuration</td><td>xs:yearMonthDuration</td><td>fn:not(op:yearMonthDuration-greater-than(A, B))</td><td>xs:boolean</td></tr>
<tr><td>A le B</td><td>xs:dayTimeDuration</td><td>xs:dayTimeDuration</td><td>fn:not(op:dayTimeDuration-greater-than(A, B))</td><td>xs:boolean</td></tr>
<tr diff="del"><td>A le B</td><td>xs:anyURI</td><td>xs:anyURI</td><td>op:numeric-less-than(fn:compare(A, B), 1)</td><td>xs:boolean</td></tr>
<tr diff="add" at="2014-04-08"><td>A le B</td><td>xs:hexBinary</td><td>xs:hexBinary</td><td>fn:not(op:hexBinary-greater-than(A, B))</td><td>xs:boolean</td></tr>
<tr diff="add" at="2014-04-08"><td>A le B</td><td>xs:base64Binary</td><td>xs:base64Binary</td><td>fn:not(op:base64Binary-greater-than(A, B))</td><td>xs:boolean</td></tr>

<tr diff="del" at="2015-05-26"><td>A is B</td><td>node()</td><td>node()</td><td>op:is-same-node(A, B)</td><td>xs:boolean</td></tr>


<tr diff="del" at="2015-05-26"><td>A &lt;&lt; B</td><td>node()</td><td>node()</td><td>op:node-before(A, B)</td><td>xs:boolean</td></tr>

<tr diff="del" at="2015-05-26"><td>A &gt;&gt; B</td><td>node()</td><td>node()</td><td>op:node-after(A, B)</td><td>xs:boolean</td></tr>

<tr diff="del" at="2015-05-26"><td>A union B</td><td>node()*</td><td>node()*</td><td>op:union(A, B)</td><td>node()*</td></tr>

<tr diff="del" at="2015-05-26"><td>A | B</td><td>node()*</td><td>node()*</td><td>op:union(A, B)</td><td>node()*</td></tr>

<tr diff="del" at="2015-05-26"><td>A intersect B</td><td>node()*</td><td>node()*</td><td>op:intersect(A, B)</td><td>node()*</td></tr>

<tr diff="del" at="2015-05-26"><td>A except B</td><td>node()*</td><td>node()*</td><td>op:except(A, B)</td><td>node()*</td></tr>

<tr diff="del" at="2015-05-26"><td>A to B</td><td>xs:integer</td><td>xs:integer</td><td>op:to(A, B)</td><td>xs:integer*</td></tr>

<tr diff="del" at="2015-05-26"><td>A , B</td><td>item()*</td><td>item()*</td><td>op:concatenate(A, B)</td><td>item()*</td></tr>

<tr diff="del" at="2015-05-26"><td>A || B</td><td>xs:anyAtomicType</td><td>xs:anyAtomicType</td><td>fn:concat(A, B)</td><td>xs:string</td></tr>

</tbody>
</table>

<table border="1" role="small">
<caption>Unary Operators</caption>
<tbody>

<tr>
<th>Operator</th>
<th>Operand type</th>
<th>Function</th>
<th>Result type</th>
</tr>

<tr><td>+ A</td><td>numeric</td><td>op:numeric-unary-plus(A)</td><td>numeric</td></tr>

<tr><td>- A</td><td>numeric</td><td>op:numeric-unary-minus(A)</td><td>numeric</td></tr>
</tbody>
</table>


</div2>
</div1>

<div1 role="xquery" id="id-xq-context-components">
  <head>Context Components</head>

  <p>The tables in this section describe how values are assigned to
  the various components of the static context and dynamic context,
  and to the parameters that control the serialization process.</p>


<div2 id="id-xq-static-context-components">
<head>Static Context Components</head>

<p>The following table describes the components of the <term>static context</term>. The following aspects of each component are described:</p>

<ulist>
<item><p><emph>Default initial value:</emph> This is the
initial value of the component if it is not overridden or augmented by
the implementation or by a query.</p> </item>
<item><p><emph>Can be
overwritten or augmented by implementation:</emph> Indicates whether
an XQuery implementation is allowed to replace the default initial
value of the component by a different, <termref
def="dt-implementation-defined">implementation-defined</termref> value
and/or to augment the default initial value by additional <termref
def="dt-implementation-defined">implementation-defined</termref>
values.</p></item>
<item><p>
<emph>Can be overwritten or augmented by prolog:</emph>
Indicates whether there are prolog declarations that can replace and/or augment
the initial value provided by default or by the implementation.
</p></item>
<item><p>
<emph>Can be overwritten or augmented by expressions:</emph>
Indicates whether there are expressions that can replace and/or augment
the value of the component for their subexpressions.
</p></item>
<item><p><emph>Consistency
Rules:</emph> Indicates rules that must be observed in assigning
values to the component. Additional consistency rules may be found in
<specref ref="id-consistency-constraints"/>.</p></item></ulist>

<table width="100%" border="1" role="small">
<caption>Static Context Components</caption>
<tbody>
<!-- First group: can be overwritten/augmented by expressions -->
<tr>
<th>Component</th>
<th>Default initial value</th>
<th>Can be overwritten or augmented by implementation?</th>
<th>Can be overwritten or augmented by prolog?</th>
<th>Can be overwritten or augmented by expressions?</th>
<th>Consistency rules</th>
</tr>
<tr>
<td>Statically known namespaces</td>
<td><code>fn</code>, <code>xml</code>, <code>xs</code>, <code>xsi</code>,  <code>local</code></td>
<td>overwriteable and augmentable (except for <code>xml</code>)</td>
<td>overwriteable and augmentable by <specref ref="id-namespace-declaration"/></td>
<td>overwriteable and augmentable by element constructor</td>
<td>Only one namespace can be assigned to a given prefix
per lexical scope.</td>
</tr>
<tr><td>Default element/type namespace</td>
  <td>no namespace</td>
  <td>overwriteable</td>
  <td>overwriteable by <specref ref="id-default-namespace"/></td>
  <td>overwriteable by element constructor</td>
  <td>Only one default namespace per lexical scope.</td></tr>

<tr>
  <td>In-scope variables</td>
  <td>none</td>
  <td>augmentable</td>
  <td>overwriteable and augmentable by <specref ref="id-variable-declarations"/> and  <specref ref="id-inline-func"/>, augmentable by <specref ref="id-module-import"/></td>
  <td>overwriteable and augmentable by variable-binding expressions</td>
  <td>Only one definition per variable per lexical scope.</td></tr>

<tr>
  <td>Context item static type</td>
  <td>item()</td>
  <td>overwriteable</td>
  <td>overwriteable by <specref ref="id-context-item-declarations"/></td>
  <td>overwriteable by expresssions that set the context item</td>
  <td>None.</td></tr>
<tr>
  <td>Ordering mode</td>
  <td><code>ordered</code></td>
  <td>overwriteable</td>
  <td>overwriteable by <specref ref="id-default-ordering-decl"/></td>
  <td>overwriteable by expression</td>
  <td>Value must be <code>ordered</code> or <code>unordered</code>.</td></tr>

<!-- Second group: can be overwritten/augmented by (decls in) prologs,
     but not by expressions -->

<tr>
  <td>Default function namespace</td>
  <td><code>fn</code></td>
  <td>overwriteable (not recommended)</td>
  <td>overwriteable by <specref ref="id-default-namespace"/></td>
  <td>no</td>
  <td>None.</td></tr>
<tr>
  <td>In-scope schema types</td>
  <td>built-in types in <code>xs</code></td>
  <td>augmentable</td>
  <td>augmentable by <specref ref="id-schema-import"/></td>
  <td>no</td>
  <td>Only one definition per global or local type.</td></tr>
<tr>
  <td>In-scope element declarations</td>
  <td>none</td>
  <td>augmentable</td>
  <td>augmentable by  <specref ref="id-schema-import"/></td>
  <td>no</td>
  <td>Only one definition per global or local element name.</td></tr>
<tr>
  <td>In-scope attribute declarations</td>
  <td>none</td>
  <td>augmentable</td>
  <td>augmentable by  <specref ref="id-schema-import"/></td>
  <td>no</td>
  <td>Only one definition per global or local attribute name.</td></tr>
<tr>
  <td>Statically known function signatures</td>
  <td><phrase diff="chg" at="28282">the signatures of the <termref def="dt-built-in-function">built-in functions</termref></phrase></td>
  <td>augmentable</td>
  <td>augmentable by  <specref ref="id-module-import"/> and by  <specref ref="FunctionDeclns"/>; augmentable by  <specref ref="id-schema-import"/> (which adds constructor functions for user-defined types)</td>
  <td>no</td>
  <td>Each function must have a unique <termref def="dt-expanded-qname">expanded QName</termref> and number of arguments.</td></tr>
<tr>
  <td>Default collation</td>
  <td>Unicode codepoint collation</td>
  <td>overwriteable</td>
  <td>overwriteable by <specref ref="id-default-collation-declaration"/></td>
  <td>no</td>
  <td>None.</td></tr>
<tr>
  <td>Construction mode</td>
  <td><code>preserve</code></td>
  <td>overwriteable</td>
  <td>overwriteable by <specref ref="id-construction-declaration"/></td>
  <td>no</td>
  <td>Value must be <code>preserve</code> or <code>strip</code>. </td></tr>
<tr>
  <td>Default order for empty sequences</td>
  <td>implementation-defined</td>
  <td>overwriteable</td>
  <td>overwriteable by <specref ref="id-empty-order-decl"/></td>
  <td>no</td>
  <td>Value must be <code>greatest</code> or <code>least</code>.</td></tr>
<tr>
  <td>Boundary-space policy</td>
  <td><code>strip</code></td>
  <td>overwriteable</td>
  <td>overwriteable by <specref ref="id-boundary-space-decls"/></td>
  <td>no</td>
  <td>Value must be <code>preserve</code> or <code>strip</code>. </td></tr>
<tr>
  <td>Copy-namespaces mode</td>
  <td><code>inherit, preserve</code></td>
  <td>overwriteable</td>
  <td>overwriteable by <specref ref="id-copy-namespaces-decl"/></td>
  <td>no</td>
  <td>Value consists of <code>inherit</code> or <code>no-inherit</code>, and <code>preserve</code> or <code>no-preserve</code>.</td></tr>
<tr>
  <td>Static Base URI</td>
  <td>See rules in <specref ref="id-base-uri-decl"/></td>
  <td>overwriteable</td>
  <td>overwriteable by <specref ref="id-base-uri-decl"/></td>
  <td>no</td>
  <td>Value must be a valid lexical representation of the type xs:anyURI.</td></tr>

  <tr>
    <td>Statically known decimal formats</td>
    <td>the default (unnamed) decimal format, which has an implementation-dependent value</td>
    <td>augmentable</td>
    <td>augmentable, using <termref def="dt-decimal-format-decl">decimal format declarations</termref></td>
    <td>no</td>
    <td>each QName uniquely identifies a decimal format</td></tr>


<!-- Third group: cannot be overwritten/augmented by expressions or
     declarations in prologs -->

<tr>
  <td>Statically known documents</td>
  <td>none</td>
  <td>augmentable</td>
  <td>no</td>
  <td>no</td>
  <td>None.</td></tr>
<tr>
  <td>Statically known collections</td>
  <td>none</td>
  <td>augmentable</td>
  <td>no</td>
  <td>no</td>
  <td>None.</td></tr>
<tr>
  <td>Statically known default collection type</td>
  <td><code diff="del" at="2015-07-07">node()*</code><code diff="add" at="2015-07-07">item()*</code></td>
  <td>overwriteable</td>
  <td>no</td>
  <td>no</td>
  <td>None.</td></tr>
<tr>
  <td>Statically known collations</td>
  <td>only the default collation</td>
  <td>augmentable</td>
  <td>no</td>
  <td>no</td>
  <td>Each URI uniquely identifies a collation.</td></tr>
<tr>
  <td>XPath 1.0 Compatibility Mode</td>
  <td><code>false</code></td>
  <td>no</td>
  <td>no</td>
  <td>no</td>
  <td>Must be <code>false</code>.</td>
</tr>

 <!-- Serialization parameters -->
<tr>
<th colspan="6">Serialization Parameters</th>
</tr>

<tr diff="add" at="2014-09-30">
  <td>allow-duplicate-names</td>
  <td>no</td>
  <td>overwriteable</td>
  <td>overwriteable by prolog</td>
  <td>no</td>
  <td><xspecref spec="SER31" ref="serparam"/></td></tr>

<tr>
  <td>byte-order-mark</td>
  <td>implementation-defined</td>
  <td>overwriteable</td>
  <td>overwriteable by prolog</td>
  <td>no</td>
  <td><xspecref spec="SER31" ref="serparam"/></td></tr>
<tr>
  <td>cdata-section-elements</td>
  <td>empty</td>
  <td>overwriteable and augmentable</td>
  <td>overwriteable by prolog</td>
  <td>no</td>
  <td><xspecref spec="SER31" ref="serparam"/></td></tr>
<tr>
  <td>doctype-public</td>
  <td>none</td>
  <td>overwriteable</td>
  <td>overwriteable by prolog</td>
  <td>no</td>
  <td><xspecref spec="SER31" ref="serparam"/></td></tr>
<tr>
  <td>doctype-system</td>
  <td>none</td>
  <td>overwriteable</td>
  <td>overwriteable by prolog</td>
  <td>no</td>
  <td><xspecref spec="SER31" ref="serparam"/></td></tr>
<tr>
  <td>encoding</td>
  <td>implementation-defined choice between "utf-8" and "utf-16"</td>
  <td>overwriteable</td>
  <td>overwriteable by prolog</td>
  <td>no</td>
  <td><xspecref spec="SER31" ref="serparam"/></td></tr>
<tr>
  <td>escape-uri-attributes</td>
  <td><phrase diff="del" at="2015-07-04">(not applicable when method = xml)</phrase><phrase diff="add" at="2015-07-04">yes</phrase></td>
  <td>overwriteable and augmentable</td>
  <td>overwriteable by prolog</td>
  <td>no</td>
  <td><xspecref spec="SER31" ref="serparam"/></td></tr>

<tr>
  <td>html-version</td>
  <td>implementation-defined</td>
  <td>overwriteable</td>
  <td>overwriteable by prolog</td>
  <td>no</td>
  <td><xspecref spec="SER31" ref="serparam"/></td></tr>


<tr>
  <td>include-content-type</td>
  <td><phrase diff="del" at="2015-07-04">(not applicable when method = xml)</phrase><phrase diff="add" at="2015-07-04">yes</phrase></td>
  <td>overwriteable</td>
  <td>overwriteable by prolog</td>
  <td>no</td>
  <td><xspecref spec="SER31" ref="serparam"/></td></tr>
<tr>
  <td>indent</td>
  <td>no</td>
  <td>overwriteable</td>
  <td>overwriteable by prolog</td>
  <td>no</td>
  <td><xspecref spec="SER31" ref="serparam"/></td></tr>

<tr>
  <td>item-separator</td>
  <td>implementation-defined</td>
  <td>overwriteable</td>
  <td>overwriteable by prolog</td>
  <td>no</td>
  <td><xspecref spec="SER31" ref="serparam"/></td></tr>


<tr diff="add" at="2014-09-30">
  <td>json-node-output-method</td>
  <td>xml</td>
  <td>overwriteable</td>
  <td>overwriteable by prolog</td>
  <td>no</td>
  <td><xspecref spec="SER31" ref="serparam"/></td></tr>

<tr>
  <td>media-type</td>
  <td>implementation-defined</td>
  <td>overwriteable</td>
  <td>overwriteable by prolog</td>
  <td>no</td>
  <td><xspecref spec="SER31" ref="serparam"/></td></tr>
<tr>
  <td>method</td>
  <td>xml</td>
  <td>overwriteable</td>
  <td>overwriteable by prolog</td>
  <td>no</td>
  <td><xspecref spec="SER31" ref="serparam"/></td></tr>
<tr>
  <td>normalization-form</td>
  <td>implementation-defined</td>
  <td>overwriteable</td>
  <td>overwriteable by prolog</td>
  <td>no</td>
  <td><xspecref spec="SER31" ref="serparam"/></td></tr>
<tr>
  <td>omit-xml-declaration</td>
  <td>implementation-defined</td>
  <td>overwriteable</td>
  <td>overwriteable by prolog</td>
  <td>no</td>
  <td><xspecref spec="SER31" ref="serparam"/></td></tr>
<tr>
  <td>standalone</td>
  <td>implementation-defined</td>
  <td>overwriteable</td>
  <td>overwriteable by prolog</td>
  <td>no</td>
  <td><xspecref spec="SER31" ref="serparam"/></td></tr>
<tr>
  <td>suppress-indentation</td>
  <td>empty</td>
  <td>overwriteable and augmentable</td>
  <td>overwriteable by prolog</td>
  <td>no</td>
  <td><xspecref spec="SER31" ref="serparam"/></td></tr>
<tr>
  <td>undeclare-prefixes</td>
  <td>no</td>
  <td>overwriteable</td>
  <td>overwriteable by prolog</td>
  <td>no</td>
  <td><xspecref spec="SER31" ref="serparam"/></td></tr>
<tr>
  <td>use-character-maps</td>
  <td>empty</td>
  <td>overwriteable and augmentable</td>
  <td>overwriteable by prolog</td>
  <td>no</td>
  <td><xspecref spec="SER31" ref="serparam"/></td></tr>
<tr>
  <td>version</td>
  <td>implementation-defined</td>
  <td>overwriteable</td>
  <td>overwriteable by prolog</td>
  <td>no</td>
  <td><xspecref spec="SER31" ref="serparam"/></td></tr>
</tbody>
</table></div2>
<div2 id="id-xq-evaluation-context-components">
  <head>Dynamic Context Components</head>

  <p>The following table describes the components of the <term>dynamic context</term>. The following aspects of each component are described:</p><ulist>
<item><p><emph>Default initial value:</emph> This is the initial value of the component if it is not overridden or augmented by the implementation or by a query.</p> </item>
<item><p><emph>Can be overwritten or augmented by implementation:</emph> Indicates whether an XQuery implementation is allowed to replace the default initial value of the component by a different <termref def="dt-implementation-defined">implementation-defined</termref> value and/or to augment the default initial value by additional <termref def="dt-implementation-defined">implementation-defined</termref> values.</p></item>
<item><p><emph>Can be overwritten or augmented by prolog:</emph>
Indicates whether there are prolog declarations that can replace and/or augment
the initial value provided by default or by the implementation.</p></item>
<item><p><emph>Can be overwritten or augmented by expressions:</emph>
Indicates whether there are expressions that can replace and/or augment
the value of the component for their subexpressions.</p></item>
<item><p><emph>Consistency Rules:</emph> Indicates rules that must be observed in assigning values to the component. Additional consistency rules may be found in <specref ref="id-consistency-constraints"/>.</p></item></ulist><table width="100%" border="1" role="small">
<caption>Dynamic Context Components</caption>
<tbody>

<tr>
<th>Component</th>

<th>Default initial value</th>

<th>Can be overwritten or augmented by implementation?</th>

<th>Can be overwritten or augmented by prolog?</th>

<th>Can be overwritten or augmented by expressions?</th>

<th>Consistency rules</th>
</tr>

<tr>
  <td>Context item</td>
  <td>
      <phrase diff="del" at="bug29027">
        the <termref def="dt-initial-context-item">initial context item</termref>
      </phrase>
      <phrase diff="add" at="bug29027">
        none
      </phrase>
  </td>
  <td>overwriteable</td>
  <td>
      <phrase diff="del" at="bug29027">
        no, but the <termref def="dt-initial-context-item">initial context item</termref> can be set in the prolog 
        using a <specref ref="id-context-item-declarations"/>
      </phrase>
      <phrase diff="add" at="bug29027">
        overwriteable by a  <specref ref="id-context-item-declarations"/> in the main module
      </phrase>
  </td>
  <td>overwritten during evaluation of path expressions and predicates</td>
  <td>
      <phrase diff="del" at="bug29027">
        The query body and the prolog of every module in a query 
        share the same <termref def="dt-initial-context-item">initial context item</termref>.
      </phrase>
      <phrase diff="add" at="bug29027">
        Must be the same in the dynamic context of every module in a query.
      </phrase>
  </td>
</tr>
<tr>
  <td>Context position</td>
  <td>
      <phrase diff="del" at="bug29027">
        1 if the <termref def="dt-initial-context-item">initial context item</termref> is set, otherwise  none
      </phrase>
      <phrase diff="add" at="bug29027">
        none
      </phrase>
  </td>
  <td>overwriteable</td>
  <td>
      <phrase diff="del" at="bug29027">
        no
      </phrase>
      <phrase diff="add" at="bug29027">
        overwriteable by a  <specref ref="id-context-item-declarations"/> in the main module
      </phrase>
  </td>
  <td>overwritten during evaluation of path expressions and predicates</td>
  <td>If context item is defined, context position must be &gt;0 and &lt;= context size; else  context position is <xtermref spec="DM31" ref="dt-absent"/>. </td>
</tr>
<tr>
  <td>Context size</td>
  <td>
      <phrase diff="del" at="bug29027">
        1 if the <termref def="dt-initial-context-item">initial context item</termref> is set, otherwise none
      </phrase>
      <phrase diff="add" at="bug29027">
        none
      </phrase>
  </td>
  <td>overwriteable</td>
  <td>
      <phrase diff="del" at="bug29027">
        no
      </phrase>
      <phrase diff="add" at="bug29027">
        overwriteable by a  <specref ref="id-context-item-declarations"/> in the main module
      </phrase>
  </td>
  <td>overwritten during evaluation of path expressions and predicates</td>
  <td>If context item is defined, context size must be &gt;0; else context size is <xtermref spec="DM31" ref="dt-absent"/>.</td></tr>


<tr>
  <td>Variable values</td>
  <td>none</td>
  <td>augmentable</td>
  <td>overwriteable and augmentable by  <specref ref="id-variable-declarations"/>  and  <specref ref="id-inline-func"/>, augmentable by <specref ref="id-module-import"/></td>
  <td>overwriteable and augmentable by variable-binding expressions</td>
  <td>Names and values must be consistent with in-scope variables.</td>
</tr>
<tr>
  <td>Named functions</td>
  <td><phrase diff="chg" at="28282">the <termref def="dt-built-in-function">built-in functions</termref></phrase></td>
  <td>augmentable</td>
  <td>augmentable by 
 <specref ref="FunctionDeclns"/>, 
<specref ref="id-module-import"/>,
and
<specref ref="id-schema-import"/> ( (which adds constructor functions for user-defined types)</td>
  <td>no</td>
  <td>Must be consistent with statically known function signatures</td>
</tr>
<tr>
  <td>Current dateTime</td>
  <td>none</td>
  <td>must be initialized <phrase role="xquery">by implementation</phrase></td>
  <td>no</td>
  <td>no</td>
  <td>Must include a timezone. Remains constant during evaluation of a query.</td></tr>
<tr>
  <td>Implicit timezone</td>
  <td>none</td>
  <td>must be initialized <phrase role="xquery">by implementation</phrase></td>
  <td>no</td>
  <td>no</td>
  <td>Remains constant during evaluation of a query.</td></tr>
<tr>
  <td>Available documents</td>
  <td>none</td>
  <td>must be initialized <phrase role="xquery">by implementation</phrase></td>
  <td>no</td>
  <td>no</td>
  <td>None</td></tr>
<tr>
  <td>Available text resources</td>
  <td>none</td>
  <td>must be initialized <phrase role="xquery">by implementation</phrase></td>
  <td>no</td>
  <td>no</td>
  <td>None</td></tr>
<tr>
  <td>Available <phrase diff="del" at="bug28957">node</phrase> collections</td>
  <td>none</td>
  <td>must be initialized <phrase role="xquery">by implementation</phrase></td>
  <td>no</td>
  <td>no</td>
  <td>None</td></tr>
<tr>
  <td>Default  <phrase diff="del" at="bug28957">node</phrase> collection</td>
  <td>none</td>
  <td>overwriteable</td>
  <td>no</td>
  <td>no</td>
  <td>None</td></tr>
  <tr>
    <td>Available <phrase diff="del" at="bug28957">resource</phrase><phrase diff="add" at="bug28957">URI</phrase> collections</td>
    <td>none</td>
    <td>must be initialized <phrase role="xquery">by implementation</phrase></td>
    <td>no</td>
    <td>no</td>
    <td>None</td></tr>
  <tr>
    <td>Default <phrase diff="del" at="bug28957">resource</phrase><phrase diff="add" at="bug28957">URI</phrase> collection</td>
    <td>none</td>
    <td>overwriteable</td>
    <td>no</td>
    <td>no</td>
    <td>None</td></tr>  
</tbody>
</table></div2>
</div1>
<div1 id="id-xp-context-components" role="xpath"><head>Context Components</head><p>The tables in this
section describe the scope (range of applicability) of the various
components in a module's static context and dynamic context.</p>

<div2 id="id-xp-static-context-components"><head>Static Context
Components</head><p>The following table describes the components of
the <term>static context</term>. For each component, "global"
indicates that the value of the component applies throughout an XPath
expression, whereas "lexical" indicates that the value of the
component applies only within the subexpression in which it is
defined.</p>

<table width="60%" border="1" role="small">

<caption>Static Context Components</caption>
<tbody>

<tr>
<th>Component</th>
<th>Scope</th>
</tr>

<tr>
  <td>XPath 1.0 Compatibility Mode</td>
  <td>global</td>
</tr>
<tr>
  <td>Statically known namespaces</td>
  <td>global</td>
</tr>
<tr>
  <td>Default element/type namespace</td>
  <td>global</td></tr>
<tr>
  <td>Default function namespace</td>
  <td>global</td></tr>
<tr>
  <td>In-scope schema types</td>
  <td>global</td></tr>
<tr>
  <td>In-scope element declarations</td>
  <td>global</td></tr>
<tr>
  <td>In-scope attribute declarations</td>
  <td>global</td></tr>
<tr>
  <td>In-scope variables</td>
  <td>lexical; for-expressions, let-expressions, and quantified expressions can bind new variables</td></tr>
<tr>
  <td>Context item static type</td>
  <td>lexical</td></tr>
<tr>
  <td>Statically known function signatures</td>
  <td>global</td></tr>
<tr>
  <td>Statically known collations</td>
  <td>global</td></tr>
<tr>
  <td>Default collation</td>
  <td>global</td></tr>
<tr>
  <td>Base URI</td>
  <td>global</td></tr>
<tr>
  <td>Statically known documents</td>
  <td>global</td></tr>
<tr>
  <td>Statically known collections</td>
  <td>global  </td></tr>
<tr>
  <td>Statically known default collection type</td>
  <td>global</td></tr>
</tbody>
</table></div2>

<div2 id="id-xp-evaluation-context-components"><head>Dynamic Context Components</head><p>The following table describes how values are assigned to the various components of the <term>dynamic context</term>. All these components are initialized by mechanisms defined by the host language. For each component, "global" indicates that the value of the component remains constant throughout evaluation of the XPath expression, whereas "dynamic" indicates that the value of the component can be modified by the evaluation of subexpressions.</p><table width="60%" border="1" role="small">
<caption>Dynamic Context Components</caption>
<tbody>

<tr>
<th>Component</th>



<th>Scope</th>
</tr>

<tr>
  <td>Context item</td>
  <td>dynamic; changes during evaluation of path expressions and predicates</td>
</tr>
<tr>
  <td>Context position</td>
  <td>dynamic; changes during evaluation of path expressions and predicates</td>
</tr>
<tr>
  <td>Context size</td>
  <td>dynamic; changes during evaluation of path expressions and predicates</td></tr>
<tr>
  <td>Variable values</td>
  <td>dynamic; for-expressions, let-expressions, and quantified expressions can bind new variables</td></tr>
<tr>
  <td>Current date and time</td>
  <td>global; must be initialized <phrase role="xquery">by implementation</phrase></td></tr>
<tr>
  <td>Implicit timezone</td>
  <td>global; must be initialized <phrase role="xquery">by implementation</phrase></td></tr>
<tr>
  <td>Available documents</td>
  <td>global; must be initialized <phrase role="xquery">by implementation</phrase></td></tr>
<tr>
  <td>Available  <phrase diff="del" at="2015-07-07">node</phrase> collections</td>
  <td>global; must be initialized <phrase role="xquery">by implementation</phrase></td></tr>
<tr>
  <td>Default  <phrase diff="del" at="2015-07-07">node</phrase> collection</td>
  <td>global; overwriteable by implementation</td></tr>
  <tr>
    <td>Available <phrase diff="del" at="bug28957">resource</phrase><phrase diff="add" at="bug28957">URI</phrase> collections</td>
    <td>global; must be initialized <phrase role="xquery">by implementation</phrase></td></tr>
  <tr>
    <td>Default <phrase diff="del" at="bug28957">resource</phrase><phrase diff="add" at="bug28957">URI</phrase> collection</td>
    <td>global; overwriteable by implementation</td></tr>  
</tbody>
</table></div2></div1>
<div1 id="id-impl-defined-items"><head>Implementation-Defined Items</head><p>The following items in this specification are <termref def="dt-implementation-defined">implementation-defined</termref>:</p><olist>
<item><p>The version of Unicode that is used to construct expressions.</p></item>
<item><p>The <termref def="dt-static-collations">statically-known collations</termref>.</p></item>
<item><p>The <termref def="dt-timezone">implicit timezone</termref>.</p></item>
<item><p>The circumstances in which <termref def="dt-warning">warnings</termref> are raised, and the ways in which warnings are handled.</p></item>
<item><p>The method by which errors are reported to the external processing environment.</p></item>

<item><p>Which version of XML and XML Names (e.g. <bibref ref="XML"/> and <bibref ref="XMLNAMES"/> or <bibref ref="XML1.1"/> and <bibref ref="XMLNAMES11"/>) and which version of XML Schema (e.g. <bibref ref="XMLSchema10"/> or <bibref ref="XMLSchema11"/>) is used for the definitions of primitives such as characters and names, and for the definitions  of operations such as normalization of line endings and normalization of whitespace in attribute values. It is recommended that the latest applicable version be used (even if it is published later than this specification).</p></item>

<item><p>How XDM instances are created from sources other than an Infoset or PSVI.</p></item>
<item role="xquery"><p>Any components of the <termref def="dt-static-context">static context</termref> or <termref def="dt-dynamic-context">dynamic context</termref> that are overwritten or augmented by the implementation.</p></item><item role="xpath"><p>Whether the implementation supports the namespace axis.</p></item>
<item role="xquery"><p>The default handling of empty sequences returned by an ordering key (orderspec) in an <code>order by</code> clause (<code>empty least</code> or <code>empty greatest</code>).</p></item><item role="xquery"><p>The names and semantics of any <termref def="dt-extension-expression">extension expressions</termref> (<termref def="dt-pragma">pragmas</termref>) recognized by the implementation.</p></item><item role="xquery"><p>The names and semantics of any <termref def="dt-option-declaration">option declarations</termref>  recognized by the implementation.</p></item><item role="xquery"><p>Protocols (if any) by which parameters can be passed to an external function, and the result of the function can returned to the invoking query.</p></item><item role="xquery"><p>The process by which the specific modules to be imported by a
<termref def="dt-module-import">module import</termref> are identified, if the <termref def="dt-module-feature">Module Feature</termref> is supported (includes processing of location hints, if any.)</p></item>

<item role="xquery"><p>The means by which serialization is invoked, if the <termref def="dt-serialization-feature">Serialization Feature</termref> is supported.</p></item><item role="xquery"><p>The default values for the <code>byte-order-mark</code>, <code>encoding</code>, <code diff="add" at="2015-07-08">html-version</code>, <code diff="add" at="2015-07-08">item-separator</code>, <code>media-type</code>, <code>normalization-form</code>, <code>omit-xml-declaration</code>, <code>standalone</code>, and <code>version</code> parameters, if the <termref def="dt-serialization-feature">Serialization Feature</termref> is supported.</p></item><item role="xquery"><p>The result of an unsuccessful call to an external function (for example,
if the function implementation cannot be found or does not return a value
of the declared type).</p></item><item role="xquery"><p>Limits on ranges of values for various data types, as enumerated in <specref ref="id-data-model-conformance"/>.</p></item>

<item role="xquery"><p>Syntactic extensions to XQuery, including both their syntax and semantics, as discussed in <specref ref="id-syntax-extensions"/>.</p></item>

<item><p>Whether the type system is based on <bibref ref="XMLSchema10"/> or <bibref ref="XMLSchema11"/>. An implementation that has based its type system on XML Schema 1.0 is not required to support the use of the <code>xs:dateTimeStamp</code> constructor or the use of <code>xs:dateTimeStamp</code> <phrase diff="add" at="bug28299">or <code>xs:error</code></phrase> as <nt def="TypeName">TypeName</nt> in any expression.</p></item>

<item><p>The signatures of functions provided by the implementation or via an implementation-defined API (see <specref ref="static_context"/>).</p></item>

<item><p>Any <termref def="dt-environment-variables">environment variables</termref> provided by the implementation.</p></item>

<item><p>Any rules used for static typing (see <specref ref="id-static-analysis"/>).</p></item>

<item><p>Any serialization parameters provided by the implementation<phrase role="xquery"> (see  <specref ref="id-serialization"/>).</phrase></p></item>

<item role="xquery"><p>The means by which the location hint for a serialization parameter document identifies the corresponding XDM instance (see  <specref ref="id-serialization"/>).</p></item>

<item><p>What error, if any, is returned if an external function's implementation does not return the declared result type (see <specref ref="id-consistency-constraints"/>).</p></item>

<item role="xquery"><p>Any annotations defined by the implementation, and their associated behavior (see <specref ref="id-annotations"/>).</p></item>

<item role="xquery"><p>Any <termref def="dt-function-assertion">function assertions</termref> defined by the implementation.</p></item>

<item role="xquery"><p>The effect of function assertions understood by the implementation on <specref ref="id-assertions-subtype"/>.</p></item>

<item role="xquery"><p>Any implementation-defined variables defined by the implementation. (see <specref ref="id-variables"/>).</p></item>

<item role="xquery"><p>The ordering associated with <code>fn:unordered</code> in the implementation (see <specref ref="id-unordered-expressions"/>).</p></item>

<item role="xquery"><p>Any additional information provided for try/catch via the <code>err:additional</code> variable (see <specref ref="id-try-catch"/>).</p></item>

<item role="xquery"><p>The default boundary-space policy (see <specref ref="id-boundary-space-decls"/>).</p></item>

<item role="xquery"><p>The default collation (see <specref ref="id-default-collation-declaration"/>).</p></item>

<item role="xquery"><p>The default base URI (see <specref ref="id-base-uri-decl"/>).</p></item>

</olist>

<note><p>Additional <termref def="dt-implementation-defined">implementation-defined</termref> items are listed in <bibref ref="xpath-datamodel-31"/> and <bibref ref="xpath-functions-31"/>.</p></note></div1>
<div1 id="id-references">
<head>References</head>
<div2 id="id-normative-references">
<head>Normative References</head>

<blist>

<bibl id="RFC2119" key="RFC2119">S. Bradner.
      <emph>Key Words for use in RFCs to Indicate Requirement Levels.</emph> IETF RFC 2119.
      See <loc href="http://www.ietf.org/rfc/rfc2119.txt">http://www.ietf.org/rfc/rfc2119.txt</loc>.</bibl>

<bibl id="RFC3986" key="RFC3986">T. Berners-Lee, R. Fielding, and
      L. Masinter.  <emph>Uniform Resource Identifiers (URI): Generic
      Syntax</emph>. IETF RFC 3986.
      See <loc href="http://www.ietf.org/rfc/rfc3986.txt">http://www.ietf.org/rfc/rfc3986.txt</loc>.</bibl>

<bibl id="RFC3987" key="RFC3987">M. Duerst and M. Suignard.
      <emph>Internationalized Resource Identifiers (IRIs)</emph>.
      IETF RFC 3987. See <loc href="http://www.ietf.org/rfc/rfc3987.txt">http://www.ietf.org/rfc/rfc3987.txt</loc>.</bibl>

<bibl id="ISO10646" key="ISO/IEC 10646">ISO (International Organization for Standardization).
      <emph>ISO/IEC 10646:2003. Information technology&mdash;Universal Multiple-Octet Coded Character Set (UCS)</emph>,
      as, from time to time, amended, replaced by a new edition, or expanded by the addition of new parts.
      [Geneva]: International Organization for Standardization.
      (See <loc href="http://www.iso.org">http://www.iso.org</loc> for the latest version.)</bibl>

<bibl id="Unicode" key="Unicode">The Unicode Consortium. <emph>The Unicode Standard</emph>
      Reading, Mass.: Addison-Wesley, 2003, as updated from time to time by the publication of new versions.
      See <loc href="http://www.unicode.org/standard/versions/">http://www.unicode.org/standard/versions/</loc>
      for the latest version and additional information on versions of the standard and of the Unicode Character Database.
      The version of Unicode to be used is <termref def="dt-implementation-defined">implementation-defined</termref>,
      but implementations are recommended to use the latest Unicode version.</bibl>

<bibl xmlns:xlink="http://www.w3.org/1999/xlink" id="XML" key="XML 1.0"
      xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest">World Wide Web Consortium.
      <emph>Extensible Markup Language (XML) 1.0.</emph>
      W3C Recommendation.
      See <loc href="http://www.w3.org/TR/REC-xml/" xlink:type="simple" xlink:show="replace"
      xlink:actuate="onRequest">http://www.w3.org/TR/REC-xml/</loc>.
      The edition of XML 1.0 must be no earlier than the Third Edition;
      the edition used is <termref def="dt-implementation-defined">implementation-defined</termref>,
      but we recommend that implementations use the latest version.
</bibl>

<bibl id="XML1.1" key="XML 1.1">World Wide Web Consortium.
      <emph>Extensible Markup Language (XML) 1.1.</emph>
      W3C Recommendation.
      See <loc href="http://www.w3.org/TR/xml11/">http://www.w3.org/TR/xml11/</loc>
</bibl>

<bibl id="XMLBASE" key="XML Base">World Wide Web Consortium.
      <emph>XML Base.</emph> W3C Recommendation. See
      <loc href="http://www.w3.org/TR/xmlbase/">http://www.w3.org/TR/xmlbase/</loc>
</bibl>

<bibl id="XMLNAMES" key="XML Names">World Wide Web Consortium.
      <emph>Namespaces in XML.</emph> W3C Recommendation. See
      <loc href="http://www.w3.org/TR/REC-xml-names/">http://www.w3.org/TR/REC-xml-names/</loc>
</bibl>

<bibl id="XMLNAMES11" key="XML Names 1.1">World Wide Web Consortium.
      <emph>Namespaces in XML 1.1.</emph> W3C Recommendation. See
      <loc href="http://www.w3.org/TR/xml-names11/">http://www.w3.org/TR/xml-names11/</loc>
</bibl>

<bibl id="XMLID" key="XML ID">World Wide Web Consortium. <emph>xml:id Version 1.0.</emph>
      W3C Recommendation. See <loc href="http://www.w3.org/TR/xml-id/">http://www.w3.org/TR/xml-id/</loc></bibl>

<bibl id="XMLSchema10" key="XML Schema 1.0">World Wide Web Consortium.
      <emph>XML Schema, Parts 0, 1, and 2 (Second Edition)</emph>. W3C Recommendation, 28 October 2004.
      See <loc href="http://www.w3.org/TR/xmlschema-0/">http://www.w3.org/TR/xmlschema-0/</loc>,
      <loc href="http://www.w3.org/TR/xmlschema-1/" id="schema1">http://www.w3.org/TR/xmlschema-1/</loc>,
      and <loc href="http://www.w3.org/TR/xmlschema-2/" id="schema2">http://www.w3.org/TR/xmlschema-2/</loc>.</bibl>

<bibl id="XMLSchema11" key="XML Schema 1.1">World Wide Web Consortium.
      <emph>XML Schema, Parts 1, and 2</emph>. W3C Recommendation 5 April 2012.
      See <loc href="http://www.w3.org/TR/xmlschema11-1/" id="schema1-11">http://www.w3.org/TR/xmlschema11-1/</loc>,
      and <loc href="http://www.w3.org/TR/xmlschema11-2/" id="schema2-11">http://www.w3.org/TR/xmlschema11-2/</loc>.</bibl>

<bibl id="xpath-datamodel-31" key="XQuery and XPath Data Model (XDM) 3.1"/>

<bibl id="xpath-functions-31" key="XQuery and XPath Functions and Operators 3.1"/>

<bibl id="xslt-xquery-serialization-31" key="XSLT and XQuery Serialization 3.1"/>

<bibl id="xquery-update-30" key="XQuery Update Facility 3.0" role="xquery"/>


</blist>
</div2>
<div2 id="id-non-normative-references">
<head>Non-normative References</head>

<blist>

<bibl id="xquery-30-requirements" key="XQuery 3.0 Requirements" role="xquery"/>
<bibl id="xquery-31-requirements" key="XQuery 3.1 Requirements" role="xquery"/>

<bibl id="xquery-30" key="XQuery 3.0: An XML Query Language" role="xquery"/>
<bibl id="xquery-31" key="XQuery 3.1: An XML Query Language" role="xpath"/>

<bibl id="xquery-semantics" key="XQuery 1.0 and XPath 2.0 Formal Semantics"/>

<bibl id="xqueryx-31" key="XQueryX 3.1" role="xquery"/>

<bibl id="xslt-30" key="XSL Transformations (XSLT) Version 3.0"/>

<bibl id="DOM" key="Document Object Model" role="xquery">World Wide Web Consortium. <emph>Document Object Model (DOM) Level 3 Core Specification.</emph> W3C Recommendation, April 7, 2004. See <loc href="http://www.w3.org/TR/DOM-Level-3-Core/">http://www.w3.org/TR/DOM-Level-3-Core/</loc>.</bibl>

<bibl id="XINFO" key="XML Infoset">World Wide Web
Consortium. <emph>XML Information Set <phrase diff="add" at="2015-07-08">(Second Edition).</phrase></emph> W3C Recommendation <phrase diff="chg" at="2015-07-08">4 February 2004.</phrase> See
<loc href="http://www.w3.org/TR/xml-infoset/">http://www.w3.org/TR/xml-infoset/</loc>
</bibl>

<bibl key="XML Path Language (XPath) Version 1.0" id="xpath"/>

<bibl key="XML Path Language (XPath) Version 2.0" id="xpath20"/>

<bibl key="XML Path Language (XPath) Version 3.0" id="xpath-30"/>
<bibl key="XML Path Language (XPath) Version 3.1" id="xpath-31" role="xquery"/>

<bibl id="XPTR" key="XPointer">World Wide Web Consortium. <emph>XML
Pointer Language (XPointer).</emph> W3C Last Call Working Draft 8 January 2001.
See <loc href="http://www.w3.org/TR/WD-xptr">http://www.w3.org/TR/WD-xptr</loc></bibl>

<bibl id="UseCases" key="XML Query Use Cases" role="xquery">World Wide
Web Consortium. <emph>XML Query Use Cases</emph>. W3C Working Draft, 8 June 2006.
See <loc href="http://www.w3.org/TR/xquery-use-cases/">http://www.w3.org/TR/xquery-use-cases/</loc>.</bibl>

<bibl id="xml11schema10" key="XML 1.1 and Schema 1.0" role="xquery">World Wide
Web Consortium. <emph>Processing XML 1.1 Documents with XML Schema 1.0 Processors</emph>.
W3C Working Group Note, 11 May 2005.
See <loc href="http://www.w3.org/TR/xml11schema10/">http://www.w3.org/TR/xml11schema10/</loc>.</bibl>

<bibl id="RFC1738" key="Uniform Resource Locators (URL)" role="xquery">Internet Engineering Task Force (IETF).
<emph>Uniform Resource Locators (URL)</emph>. Request For Comment No. 1738, Dec. 1994.
See <loc href="http://www.ietf.org/rfc/rfc1738.txt">http://www.ietf.org/rfc/rfc1738.txt</loc>.</bibl>

<bibl key="ODMG" id="ODMG" role="xquery">Rick Cattell et al. <emph>The
Object Database Standard: ODMG-93, Release 1.2</emph>. Morgan Kaufmann
Publishers, San Francisco, 1996.</bibl>

<bibl key="Quilt" id="Quilt" role="xquery">Don Chamberlin,
Jonathan Robie, and Daniela Florescu. <emph>Quilt: an XML Query Language for
Heterogeneous Data Sources</emph>.  In <emph>Lecture Notes in Computer
Science</emph>, Springer-Verlag, Dec. 2000.  
<!--
Also available at <loc href="http://www.almaden.ibm.com/cs/people/chamberlin/quilt_lncs.pdf">http://www.almaden.ibm.com/cs/people/chamberlin/quilt_lncs.pdf</loc>.
See also <loc href="http://www.almaden.ibm.com/cs/people/chamberlin/quilt.html">http://www.almaden.ibm.com/cs/people/chamberlin/quilt.html</loc>.
-->
</bibl>

<bibl key="XML-QL" id="XML-QL" role="xquery">Alin Deutsch, Mary Fernandez,
Daniela Florescu, Alon Levy, and Dan Suciu.
<emph>A Query Language for XML</emph>.
</bibl>

<bibl key="SQL" id="SQL" role="xquery">International Organization for
Standardization (ISO).  <emph>Information Technology &mdash; Database Language
SQL</emph>. Standard No. ISO/IEC 9075:2011.  (Available from American
National Standards Institute, New York, NY 10036, (212)
642-4900.)</bibl>

<bibl key="XQL" id="XQL" role="xquery">J. Robie, J. Lapp, D. Schach. <emph>XML
Query Language (XQL)</emph>. See <loc href="http://www.w3.org/TandS/QL/QL98/pp/xql.html">http://www.w3.org/TandS/QL/QL98/pp/xql.html</loc>.</bibl>

</blist>
</div2>

<div2 id="id-background-material"><head>Background Material</head>
<blist>

<bibl id="CHARMOD" key="Character Model">World Wide Web Consortium.
<emph>Character Model for the World Wide Web.</emph> W3C Working
Draft. See <loc href="http://www.w3.org/TR/charmod/">http://www.w3.org/TR/charmod/</loc>.</bibl>

<bibl id="xslt" key="XSL Transformations (XSLT) Version 1.0"/>

<bibl id="UseCaseQueries" key="Use Case Sample Queries" role="xquery">Queries
from the XQuery 1.0 Use Cases, presented in a single file.
See
<loc href="http://www.w3.org/2010/12/xquery-30-use-cases/xquery-30-use-case-queries.txt">http://www.w3.org/2010/12/xquery-30-use-cases/xquery-30-use-case-queries.txt</loc>.
</bibl>

<bibl id="XQueryQueries" key="XQuery Sample Queries" role="xquery">Queries
from this document, presented in a single file.
See
<loc href="http://www.w3.org/2013/01/xquery-30-use-cases/xquery-30-example-queries.txt">http://www.w3.org/2013/01/xquery-30-use-cases/xquery-30-example-queries.txt</loc>.
</bibl>

<bibl id="Moustache" key="Moustache" role="xquery">
<emph>mustache</emph> - Logic-less templates. See
<loc href="http://mustache.github.io/mustache.5.html">http://mustache.github.io/mustache.5.html</loc>.
</bibl>

</blist>
</div2>
</div1>


&errors;&mime-type;<inform-div1 id="id-glossary"><head>Glossary</head>
<!-- This processing instruction automatically generates the glossary. -->
<?glossary?>
</inform-div1>


&examples;

<inform-div1 id="id-incompatibilities">

<head>Backwards Compatibility</head>

<div2>
<head>Incompatibilities relative to &language-tech; 3.0</head>
<p>The following names are now reserved, and cannot appear as function names (see <specref ref="id-reserved-fn-names"/>):</p>

<ulist>
  <item>
    <p>
      <code>map</code>
    </p>
  </item>
  <item>
    <p>
      <code>array</code>
    </p>
  </item>
</ulist>
</div2>

<div2>
<head>Incompatibilities relative to &language-tech; <phrase role="xpath">2.0</phrase><phrase role="xquery">1.0</phrase></head>

<p>The following names are now reserved, and cannot appear as function names (see <specref ref="id-reserved-fn-names"/>):</p>

<ulist>
  <item>
    <p>
      <code>function</code>
    </p>
  </item>
  <item>
    <p>
      <code>namespace-node</code>
    </p>
  </item>
  <item>
    <p>
      <code>switch</code>
    </p>
  </item>
</ulist>


<p diff="chg" at="bug28894">If <code>U</code> is a union type with <code>T</code> as one of its members, and if <code>E</code> is an element with <code>T</code> as its type annotation, the expression <code role="parse-test">E instance of element(*, U)</code> returns <code>true</code> in both &language-tech; 3.0 and 3.1.  In <phrase role="xpath">XPath 2.0</phrase><phrase role="xquery">XQuery 1.0</phrase>, it returns <code>false</code>.</p>

 <note diff="chg" at="bug28894"><p>This is not an incompatibility with &language-tech; 3.0.  It should be included in &language-tech; 3.0 as an incompatibility with <phrase role="xpath">XPath 2.0</phrase><phrase role="xquery">XQuery 1.0</phrase> but it was discovered after publication.</p></note>
</div2>

&xpath-backwards-compat;

</inform-div1>

<inform-div1 id="id-revision-log">
<head>Change Log</head>

<p role="xquery">This appendix lists the changes that have been made to this
specification since the publication of the XQuery 3.0 Recommendation.</p>

<p role="xpath">This appendix lists the changes that have been made to this
specification since the publication of XPath 3.0 Recommendation.</p>

<div2 id="id-changes-since-2CR">
  <head>Changes since the Candidate Recommendation of 17 December 2015</head>
  <div3>
    <head>Substantive Changes</head>
    <olist>
      <item><p>Added switch expressions to list of conditional expressions in <specref ref="id-errors-and-opt"/>.  Resolves  <loc href="&BZ;29320">Bug 29320</loc>.</p></item>
      <item><p>If the <termref def="dt-content-expression">content expression</termref> is not provided explicitly, the content expression is <code>()</code>.  Previously, no content expression was provided, but the value of the content was specified.  This caused problems evaluating functions with empty bodies, and failed to provide a host language expression for the function implementation in the data model.</p></item>
      <item role="xquery"><p>Added error XQST0079 back, used when the content expression of a pragma is missing.  Resolves <loc href="&BZ;29526">Bug 29526</loc>.</p></item>
      <item><p>Partial function application never returns a map or an array.  If <code>$F</code> is a map or an array, then <code>$F(?)</code> is 
             a partial function application that returns a function, but the function it returns is not a map nor an array. Resolves action A-640-03.</p></item>
      <item><p>Added <code>xs:anySimpleType</code> to the list of types that have no contructor function.   Resolves <loc href="&BZ;29583">Bug 29583</loc>.</p></item>
      <item><p>Added requirement to specify minimum values for some date and time functions.   Resolves <loc href="&BZ;29576">Bug 29576</loc>.</p></item>
      <item role="xquery"><p>Added a <termref def="should">SHOULD</termref> requirement that the <code>totalDigits</code> facet be at least 20 in <specref ref="id-data-model-conformance"/>. Added a note outlineing the issues for XPath in the section on numeric literals. Resolves  <loc href="&BZ;29419">Bug 29419</loc>.</p></item>
      <item><p>Changed the rules for atomization in lookup in <specref ref="id-lookup"/>.   Resolves  <loc href="&BZ;29622">Bug 29622</loc>.</p></item>
      <item><p>Allowed more specific typing of maps, arrays, and functions.  Affects <specref ref="id-map-test"/>, <specref ref="id-array-test"/>, <specref ref="id-itemtype-subtype"/>, <specref ref="id-eval-function-call"/>, and <specref ref="id-inline-func"/>. Resolves <loc href="&BZ;29586">Bug 29586</loc>.</p></item>
      <item><p>Changed <specref ref="id-map-lookup"/> to define semantics using only <xspecref spec="FO31" ref="func-map-get"/>, changed <specref ref="id-array-lookup"/> to define semantics using only <xspecref spec="FO31" ref="func-array-get"/>, thus aligning edge cases and eliminating the possibility of discrepancies creeping in.   Resolves  <loc href="&BZ;29683">Bug 29683</loc>.</p></item>
      <item role="xquery"><p>Added the following text to clarify <code>xml:id</code> processing in  <specref ref="id-validate"/>: "If the instance being validated contains an xml:id attribute, both lax and strict validation cause this attribute to be subjected to [xml:id] processing: that is, the attribute is checked for uniqueness, and is typed as xs:ID, and the containing element is therefore eligible as a target for the id() function."   Resolves  <loc href="&BZ;29975">Bug 29975</loc>.</p></item>
      <item role="xquery"><p>Removed <code>fn:put()</code> Feature from <specref ref="id-conformance"/>. Resolves <loc href="&BZ;29959">Bug 29959</loc>.</p></item>
    </olist>
  </div3>
  <div3>
    <head>Editorial Changes</head>
    <olist>
      <item><p>Significantly changed the prose in <specref ref="id-eval-function-call"/>.  Resolves  <loc href="&BZ;29277">Bug 29277</loc>.</p></item>
      <item><p>Created formal definition<phrase role="xpath">s</phrase> for <termref def="dt-implementation-defined-function">implementation-defined function</termref><phrase role="xpath">
      and <termref def="dt-host-language-function" role="xpath">host language function</termref></phrase>.</p></item>
      <item><p>Fixed a problem with conditional text in <specref ref="id-itemtype-subtype"/>:
      <code>Bi</code> is <code><phrase role="xquery">[AnnotationsB]</phrase> function(*)</code>,
      <code>Ai</code> is a <nt def="FunctionTest">FunctionTest</nt><phrase role="xquery"> with annotations <code>[AnnotationsA]</code>, and <code>subtype-assertions(AnnotationsA, AnnotationsB)</code>, where <code>[AnnotationsB]</code> and <code>[AnnotationsA]</code> are optional lists of one or more annotations</phrase>.
      Resolves  <loc href="&BZ;29414">Bug 29414</loc>.</p></item>
      <item><p>Changed definition of <termref def="dt-same-key">same key</termref>, redefining it in terms of  <xspecref spec="FO31" ref="func-same-key"/>. Resolves  <loc href="&BZ;29362">Bug 29362</loc>.</p></item>
      <item><p>Moved definition of <termref def="dt-enclosed-expression">enclosed expression</termref> to prevent it from disappearing in XPath. Resolves  <loc href="&BZ;29382">Bug 29382</loc>.</p></item>
      <item><p>Modified <specref ref="id-conformance"/> to be more consistent with RFC2119.  Resolves  <loc href="&BZ;29498">Bug 29498</loc>.</p></item>
      <item><p>Deleted erroneous note in <specref ref="id-unary-lookup"/> that claimed <code>array?*</code> is equivalent to <code>array:flatten</code>. Resolves  <loc href="&BZ;29487">Bug 29487</loc>.</p></item>
      <item><p>Provided definitions of <termref def="dt-implementation-defined-function">implementation-defined function</termref>, moved definition of <termref def="dt-external-function">external function</termref><phrase role="xpath">, added definition of <termref def="dt-host-language-function">host language function</termref></phrase>.  Eliminated references to "host programming languages". Clarified wording on external function declarations. Resolves  <loc href="&BZ;29509">Bug 29509</loc>.</p></item>
      <item role="xquery"><p>Clarified the relationship between an <nt def="ExtensionExpr">ExtensionExpr</nt> and its associated expression.</p></item>
      <item role="xpath"><p>Removed a dangling otherwise clause that belonged to the XQuery specification. Resolves <loc href="&BZ;29693">Bug 29693</loc>.</p></item>
      <item><p>Made EBNF productions in the document body look the same as those in Appendix A (by adding production annotations to the former), thus eliminating the need to specify which is normative.</p></item>
      <item><p>Clarified ambiguous wording about comments in <specref ref="ExplicitWhitespaceHandling"/>. Resolves <loc href="&BZ;29700">Bug 29700</loc>.</p></item>
      <item role="xquery"><p>Added mention of <loc href="http://expath.org/spec/file">EXPath File Module</loc> to a non-normative note in <specref ref="id-serialization"/></p></item>     
    </olist>
  </div3>
</div2>
<div2>
  <head>Changes introduced in the Candidate Recommendation of 17 December 2015</head>
  <div3 id="id-changes-2CR-substantive">
    <head>Substantive Changes</head>
    <olist>
      <item role="xquery"><p><specref ref="id-string-constructors"/> have been added to simplify construction of structured strings.  Resolves actions A-617-04, A-618-07.</p></item>      
      <item><p>Significant rewrite of <specref ref="id-xs-error"/>. Resolves  <loc href="&BZ;29119">Bug 29119</loc>. </p></item>
      <item role="xquery"><p>Changed behavior and description of annotations and assertions as described in <loc href="&BZ;29170">Bug 29170</loc>.</p></item>
      <item role="xquery"><p>Corrected behavior of lax validation for XML Schema 1.1 as described in <loc href="&BZ;29197">Bug 29197</loc>.</p></item>
      <item><p>Removed non-normative description of casting rules, referring to the normative definition instead. Resolves <loc href="&BZ;29192">Bug 29192</loc>.</p></item>
      <item role="xquery"><p>In <specref ref="FunctionDeclns"/>, an implementation should raise a static error <errorref class="ST" code="0008"/> if an expression depends on the context item. Resolves <loc href="&BZ;4378">Bug 4378</loc>.</p></item>
      <item role="xquery"><p>Clarifications about pragmas in no namespace, change to allow the content expression to be absent in <specref ref="id-extension-expressions"/>. Resolves <loc href="&BZ;29225">Bug 29225</loc>.</p></item>
      <item role="xpath"><p>To allow streaming, context size may be undefined in an XPath implementation, in which case <code>last()</code> raises an error. Resolves <loc href="&BZ;29227">Bug 29227</loc>.</p></item>
      <item role="query"><p>Clarified semantics of external context item declaration in library modules. Resolves <loc href="&BZ;29246">Bug 29246</loc>.</p></item>
      <item role="xquery"><p>Removed error XQST0079 when the content expression of a pragma is missing.  Resolves <loc href="&BZ;29246">Bug 29246 (C)</loc>.</p></item>

      <item role="xquery"><p><specref ref="id-version-declaration"/> has been modified to reflect the version number proposal adopted from <loc href="&BZ;27779">Bug 27779</loc>, comment #3.  </p></item>


      <item role="xquery"><p><specref ref="id-schema-import"/> can now import
      <code>http://www.w3.org/2005/xpath-functions</code>, which
      imports the schemas described in <xspecref spec="FO31"
      ref="schema-for-json"/> and <xspecref spec="FO31"
      ref="func-analyze-string"/>. Resolves <loc href="&BZ;28174">Bug 28174</loc>.</p>
      </item>

      <item><p>In <specref ref="static_context"/>, clarified that
      only function signatures that are present in the static context
      &mdash; not actual function implementations. Resolves <loc
      href="&BZ;28175">Bug 28175</loc>.</p></item>
      <item role="xquery"><p>Changed default values of two serialization components 
      (<code>escape-uri-attributes</code> and <code>include-content-type</code>) in 
      <specref ref="id-xq-static-context-components"/>.  Resolves 
      <loc  href="&BZ;28691">Bug 28691</loc>.</p></item>

      <item><p>Changed rules for <termref def="dt-same-key">same key
      value</termref> to improve handling of maps in which keys may or
      may not have timezones.  Resolves  <loc  href="&BZ;28632">Bug 28632</loc>
      and  <loc  href="&BZ;28729">Bug 28729</loc>.</p></item>
      <item role="xquery"><p>Added new Higher Order functions to list of required functions in 
      <specref ref="id-higher-order-function-feature"/>.
      Resolves <loc href="&BZ;28045">Bug 28045</loc>.</p></item>
      <item><p>The precedence of the <specref ref="id-arrow-operator"/> has changed.  Resolves <loc href="&BZ;27537">Bug 27537</loc>.</p></item>
      <item><p>The error when atomizing a function, map, or array is <code>[err:FOTY0013]</code>, not <code>[err:FOTY0012]</code>.  Resolves <loc href="&BZ;27610">Bug 27610</loc>.</p></item>
      <item><p>Collections can now contain any item.  This affects <termref def="dt-known-collections">statically known collections</termref>, <termref def="dt-known-collections">statically known collection type</termref>, 
      <termref def="dt-available-collections">available collections</termref> (formerly known as <termref def="dt-available-collections">available node collections</termref>, 
      <termref def="dt-default-collection">default collection</termref> (formerly known as <termref def="dt-default-collection">default node collection</termref>, 
      <specref ref="id-consistency-constraints"/>, 
      <specref ref="id-input-sources"/><phrase role="xquery">
      <specref ref="id-xq-static-context-components"/>, 
      and <specref ref="id-xq-evaluation-context-components"/></phrase>.</p></item>
      <item role="xquery"><p>Added this text to clarify interpretation of XQuery serialization parameters in <specref ref="id-serialization"/>:
      For QName values, <phrase diff="del" at="bug28948">the EQName syntax is allowed and</phrase> prefixes are
      expanded to namespace URIs by means of the statically known
      namespaces, or if unprefixed, the default element/type namespace.  Resolves <loc href="&BZ;28486">Bug 28486</loc>.</p></item>
      <item><p>Fixed outdated text that restricted constructor functions to atomic or generalized atomic types.  Resolves <loc href="&BZ;28915">Bug 28915</loc>.</p></item>
      <item><p>Changed the semantics of <specref ref="id-postfix-lookup"/> . Resolves <loc href="&BZ;27536">Bug 27536</loc>, fixing inadequacies in the earlier resolution.</p></item>
      <item role="xquery"><p>Modified <specref ref="id-higher-order-function-feature"/> to account for maps and arrays.  Resolves <loc href="&BZ;28810">Bug 28810</loc>.</p></item>
    </olist>
  </div3>
  <div3 id="id-changes-PR-editorial">
  <head>Editorial Changes</head>
    <olist>
        <item><p>Refactored the grammar to use <code role="xpath">EnclosedExpr</code> <nt role="xquery" def="EnclosedExpr">EnclosedExpr</nt> consistently<phrase role="xquery">, accompanied by definitions for <termref def="dt-enclosed-expression">enclosed expression</termref>
        and <termref def="dt-content-expression">content expression</termref></phrase>.</p></item>
        <item><p>Added a paragraph clarifying the type of an array as a function.   Resolves <loc href="&BZ;29260">Bug 29260</loc>.</p></item>

        <item><p>Clarified how function coercion applies to maps and arrays using two examples.  Resolves <loc href="&BZ;27059">Bug 27059</loc>.</p></item>

        <item><p>Removed nine operators from <specref ref="mapping"/> to eliminate redundant specification. Resolves <loc href="&BZ;22456">Bug 22456</loc>.</p></item>
        <item role="xpath"><p>Modified <specref ref="id-conformance"/> to use the term <termref def="mustnot">MUST NOT</termref>. Resolves <loc href="&BZ;28023">Bug 28023</loc>.</p></item>
        <item role="xquery"><p>Removed out-of-date statement claiming that &language; does not define its own annotations.  Resolves <loc href="&BZ;28713">Bug 28713</loc>.</p></item>
        <item><p>Added explicit semantics for NCName in <specref ref="id-lookup"/>.  Resolves <loc href="&BZ;28701">Bug 28701</loc>.</p></item>
        <item><p>Deleted obsolete discussion of named function references and <code>xs:numeric</code>.
         Resolves <loc href="&BZ;28081">Bug 28081</loc>.</p></item>
        <item role="xpath"><p>Removed the unused definition of the initial context item.  Resolves <loc href="&BZ;28905">Bug 28905</loc>.</p></item>
        <item role="xquery"><p>Updated the description of XQST0098 in <specref ref="id-errors"/>.  Resolves <loc href="&BZ;28907">Bug 28907</loc>.</p></item>
        <item role="xquery"><p>Updated the description of XQST0076 in <specref ref="id-errors"/>.  Resolves <loc href="&BZ;28908">Bug 28908</loc>.</p></item>
        <item role="xquery"><p>Updated the description of XQST0052 in <specref ref="id-errors"/>.  Resolves <loc href="&BZ;28909">Bug 28909</loc>.</p></item>
        <item role="xquery"><p>Removed the step that atomizes arrays in <specref ref="id-computedElements"/>.  Arrays are flattened earlier in the process (See <loc href="&BZ;27463">Bug 27463</loc>).  Resolves  <loc href="&BZ;28664">Bug 28664</loc> </p></item>
        <item role="xquery"><p>Added <code>item-separator</code> and <code>html-version</code> to the list of serialization parameters that have
        implementation-defined defaults in <specref ref="id-impl-defined-items"/></p></item>
        <item role="xquery"><p>Clarified that annotations in unrecognized namespaces are ignored.  Resolves <loc href="&BZ;28711">Bug 28711</loc>.</p></item>
        <item role="xquery"><p>Fixed inconsistencies for  list of namespaces for  <errorref class="ST" code="0045"/>. Resolves <loc href="&BZ;27858">Bug 27858</loc>.</p></item>
        <item><p>Significantly changed description of names in <specref ref="id-basics"/>.  Resolves <loc href="&BZ;28241">Bug 28241</loc>.</p></item>
        <item><p>Fixed a number of dangling references to XQuery/XPath 3.0 where 3.1 was intended. Resolves <loc href="&BZ;28782">Bug 28782</loc>.</p></item>
        <item role="xquery"><p>Clarified the text in <specref ref="id-variable-declarations"/> that describes the static type of the variable.  Resolves <loc href="&BZ;28749">Bug 28749</loc>.</p></item>
        <item><p>Clarified the text in <specref ref="id-incompatibilities"/> about SequenceType matching and union types. Resolves <loc href="&BZ;28894">Bug 28894</loc>.</p></item>
        <item><p>Renamed Available Resource Collections to <termref def="dt-available-uri-collections">Available URI Collections</termref>, 
        renamed Available Node Collections to <termref def="dt-available-collections">Available Collections</termref>, 
        renamed Default Resource Collection to <termref def="dt-default-uri-collection">Default URI Collection</termref>, 
        renamed Default Node Collection to <termref def="dt-default-collection">Default Collection</termref>.
        Resolves <loc href="&BZ;28957">Bug 28957</loc>.</p></item>
        <item><p>Clarified the definition of <termref def="dt-built-in-function">built-in functions</termref>.  Resolves <loc href="&BZ;28282">Bug 28282</loc>.</p></item>
        <item role="xquery"><p>Changed wording re initial context item in
          <specref ref="eval_context"/>,
          <specref ref="id-context-item-declarations"/>, and
          <specref ref="id-xq-evaluation-context-components"/>,
          to address <loc href="&BZ;29027">Bug 29027</loc>.</p>
        </item>
        <item><p>Clarified the text in <specref ref="id-arrow-operator"/>.  Resolves <loc href="&BZ;29346">Bug 29346</loc>.</p></item>
    </olist>

  </div3>
</div2>

<div2>
  <head>Changes introduced in the Candidate Recommendation of 18 December 2014</head>

  <div3 id="id-changes-CR-substantive">
    <head>Substantive Changes</head>
    <olist>
      <item><p>If a value in a map constructor or a member in an array constructor is a map or array, it is copied. If a value in a map
      constructor or a member in an array constructor is a node, it is not copied. Resolves <loc href="&BZ;26958">Bug 26958</loc>.</p></item>
      <item><p>In the definition of <termref def="dt-numeric">numeric</termref>, we now state that all numeric types are member types of <code>xs:numeric</code>.  Resolves <loc href="&BZ;20631">Bug 20631</loc>.</p></item>
      <item role="xquery"><p><specref ref="id-mime-type"/> has been updated to reflect the new version number and the possibility that an implementation may support updates. Resolves  <loc href="&BZ;27335">Bug 27335</loc>.</p></item>
      <item role="xquery"><p><specref ref="id-version-declaration"/> has been updated to reflect the new version. Resolves  <loc href="&BZ;27094">Bug 27094</loc>.</p></item>
      <item><p>Modified rule 14 of <specref ref="id-itemtype-subtype"/>. Resolves <loc href="&BZ;27175">Bug 27175</loc>.</p></item>
      <item><p>In <specref ref="id-unary-lookup"/>, if the context item is not a map or an array, a type error [err:XPTY0004] is raised.  If the array index is out of bounds, [err:FOAY0001] is raised. Resolves <loc href="&BZ;27382">Bug 27382</loc>.</p></item>
      <item><p>Changed the semantics of <specref ref="id-postfix-lookup"/> to <code>for $a in E, $b in S return $a($b)</code>. Resolves <loc href="&BZ;27536">Bug 27536</loc>.</p></item>
      <item><p>Arrays in element content are flattened, not atomized. Resolves <loc href="&BZ;27463">Bug 27463</loc>.</p></item>
      <item><p><specref ref="id-arrow-operator"/> is now well defined when the left hand operand is a sequence rather than an item.  Partially resolves <loc href="&BZ;27537">Bug 27537</loc>.</p></item>
    </olist>
  </div3>

  <div3 id="id-changes-CR-editorial">
    <head>Editorial Changes</head>
    <olist>
      <item><p>Modified the wording used to describe node identity per <loc href="&BZ;27048">Bug 27048</loc>, comment #2.</p></item>
      <item><p>Fixed specification gaps in unary lookup.  Resolves <loc href="&BZ;27455">Bug 27455</loc>.</p></item>
    </olist>
  </div3>

</div2>

<div2 id="id-changes-prior-drafts">
  <head>Changes introduced in prior Working Drafts</head>

<!--  <div3 id="id-changes-WD-substantive">
    <head>Substantive Changes</head>
-->
  <olist>
    <item diff="chg" at="bug28782"><p>Added <specref ref="id-maps"/> and <specref ref="id-arrays"/>. These are the most important new features in &language;</p></item>
    <item role="xquery"><p>If a map key expression is not a single value, raises XPTY0004. Formerly, the error was XQDY0136. Resolves  <loc href="&BZ;26558">Bug 26558</loc>.</p></item>
    <item><p>Clarified error code XQST0134 for XPath implementations that do not support the namespace axis, default axis for namespace-node() in abbreviated syntax. Resolves  <loc href="&BZ;26788">Bug 26788</loc>.</p></item>
    <item role="xquery"><p>Added the serialization options <code>allow-duplicate-names</code> and <code>json-node-output-method</code> to <specref ref="id-xq-static-context-components"/>.
    </p></item>
    <item><p>Simplified type conversions for value comparisons and orderspecs, eliminating the concept of lowest common supertype. Resolves  <loc href="&BZ;26453">Bug 26453</loc>.</p></item>
    <item><p>Modified text of <specref ref="id-general-comparisons"/> to clarify that the result of a comparison can be either false or an error. Resolves  <loc href="&BZ;26832">Bug 26832</loc>.</p></item>
    <item diff="del"><p>Fixed an example that lists the namespaces for an element node.  Resolves  <loc href="&BZ;26029">Bug 26029</loc>.</p></item>

    <item><p>Added <specref ref="id-map-constructors"/> and <specref ref="id-map-lookup"/>.</p></item>
    <item><p>Added <specref ref="id-array-constructors"/> and <specref ref="id-array-lookup"/>.</p></item>
    <item><p>Defined <specref ref="id-atomization"/> of an array (atomization of a map is an error).</p></item>
    <item><p>Added <specref ref="id-map-test"/> and <specref ref="id-array-test"/> to test whether an item is a map or an array respectively.</p></item>
    <item role="xquery"><p>Defined semantics of element constructors such that arrays in content are atomized to their member sequences.</p></item>
    <item><p>Added <code>exponent-separator</code> to the static context to support <code>fn:format-number()</code>.</p></item>
    <item role="xquery"><p>Added <code>fn:put()</code> Feature to <specref ref="id-conformance"/>.</p></item>
    <item role="xquery"><p>Added support for hexBinary and base64binary comparisons to <specref ref="mapping"/>.</p></item>
      <item><p>Eliminated use of to array functions that are no longer in Functions &amp; and Operators, such as <code>fn:seq()</code>. Changed <code>ay:</code> prefix to <code>array:</code> to match current  Functions &amp; and Operators.</p></item>
      <item><p>Added <specref ref="id-map-lookup"/>, replacing the less general map lookup operator from the previous Working Draft.</p></item>
      <item><p><specref ref="id-array-lookup"/> with negative integer arguments are no longer type errors, they are dynamic errors.</p></item>

      <item><p>If the keys in a <specref ref="id-map-constructors"/>
      contain both date/time values with a timezone and date/time
      values with no timezone, a dynamic error is raised. </p></item>

      <item><p>In maps, keys of type <code>xs:untypedAtomic</code> are no longer converted to <code>xs:string</code>.</p></item>

  </olist>

<!--  </div3> -->

<!-- 
  <div3 id="id-changes-prior-drafts-substantive">
    <head>Substantive Changes</head>

    <p>The following substantive changes have been made in prior Working Drafts.</p>

    <olist>
      <item><p></p></item>
    </olist>
  </div3>

  <div3 role="xquery" id="id-changes-prior-drafts-editorial">
    <head>Editorial Changes</head>

    <p>The following are some of the editorial changes that have been made.</p>

    <olist>
      <item><p></p></item>
    </olist>


  </div3>
-->
</div2>


</inform-div1>

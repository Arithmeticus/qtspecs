<?xml version="1.0" encoding='utf-8'?>
<!-- ************************************************************************ -->
<!-- This build.xml file is intended to build ONLY the **3.1** version of F&O -->
<!-- ************************************************************************ -->
<project name="xpath-functions" default="all" basedir=".">

<!-- Import a bunch of global property definitions -->
  <dirname property="etc.dir" file="../../etc/*"/>
  <import file="${etc.dir}/build-constants.xml"/>

<!-- Set properties for "this" document's build requirements -->
  <property name="generic-shortname" value="xpath-functions"/>
  <property name="this-spec-version-code" value="31"/>

  <property name="spec.code" value="FO${this-spec-version-code}"/>
  <property name="shortname" value="${generic-shortname}-${this-spec-version-code}"/>
  <property name="spec.uri" value="${W3C.TR}/${shortname}/"/>
  <property name="spec.xml" value="${src.dir}/${generic-shortname}.xml"/>
  <property name="merged-spec.xml" value="${src.dir}/xpath-functions-expanded.xml"/>

  <!-- 2008-09-03, Jim: The following property has no meaning at present,     -->
  <!--   because we do not build errata in the qtspecs tree. Maybe later...   -->
<!--  <property name="errata.xml" value="${src.dir}/${generic-shortname}-errata.xml"/> -->

   <!--<property name="spec.style" value="${shared.style.dir}/xmlspec-override.xsl"/>-->
  <property name="merge.style" value="style/merge-function-specs.xsl"/>
  <property name="spec.style" value="style/xpath-functions.xsl"/>
  <property name="spec.diff.style" value="style/fo-diff.xsl"/>
  
  <property name="skiptidy" value="true"/>

<!-- Import target, etc. definitions that work globally -->
  <import file="${etc.dir}/build-impl.xml"/>

<!-- Recall that any targets defined herein override targets of the same name -->
<!--   that are defined in build-impl.xml.  If you cannot find a target of a  -->
<!--   given name in this file, look in build-impl.xml.                       -->

<!-- ======================================================================== -->

  <!-- additional properties -->
<!-- This spec doesn't require an assembly step, so this property is undefined-->
<!--  <property name="assemble-spec-file" value="????"/> -->

  <!-- ====================================================================== -->

  <!-- The "help" template displays on the message medium the names of the    -->
  <!--   various targets in this project and their purposes.                  -->
  <target name="help">
    <echo message="This project to build ${shortname} includes a number of targets."/>
    <echo message="To invoke any of these targets from the command line, use 'ant target-name'"/>
    <echo message="  all -- the default target (target-name not required); builds 'everything'"/>
    <echo message="  spec -- causes the spec and diff document to be built and images positioned"/>
    <echo message="  chk.spec -- determines whether the spec HTML must be created"/>
    <echo message="  -style-spec -- transforms the document sources into near-pubrules-ready HTML"/>
    <echo message="  copy-images -- copies shared images into the local images directory"/>
    <echo message="  -copy-xml -- creates final XML source file from assembled source file"/>
    <echo message="  chk.namespacedocs -- checks whether the various namespace documents must be built"/>
    <echo message="  namespacedocs -- transforms namespace document sources into XHTML and RDF namespace docs"/>
    <echo message="  chk.ns-xpath-functions -- checks whether the xpath-functions namespace document must be built"/>
    <echo message="  ns-xpath-functions -- transforms namespace document sources into XHTML and RDF namespace docs"/>
    <echo message="  chk.ns-xpath-math-functions -- checks whether the xpath-math-functions namespace document must be built"/>
    <echo message="  ns-xpath-math-functions -- transforms namespace document sources into XHTML and RDF namespace docs"/>
    <echo message="  chk.ns-xpath-map-functions -- checks whether the xpath-map-functions namespace document must be built"/>
    <echo message="  ns-xpath-map-functions -- transforms namespace document sources into XHTML and RDF namespace docs"/>
    <echo message="  chk.ns-xpath-array-functions -- checks whether the xpath-array-functions namespace document must be built"/>
    <echo message="  ns-xpath-array-functions -- transforms namespace document sources into XHTML and RDF namespace docs"/>
    <echo message="  chk.ns-errors -- checks whether the errors namespace document must be built"/>
    <echo message="  chk.ns-codepoint -- checks whether the codepoint 'namespace' document must be built"/>
    <echo message="  ns-codepoint -- transforms 'namespace' document sources into XHTML and RDF namespace docs"/>
    <echo message="  chk.ns-insensitive -- checks whether the codepoint 'insensitive' document must be built"/>
    <echo message="  ns-insensitive -- transforms 'namespace' document sources into XHTML and RDF namespace docs"/>
    <echo message="  chk.ns-cua -- checks whether the codepoint 'UCA' document must be built"/>
    <echo message="  ns-uca -- transforms 'namespace' document sources into XHTML and RDF namespace docs"/>
    <echo message="  ns-errors -- transforms namespace document sources into XHTML and RDF namespace docs"/>
    <echo message="  stage -- stages the contents of the .../html/ directory for publication"/>
    <echo message="  stage-nsdocs -- stages the namespace document contents of the .../html/ directory for publication"/>
    <echo message="The targets that are most likely to be desired from the command line are 'all', 'spec' and the namespace build targets."/>
    <echo message="Please note that there is not currently a target that builds a diff document for this project."/>
  </target>

<!-- ======================================================================== -->

  <!-- Overrides global template to omit ",errata" and add namespace docs     -->
  <target name="all"
          depends="clean, spec, namespacedocs"
          description="This is the default target."/>

          <!-- dropped quickref - MHK 2009-01-06 -->

<!-- ======================================================================== -->

  <!-- Overrides global template to check/build specific namespace documents  -->
  <target name="namespacedocs"
          depends="chk.namespacedocs,
          ns-xpath-functions, ns-xpath-math-functions,
          ns-xpath-map-functions, ns-xpath-array-functions,
          ns-codepoint, ns-insensitive, ns-uca, ns-errors"/>

  <!-- Overrides global template to check/build specific namespace documents  -->
  <target name="chk.namespacedocs"
          depends="chk.ns-xpath-functions, chk.ns-xpath-math-functions,
          chk.ns-xpath-map-functions, chk.ns-xpath-array-functions,
          chk.ns-codepoint, chk.ns-insensitive, chk.ns-uca, chk.ns-errors"/>


  <!-- ====================================================================== -->
    
  <target name="merge-catalog" depends="init, chk.spec, validate-spec"
    if="build.spec" unless="spec.exists">
    <echo message="Merging function catalog..."/>
    
    <!-- XSLT 2.0 -->
    <!-- Merge the function definitions from the function catalog into the narrative spec -->
    <xslt in="${spec.xml}"
      out="${merged-spec.xml}"
      style="${merge.style}" force="yes"
      classpathref="saxon9.classpath">
    </xslt>

  </target>
  
  <!-- ======================================================================== -->
  <!-- override global template -->  
  
   <target name="-style-spec" depends="init, chk.spec, merge-catalog"
          if="build.spec" unless="spec.exists">

    <echo message="Building ${shortname} non-diff version ..."/>

    <!-- render the merged spec into HTML -->
     <xslt in="${merged-spec.xml}"
       out="${dist.dir}/Overview.xml"
       style="${spec.style}" force="yes"
       classpathref="saxon9.classpath">
     </xslt>
     
     <antcall target="xml-to-html5">
       <param name="xml-to-html5.input" value="${dist.dir}/Overview.xml"/>
       <param name="xml-to-html5.output" value="${dist.dir}/Overview.html"/>
     </antcall>
     

    <echo message="Building ${shortname} diff version ..."/>

    <!-- XSLT 2.0 -->
    <!-- render the merged spec into HTML with diff markup -->
     <xslt in="${merged-spec.xml}"
       out="${dist.dir}/Overview-diff.xml"
       style="${spec.diff.style}" force="yes"
       classpathref="saxon9.classpath">
       <param name="baseline" expression="''"/>
       <param name="diff.baseline.description" expression="the version 3.0 Recommendation published on 8 April 2014"/>
     </xslt>
     
     <antcall target="xml-to-html5">
       <param name="xml-to-html5.input" value="${dist.dir}/Overview-diff.xml"/>
       <param name="xml-to-html5.output" value="${dist.dir}/Overview-diff.html"/>
     </antcall>
     
    <!--<java fork="true" classname="net.sf.saxon.Transform">
      <classpath refid="saxon9.classpath"/>
      <arg value="-o:${dist.dir}/Overview-diff.html"/>
      <arg value="-s:${merged-spec.xml}"/>
      <arg value="-xsl:${spec.diff.style}"/>
      <arg value="baseline="/>
    </java>-->

    <copy file="${src.dir}/analyze-string.xsd"
          tofile="${dist.dir}/analyze-string.xsd"/>
     
     <copy file="${src.dir}/schema-for-json.xsd"
       tofile="${dist.dir}/schema-for-json.xsd"/>
  </target>

<!-- ======================================================================== -->

  <!-- Overrides internal template -->
  <target name="-copy-xml" depends="init, chk.spec"
          if="build.spec" unless="spec.exists">
    <echo message="Copying XML for ${shortname}..." />

    <xslt in="${merged-spec.xml}"
          out="${dist.dir}/${shortname}.xml"
          style="${shared.style.dir}/identity.xsl"
          classpathref="saxon9.classpath" force="yes">
      <factory name="net.sf.saxon.TransformerFactoryImpl">
        <attribute name="http://saxon.sf.net/feature/generateByteCode" value="false"/>
      </factory>
    </xslt>
  </target>

<!-- ======================================================================== -->
  
  <!-- Overrides global template -->
  <target name="chk.spec" depends="init">
    <echo message="Target chk.spec starting"/>
    <condition property="spec.exists">
      <uptodate targetfile="${dist.dir}/Overview.html">
         <srcfiles file="${base.dir}/build.xml"/>
         <srcfiles file="${etc.dir}/build-constants.xml"/>
         <srcfiles file="${etc.dir}/build-impl.xml"/>
         <srcfiles file="${etc.dir}/status-entities.dtd"/>
         <srcfiles file="${etc.dir}/status-general.xml"/>
         <srcfiles file="${src.dir}/xpath-functions.xml"/>
         <srcfiles file="${src.dir}/function-catalog.xml"/>
         <srcfiles dir="${src.dir}" includes="**/*.xml"/>
         <srcfiles file="${spec.style}"/>
         <srcfiles file="${shared.images.dir}/XPathTypeHierarchy-1-items-3.1.png"/>
         <srcfiles file="${shared.images.dir}/XPathTypeHierarchy-2-anyTypes-3.1.png"/>
         <srcfiles file="${shared.images.dir}/XPathTypeHierarchy-3-anyAtomicTypes-3.1.png"/>
         <srcfiles file="${shared.style.dir}/xsl-query.xsl"/>
         <srcfiles file="${shared.style.dir}/funcproto.xsl"/>
         <srcfiles file="${shared.style.dir}/xmlspec-override.xsl"/>
         <srcfiles file="${shared.style.dir}/xmlspec.xsl"/>
         <srcfiles file="${local.style.dir}/extract-sig.xsl"/>
         <srcfiles file="${local.style.dir}/strip.xsl"/>
         <srcfiles file="${local.style.dir}/xpath-functions-qr.xsl"/>
         <srcfiles file="${local.style.dir}/xpath-functions.xsl"/>
         <srcfiles file="${local.style.dir}/xpath-functions-base.xsl"/>
         <srcfiles file="${shared.schema.dir}/xsl-query.dtd"/>
         <srcfiles file="${shared.schema.dir}/xmlspec.dtd"/>
         <srcfiles file="${shared.schema.dir}/elements.dtd"/>
         <srcfiles file="${shared.schema.dir}/tree-diagram.dtd"/>
      </uptodate>
    </condition>
  </target>

  <!-- ====================================================================== -->

  <!-- Overrides global template -->
  <target name="copy-images" depends="init">
    <copy todir="${dist.dir}" flatten="true">
      <fileset dir="${local.images.dir}"/>
      <file file="${shared.images.dir}/XPathTypeHierarchy-1-items-3.1.png"/>
      <file file="${shared.images.dir}/XPathTypeHierarchy-2-anyTypes-3.1.png"/>
      <file file="${shared.images.dir}/XPathTypeHierarchy-3-anyAtomicTypes-3.1.png"/>
    </copy>
  </target>

<!-- ======================================================================== -->

  <target name="chk.ns-xpath-functions" depends="init">
    <uptodate property="ns-xpath-functions.exists"
              targetfile="${dist.dir}/ns-xpath-functions.html">
      <srcfiles file="${base.dir}/build.xml"/>
      <srcfiles file="${etc.dir}/build-constants.xml"/>
      <srcfiles file="${etc.dir}/build-impl.xml"/>
      <srcfiles file="${etc.dir}/status-entities.dtd"/>
      <srcfiles file="${etc.dir}/status-general.xml"/>
      <srcfiles file="${etc.dir}/xsl-query-bibl.xml"/>
      <srcfiles file="${src.dir}/ns-xpath-functions.xml"/>
      <srcfiles file="${shared.style.dir}/xsl-query.xsl"/>
      <srcfiles file="${shared.style.dir}/xmlspec.xsl"/>
      <srcfiles file="${shared.style.dir}/ns-blank.xsl"/>
      <srcfiles file="${shared.schema.dir}/xsl-query.dtd"/>
      <srcfiles file="${shared.schema.dir}/xmlspec.dtd"/>
      <srcfiles file="${shared.schema.dir}/elements.dtd"/>
      <srcfiles file="${shared.schema.dir}/tree-diagram.dtd"/>
      <srcfiles file="${shared.schema.dir}/qtnamespaces.dtd"/>
    </uptodate>
  </target>

<!-- ======================================================================== -->

  <target name="ns-xpath-functions"
          depends="init, merge-catalog, chk.ns-xpath-functions"
          unless="ns-xpath-functions.exists">
    <echo message="Building namespace document for functions namespace..." />
    <!-- set some parameter and call common target to build doc -->
    <antcall target="build-namespace-document">
      <param name="nsdoc.file.name" value="ns-xpath-functions"/>
      <param name="nsdoc.doc.URI" value="http://www.w3.org/2005/xpath-functions"/>
      <param name="nsdoc.stylesheet" value="${local.style.dir}/ns-xpath-functions.xsl"/>
    </antcall>
  </target>


<!-- ======================================================================== -->

  <target name="chk.ns-xpath-math-functions" depends="init">
    <uptodate property="ns-xpath-math-functions.exists"
              targetfile="${dist.dir}/ns-xpath-math-functions.html">
      <srcfiles file="${base.dir}/build.xml"/>
      <srcfiles file="${etc.dir}/build-constants.xml"/>
      <srcfiles file="${etc.dir}/build-impl.xml"/>
      <srcfiles file="${etc.dir}/status-entities.dtd"/>
      <srcfiles file="${etc.dir}/status-general.xml"/>
      <srcfiles file="${etc.dir}/xsl-query-bibl.xml"/>
      <srcfiles file="${src.dir}/ns-xpath-math-functions.xml"/>
      <srcfiles file="${shared.style.dir}/xsl-query.xsl"/>
      <srcfiles file="${shared.style.dir}/xmlspec.xsl"/>
      <srcfiles file="${shared.style.dir}/ns-blank.xsl"/>
      <srcfiles file="${shared.schema.dir}/xsl-query.dtd"/>
      <srcfiles file="${shared.schema.dir}/xmlspec.dtd"/>
      <srcfiles file="${shared.schema.dir}/elements.dtd"/>
      <srcfiles file="${shared.schema.dir}/tree-diagram.dtd"/>
      <srcfiles file="${shared.schema.dir}/qtnamespaces.dtd"/>
    </uptodate>
  </target>

<!-- ======================================================================== -->

  <target name="ns-xpath-math-functions"
          depends="init, merge-catalog, chk.ns-xpath-math-functions"
          unless="ns-xpath-math-functions.exists">
    <echo message="Building namespace document for math functions namespace..." />
    <!-- set some parameter and call common target to build doc -->
    <antcall target="build-namespace-document">
      <param name="nsdoc.file.name" value="ns-xpath-math-functions"/>
      <param name="nsdoc.doc.URI" value="http://www.w3.org/2005/xpath-functions/math"/>
      <param name="nsdoc.stylesheet" value="${local.style.dir}/ns-xpath-math-functions.xsl"/>
    </antcall>
  </target>

<!-- ======================================================================== -->

  <target name="chk.ns-xpath-map-functions" depends="init">
    <uptodate property="ns-xpath-map-functions.exists"
              targetfile="${dist.dir}/ns-xpath-map-functions.html">
      <srcfiles file="${base.dir}/build.xml"/>
      <srcfiles file="${etc.dir}/build-constants.xml"/>
      <srcfiles file="${etc.dir}/build-impl.xml"/>
      <srcfiles file="${etc.dir}/status-entities.dtd"/>
      <srcfiles file="${etc.dir}/status-general.xml"/>
      <srcfiles file="${etc.dir}/xsl-query-bibl.xml"/>
      <srcfiles file="${src.dir}/ns-xpath-map-functions.xml"/>
      <srcfiles file="${shared.style.dir}/xsl-query.xsl"/>
      <srcfiles file="${shared.style.dir}/xmlspec.xsl"/>
      <srcfiles file="${shared.style.dir}/ns-blank.xsl"/>
      <srcfiles file="${shared.schema.dir}/xsl-query.dtd"/>
      <srcfiles file="${shared.schema.dir}/xmlspec.dtd"/>
      <srcfiles file="${shared.schema.dir}/elements.dtd"/>
      <srcfiles file="${shared.schema.dir}/tree-diagram.dtd"/>
      <srcfiles file="${shared.schema.dir}/qtnamespaces.dtd"/>
    </uptodate>
  </target>

<!-- ======================================================================== -->

  <target name="ns-xpath-map-functions"
          depends="init, merge-catalog, chk.ns-xpath-map-functions"
          unless="ns-xpath-map-functions.exists">
    <echo message="Building namespace document for map functions namespace..." />
    <!-- set some parameter and call common target to build doc -->
    <antcall target="build-namespace-document">
      <param name="nsdoc.file.name" value="ns-xpath-map-functions"/>
      <param name="nsdoc.doc.URI" value="http://www.w3.org/2005/xpath-functions/map"/>
      <param name="nsdoc.stylesheet" value="${local.style.dir}/ns-xpath-map-functions.xsl"/>
    </antcall>
  </target>

<!-- ======================================================================== -->

  <target name="chk.ns-xpath-array-functions" depends="init">
    <uptodate property="ns-xpath-array-functions.exists"
              targetfile="${dist.dir}/ns-xpath-array-functions.html">
      <srcfiles file="${base.dir}/build.xml"/>
      <srcfiles file="${etc.dir}/build-constants.xml"/>
      <srcfiles file="${etc.dir}/build-impl.xml"/>
      <srcfiles file="${etc.dir}/status-entities.dtd"/>
      <srcfiles file="${etc.dir}/status-general.xml"/>
      <srcfiles file="${etc.dir}/xsl-query-bibl.xml"/>
      <srcfiles file="${src.dir}/ns-xpath-array-functions.xml"/>
      <srcfiles file="${shared.style.dir}/xsl-query.xsl"/>
      <srcfiles file="${shared.style.dir}/xmlspec.xsl"/>
      <srcfiles file="${shared.style.dir}/ns-blank.xsl"/>
      <srcfiles file="${shared.schema.dir}/xsl-query.dtd"/>
      <srcfiles file="${shared.schema.dir}/xmlspec.dtd"/>
      <srcfiles file="${shared.schema.dir}/elements.dtd"/>
      <srcfiles file="${shared.schema.dir}/tree-diagram.dtd"/>
      <srcfiles file="${shared.schema.dir}/qtnamespaces.dtd"/>
    </uptodate>
  </target>

<!-- ======================================================================== -->

  <target name="ns-xpath-array-functions"
          depends="init, merge-catalog, chk.ns-xpath-array-functions"
          unless="ns-xpath-array-functions.exists">
    <echo message="Building namespace document for array functions namespace..." />
    <!-- set some parameter and call common target to build doc -->
    <antcall target="build-namespace-document">
      <param name="nsdoc.file.name" value="ns-xpath-array-functions"/>
      <param name="nsdoc.doc.URI" value="http://www.w3.org/2005/xpath-functions/array"/>
      <param name="nsdoc.stylesheet" value="${local.style.dir}/ns-xpath-array-functions.xsl"/>
    </antcall>
  </target>

<!-- ======================================================================== -->

  <target name="chk.ns-codepoint" depends="init">
    <uptodate property="ns-codepoint.exists"
              targetfile="${dist.dir}/ns-codepoint.html">
      <srcfiles file="${base.dir}/build.xml"/>
      <srcfiles file="${etc.dir}/build-constants.xml"/>
      <srcfiles file="${etc.dir}/build-impl.xml"/>
      <srcfiles file="${etc.dir}/status-entities.dtd"/>
      <srcfiles file="${etc.dir}/status-general.xml"/>
      <srcfiles file="${etc.dir}/xsl-query-bibl.xml"/>
      <srcfiles file="${src.dir}/ns-codepoint.xml"/>
      <srcfiles file="${shared.style.dir}/xsl-query.xsl"/>
      <srcfiles file="${shared.style.dir}/xmlspec.xsl"/>
      <srcfiles file="${shared.style.dir}/ns-blank.xsl"/>
      <srcfiles file="${shared.schema.dir}/xsl-query.dtd"/>
      <srcfiles file="${shared.schema.dir}/xmlspec.dtd"/>
      <srcfiles file="${shared.schema.dir}/elements.dtd"/>
      <srcfiles file="${shared.schema.dir}/tree-diagram.dtd"/>
      <srcfiles file="${shared.schema.dir}/qtnamespaces.dtd"/>
    </uptodate>
  </target>

<!-- ======================================================================== -->

  <target name="ns-codepoint"
          depends="init, chk.ns-codepoint"
          unless="ns-codepoint.exists">
    <echo message="Building namespace document for codepoint collation 'namespace'..." />
    <!-- set some parameter and call common target to build doc -->
    <antcall target="build-namespace-document">
      <param name="nsdoc.file.name" value="ns-codepoint"/>
      <param name="nsdoc.doc.URI" value="http://www.w3.org/2005/xpath-functions/collation/codepoint"/>
      <param name="nsdoc.stylesheet" value="${local.style.dir}/ns-xpath-functions.xsl"/>
    </antcall>
  </target>

<!-- ======================================================================== -->

  <target name="chk.ns-insensitive" depends="init">
    <uptodate property="ns-insensitive.exists"
              targetfile="${dist.dir}/ns-insensitive.html">
      <srcfiles file="${base.dir}/build.xml"/>
      <srcfiles file="${etc.dir}/build-constants.xml"/>
      <srcfiles file="${etc.dir}/build-impl.xml"/>
      <srcfiles file="${etc.dir}/status-entities.dtd"/>
      <srcfiles file="${etc.dir}/status-general.xml"/>
      <srcfiles file="${etc.dir}/xsl-query-bibl.xml"/>
      <srcfiles file="${src.dir}/ns-insensitive.xml"/>
      <srcfiles file="${shared.style.dir}/xsl-query.xsl"/>
      <srcfiles file="${shared.style.dir}/xmlspec.xsl"/>
      <srcfiles file="${shared.style.dir}/ns-blank.xsl"/>
      <srcfiles file="${shared.schema.dir}/xsl-query.dtd"/>
      <srcfiles file="${shared.schema.dir}/xmlspec.dtd"/>
      <srcfiles file="${shared.schema.dir}/elements.dtd"/>
      <srcfiles file="${shared.schema.dir}/tree-diagram.dtd"/>
      <srcfiles file="${shared.schema.dir}/qtnamespaces.dtd"/>
    </uptodate>
  </target>
  
  <!-- ======================================================================== -->
  
  <target name="chk.ns-uca" depends="init">
    <uptodate property="ns-uca.exists"
      targetfile="${dist.dir}/ns-uca.html">
      <srcfiles file="${base.dir}/build.xml"/>
      <srcfiles file="${etc.dir}/build-constants.xml"/>
      <srcfiles file="${etc.dir}/build-impl.xml"/>
      <srcfiles file="${etc.dir}/status-entities.dtd"/>
      <srcfiles file="${etc.dir}/status-general.xml"/>
      <srcfiles file="${etc.dir}/xsl-query-bibl.xml"/>
      <srcfiles file="${src.dir}/ns-insensitive.xml"/>
      <srcfiles file="${shared.style.dir}/xsl-query.xsl"/>
      <srcfiles file="${shared.style.dir}/xmlspec.xsl"/>
      <srcfiles file="${shared.style.dir}/ns-blank.xsl"/>
      <srcfiles file="${shared.schema.dir}/xsl-query.dtd"/>
      <srcfiles file="${shared.schema.dir}/xmlspec.dtd"/>
      <srcfiles file="${shared.schema.dir}/elements.dtd"/>
      <srcfiles file="${shared.schema.dir}/tree-diagram.dtd"/>
      <srcfiles file="${shared.schema.dir}/qtnamespaces.dtd"/>
    </uptodate>
  </target>

<!-- ======================================================================== -->

  <target name="ns-insensitive"
          depends="init, chk.ns-insensitive"
          unless="ns-insensitive.exists">
    <echo message="Building namespace document for ASCII case-insensitive collation 'namespace'..." />
    <!-- set some parameter and call common target to build doc -->
    <antcall target="build-namespace-document">
      <param name="nsdoc.file.name" value="ns-insensitive"/>
      <param name="nsdoc.doc.URI" value="http://www.w3.org/2005/xpath-functions/collation/html-ascii-case-insensitive"/>
      <param name="nsdoc.stylesheet" value="${local.style.dir}/ns-xpath-functions.xsl"/>
    </antcall>
  </target>
  
  <!-- ======================================================================== -->
  
  <target name="ns-uca"
    depends="init, chk.ns-uca"
    unless="ns-uca.exists">
    <echo message="Building namespace document for UCA collation 'namespace'..." />
    <!-- set some parameter and call common target to build doc -->
    <antcall target="build-namespace-document">
      <param name="nsdoc.file.name" value="ns-uca"/>
      <param name="nsdoc.doc.URI" value="http://www.w3.org/2013/collation/UCA"/>
      <param name="nsdoc.stylesheet" value="${local.style.dir}/ns-xpath-functions.xsl"/>
    </antcall>
  </target>

<!-- ======================================================================== -->

  <target name="chk.ns-errors" depends="init">
    <uptodate property="ns-errors.exists"
              targetfile="${dist.dir}/ns-errors.html">
      <srcfiles file="${base.dir}/build.xml"/>
      <srcfiles file="${etc.dir}/build-constants.xml"/>
      <srcfiles file="${etc.dir}/build-impl.xml"/>
      <srcfiles file="${etc.dir}/status-entities.dtd"/>
      <srcfiles file="${etc.dir}/status-general.xml"/>
      <srcfiles file="${etc.dir}/xsl-query-bibl.xml"/>
      <srcfiles file="${src.dir}/ns-errors.xml"/>
      <srcfiles file="${shared.style.dir}/xsl-query.xsl"/>
      <srcfiles file="${shared.style.dir}/xmlspec.xsl"/>
      <srcfiles file="${shared.style.dir}/ns-blank.xsl"/>
      <srcfiles file="${shared.schema.dir}/xsl-query.dtd"/>
      <srcfiles file="${shared.schema.dir}/xmlspec.dtd"/>
      <srcfiles file="${shared.schema.dir}/elements.dtd"/>
      <srcfiles file="${shared.schema.dir}/tree-diagram.dtd"/>
      <srcfiles file="${shared.schema.dir}/qtnamespaces.dtd"/>
    </uptodate>
  </target>

<!-- ======================================================================== -->

  <target name="ns-errors"
          depends="init, chk.ns-errors"
          unless="ns-errors.exists">
    <echo message="Building namespace document for errors namespace..." />
    <!-- set some parameter and call common target to build doc -->
    <antcall target="build-namespace-document">
      <param name="nsdoc.file.name" value="ns-errors"/>
      <param name="nsdoc.doc.URI" value="http://www.w3.org/2005/xpath-functions/collation/xqt-errors"/>
      <param name="nsdoc.stylesheet" value="${local.style.dir}/ns-errors.xsl"/>
    </antcall>
  </target>

<!-- ======================================================================== -->
<!--
  <target name="quickref">
    <echo message="Building xpath-functions quickref ..." />

    <xmlvalidate file="${merged-spec.xml}"
		             failonerror="yes" lenient="no" warn="yes"/>

    <echo message="Extract signatures ..." />
    
    <xslt in="${spec.xml}" out="${build.dir}/signatures.xml"
	        style="${local.style.dir}/extract-sig.xsl" force="yes"
	        classpathref="saxon6.classpath"/>

    <echo message="Strip redundant prefixes ..." />

    <xslt in="${build.dir}/signatures.xml" out="${build.dir}/sigs-stripped.xml"
	        style="${local.style.dir}/strip.xsl" force="yes"
	        classpathref="saxon6.classpath"/>

    <echo message="Build HTML ..." />

    <xslt in="${build.dir}/sigs-stripped.xml" out="${dist.dir}/fo-quickref.html"
	        style="${local.style.dir}/xpath-functions-qr.xsl" force="yes"
	        classpathref="saxon6.classpath"/>

    <antcall target="tidy-document">
      <param name="html.file" value="${dist.dir}/fo-quickref.html"/>
    </antcall>
  </target>-->




<!-- **************************************************************************************
The following <target>s are all concerned with staging documents for publication. 
     ************************************************************************************** -->

<!-- **************************************************************************************
     MAIN DOCUMENT STAGING
     ************************************************************************************** -->

<!-- **************************************************************************************
THE FOLLOWING <target> MUST BE MANUALLY EDITED:
  There must be one <copy> task for each of the files (NON-binary and BINARY) to be placed
    into the staging directory. 
  The <property name="nonbinary-files"> task must contain the exact list of the names of
    the NON-binary files that have been placed into the staging directory.  The list is
    permitted to use wildcards such as *.html. 
  The <property name="binary-files"> task must contain the exact list of the names of
    the BINARY files that have been placed into the staging directory.  The list is
    permitted to use wildcards such as *.jpg. 
  Please note that the value of each <property> list MUST NOT BE EMPTY!  If there are
    NO NON-binary or NO BINARY files to include, there MUST be a filename for which
    there is no actual file (e.g., x.x)!
     ************************************************************************************** -->
  <target name="stage-copy">
    <copy file="${dist.dir}/Overview.html"
          tofile="${staging.directory}/Overview.html"/>
    <copy file="${dist.dir}/Overview-diff.html"
          tofile="${staging.directory}/${shortname}-diff.html"/>
    <copy file="${dist.dir}/${shortname}.xml"
          tofile="${staging.directory}/${shortname}.xml"/>
    <copy file="${dist.dir}/analyze-string.xsd"
          tofile="${staging.directory}/analyze-string.xsd"/>
    <copy file="${dist.dir}/schema-for-json.xsd"
      tofile="${staging.directory}/schema-for-json.xsd"/>
    <copy file="${dist.dir}/XPathTypeHierarchy-1-items-3.1.png"
          tofile="${staging.directory}/XPathTypeHierarchy-1-items-3.1.png"/>
    <copy file="${dist.dir}/XPathTypeHierarchy-2-anyTypes-3.1.png"
          tofile="${staging.directory}/XPathTypeHierarchy-2-anyTypes-3.1.png"/>
    <copy file="${dist.dir}/XPathTypeHierarchy-3-anyAtomicTypes-3.1.png"
          tofile="${staging.directory}/XPathTypeHierarchy-3-anyAtomicTypes-3.1.png"/>

    <antcall target="checkin.staged.stuff">
      <param name="staging.directory"
             value="${staging.directory}/"/>
      <param name="staging.localdirname"
             value="${staging.localdirname}/"/>
      <param name="nonbinary-files" value="Overview.html
                     ${shortname}-diff.html
                     ${shortname}.xml
                     analyze-string.xsd
                     schema-for-json.xsd"/>
      <param name="binary-files" value="XPathTypeHierarchy-1-items-3.1.png
                     XPathTypeHierarchy-2-anyTypes-3.1.png
                     XPathTypeHierarchy-3-anyAtomicTypes-3.1.png"/>
    </antcall>
  </target>

  <!-- ====================================================================== -->

<!-- **************************************************************************************
     NAMESPACE DOCUMENT STAGING
     ************************************************************************************** -->

<!-- **************************************************************************************
THE FOLLOWING <target> MUST BE MANUALLY EDITED:
  There must be one <antcall> task for each namespace document being published.
  There must also be one <target> for each namespace document being published.
     ************************************************************************************** -->
  <target name="stage-nsdocs"
          description="Stage F+O namespace documents for publication">
<!-- ************************************************************************************** -->
    <antcall target="stage-ns-codepoint"/>
    <antcall target="stage-ns-errors"/>
    <antcall target="stage-ns-insensitive"/>
    <antcall target="stage-ns-xpath-array-functions"/>
    <antcall target="stage-ns-xpath-functions"/>
    <antcall target="stage-ns-xpath-map-functions"/>
    <antcall target="stage-ns-xpath-math-functions"/>
<!-- ************************************************************************************** -->
  </target>

  <!-- ====================================================================== -->

  <target name="stage-ns-codepoint"
          description="Stage F+O codepoint namespace document for publication">
    <antcall target="stage-a-nsdoc">
<!-- The "nsname" parameter specifies the common name of the namespace, which (when prefixed
     with "ns-" and suffixed with ".xml") identifies the filename of the namespace document -->
      <param name="nsname"
              value="codepoint"/>
<!-- The "namespace.fullname" parameter specifies the actual namespace name ("URI") of the
     namespace.  However, in order to make staging the namespace documents easier, the leading
     "http://www.w3.org" must be replaced by "WWW" -->
      <param name="namespace.fullname"
              value="WWW/2005/xpath-functions/collation/codepoint"/>
    </antcall>
  </target>

  <!-- ====================================================================== -->

  <target name="stage-ns-errors"
          description="Stage F+O errors namespace document for publication">
    <antcall target="stage-a-nsdoc">
<!-- The "nsname" parameter specifies the common name of the namespace, which (when prefixed
     with "ns-" and suffixed with ".xml") identifies the filename of the namespace document -->
      <param name="nsname"
              value="errors"/>
<!-- The "namespace.fullname" parameter specifies the actual namespace name ("URI") of the
     namespace.  However, in order to make staging the namespace documents easier, the leading
     "http://www.w3.org" must be replaced by "WWW" -->
      <param name="namespace.fullname"
              value="WWW/2005/xqt-errors"/>
    </antcall>
  </target>

  <!-- ====================================================================== -->

  <target name="stage-ns-insensitive"
          description="Stage F+O insensitive namespace document for publication">
    <antcall target="stage-a-nsdoc">
<!-- The "nsname" parameter specifies the common name of the namespace, which (when prefixed
     with "ns-" and suffixed with ".xml") identifies the filename of the namespace document -->
      <param name="nsname"
              value="insensitive"/>
<!-- The "namespace.fullname" parameter specifies the actual namespace name ("URI") of the
     namespace.  However, in order to make staging the namespace documents easier, the leading
     "http://www.w3.org" must be replaced by "WWW" -->
      <param name="namespace.fullname"
              value="WWW/2005/xpath-functions/collation/html-ascii-case-insensitive"/>
    </antcall>
  </target>

  <!-- ====================================================================== -->

  <target name="stage-ns-xpath-functions"
          description="Stage F+O xpath-functions namespace document for publication">
    <antcall target="stage-a-nsdoc">
<!-- The "nsname" parameter specifies the common name of the namespace, which (when prefixed
     with "ns-" and suffixed with ".xml") identifies the filename of the namespace document -->
      <param name="nsname"
              value="xpath-functions"/>
<!-- The "namespace.fullname" parameter specifies the actual namespace name ("URI") of the
     namespace.  However, in order to make staging the namespace documents easier, the leading
     "http://www.w3.org" must be replaced by "WWW" -->
      <param name="namespace.fullname"
              value="WWW/2005/xpath-functions"/>
    </antcall>
  </target>

  <!-- ====================================================================== -->

  <target name="stage-ns-xpath-array-functions"
          description="Stage F+O xpath-array-functions namespace document for publication">
    <antcall target="stage-a-nsdoc">
<!-- The "nsname" parameter specifies the common name of the namespace, which (when prefixed
     with "ns-" and suffixed with ".xml") identifies the filename of the namespace document -->
      <param name="nsname"
              value="xpath-array-functions"/>
<!-- The "namespace.fullname" parameter specifies the actual namespace name ("URI") of the
     namespace.  However, in order to make staging the namespace documents easier, the leading
     "http://www.w3.org" must be replaced by "WWW" -->
      <param name="namespace.fullname"
              value="WWW/2005/xpath-functions/array"/>
    </antcall>
  </target>

  <!-- ====================================================================== -->

  <target name="stage-ns-xpath-map-functions"
          description="Stage F+O xpath-map-functions namespace document for publication">
    <antcall target="stage-a-nsdoc">
<!-- The "nsname" parameter specifies the common name of the namespace, which (when prefixed
     with "ns-" and suffixed with ".xml") identifies the filename of the namespace document -->
      <param name="nsname"
              value="xpath-map-functions"/>
<!-- The "namespace.fullname" parameter specifies the actual namespace name ("URI") of the
     namespace.  However, in order to make staging the namespace documents easier, the leading
     "http://www.w3.org" must be replaced by "WWW" -->
      <param name="namespace.fullname"
              value="WWW/2005/xpath-functions/map"/>
    </antcall>
  </target>

  <!-- ====================================================================== -->

  <target name="stage-ns-xpath-math-functions"
          description="Stage F+O xpath-math-functions namespace document for publication">
    <antcall target="stage-a-nsdoc">
<!-- The "nsname" parameter specifies the common name of the namespace, which (when prefixed
     with "ns-" and suffixed with ".xml") identifies the filename of the namespace document -->
      <param name="nsname"
              value="xpath-math-functions"/>
<!-- The "namespace.fullname" parameter specifies the actual namespace name ("URI") of the
     namespace.  However, in order to make staging the namespace documents easier, the leading
     "http://www.w3.org" must be replaced by "WWW" -->
      <param name="namespace.fullname"
              value="WWW/2005/xpath-functions/math"/>
    </antcall>
  </target>

<!-- **************************************************************************************
The preceding <target>s are all concerned with staging documents for publication. 
     ************************************************************************************** -->

</project>

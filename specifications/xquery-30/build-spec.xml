<?xml version="1.0" encoding='utf-8'?>
<project name="xpath-or-xquery-or-shared" default="build-spec" basedir=".">
  <!-- build.xml for the XQuery and XPath language specifications -->

  <property name="shortname" value="${generic-shortname}-${this-spec-version-code}"/>
  <property name="spec.uri" value="${W3C.TR}/${shortname}/"/>
  <property name="spec.html" value="${dist.dir}/${shortname}.html"/>
  <property name="spec.diffs.html" value="${dist.dir}/${shortname}-diff.html"/>

  <!-- 2008-09-03, Jim: The following property has no meaning at present,     -->
  <!--   because we do not build errata in the qtspecs tree. Maybe later...   -->
  <!--  <property name="errata.xml" value="${src.dir}/${generic-shortname}-errata.xml"/> -->

  <dirname property="shared.grammar.dir" file="../grammar-${xquery-version-code}/*"/>

  <!-- Import target, etc. definitions that work globally -->
  <import file="${etc.dir}/build-impl.xml"/>

  <!-- Recall that any targets defined herein override targets of the same name -->
  <!--   that are defined in build-impl.xml.  If you cannot find a target of a  -->
  <!--   given name in this file, look in build-impl.xml.                       -->

  <!-- ======================================================================== -->

  <!-- additional properties -->
  <property name="grammar-file" value="${shared.grammar.dir}/xpath-grammar.xml"/>
  <property name="strip-grammar-file" value="${shared.grammar.dir}/parser/strip.xsl"/>
  <property name="assemble-spec-file" value="${local.style.dir}/assemble-xquery.xsl"/>
  <property name="preprocess-spec-file" value="${local.style.dir}/preprocess-xquery.xsl"/>
  <property name="extract-tokens-file" value="${shared.style.dir}/extract-tokens.xsl"/>
  <property name="elim-dups-file" value="${shared.style.dir}/elim-dup-tokens.xsl"/>

  <!-- ====================================================================== -->

  <!-- The "help" template displays on the message medium the names of the    -->
  <!--   various targets in this project and their purposes.                  -->
  <target name="help">
    <echo message="This file should never be invoked directly, but only from the build.xml ant project"/>
    <echo message="This project to build ${shortname} includes a number of targets."/>
    <echo message="  build-spec -- builds the spec, anchor doc, and namespace doc; positions images"/>
    <echo message="  chk.spec -- determines whether the spec HTML must be created"/>
    <echo message="  -style-spec -- transforms the document sources into near-pubrules-ready HTML"/>
    <echo message="  -copy-xml -- creates final XML source file from assembled source file"/>
    <echo message="  namespacedocs -- Causes namespace docs to be created"/>
    <echo message="  chk.namespacedocs -- checks whether the namespace documents must be built"/>
    <echo message="  style-namespacedocs -- transforms namespace document sources into XHTML and RDF namespace docs"/>
    <echo message="Please note that there is not currently a target that builds a diff document for this project."/>
  </target>

  <!-- ======================================================================== -->

  <target name="build-spec"
          depends="spec, copy-images, anchor-summary, namespacedocs"
          description="This is the default target. "/>

  <!-- ======================================================================== -->

  <!-- Overrides internal template -->
  <target name="chk.spec" depends="init">
    <echo message="Target chk.spec starting"/>
    <condition property="spec.exists">
      <uptodate targetfile="${spec.html}">
        <srcfiles file="${base.dir}/build.xml"/>
        <srcfiles file="${etc.dir}/build-constants.xml"/>
        <srcfiles file="${etc.dir}/build-impl.xml"/>
        <srcfiles file="${etc.dir}/status-entities.dtd"/>
        <srcfiles file="${etc.dir}/status-general.xml"/>
        <srcfiles file="${base.dir}/build-xpath.xml"/>
        <srcfiles file="${base.dir}/build-xquery.xml"/>
        <srcfiles file="${base.dir}/build-joint.xml"/>
        <srcfiles file="${base.dir}/build-spec.xml"/>
        <srcfiles dir="${src.dir}" includes="**/*.xml"/>
        <srcfiles file="${grammar-file}"/>
        <srcfiles file="${strip-grammar-file}"/>
        <srcfiles file="${assemble-spec-file}"/>
        <srcfiles file="${shared.style.dir}/assemble-spec.xsl"/>
        <srcfiles file="${shared.style.dir}/shared.xsl"/>
        <srcfiles file="${shared.style.dir}/xsl-query.xsl"/>
        <srcfiles file="${shared.style.dir}/xmlspec-override.xsl"/>
        <srcfiles file="${shared.style.dir}/xmlspec.xsl"/>
        <srcfiles file="${extract-tokens-file}"/>
        <srcfiles file="${elim-dups-file}"/>
        <srcfiles file="${shared.style.dir}/html-fix.xsl"/>
        <srcfiles file="${shared.style.dir}/identity.xsl"/>
        <srcfiles file="${shared.schema.dir}/xsl-query.dtd"/>
        <srcfiles file="${shared.schema.dir}/xmlspec.dtd"/>
        <srcfiles file="${shared.schema.dir}/elements.dtd"/>
        <srcfiles file="${shared.schema.dir}/tree-diagram.dtd"/>
        <srcfiles file="${base.dir}/../../schema/xsl-query.dtd"/>
      </uptodate>
    </condition>
  </target>

  <!-- ======================================================================== -->

  <target name="-style-spec" depends="init, chk.spec, validate-spec"
          if="build.spec" unless="spec.exists">
    <echo message="Target -style-spec starting"/>
    <echo>etc.dir = ${etc.dir}</echo>
    <echo>${java.class.path}</echo>

    <!-- Creation of the temp grammar files is needed for assembling the        -->
    <!--   "complete" document, including grammar and extensions                -->
    <echo/>
    <echo message="Creating temp-${generic-shortname}-grammar.xml"/>
    <xslt in="${grammar-file}" out="${build.dir}/temp-${generic-shortname}-grammar.xml"
          style="${strip-grammar-file}" force="yes">
      <param name="spec1" expression="${first-generic-shortname}"/>
      <param name="spec2" expression="${second-generic-shortname}"/>
    </xslt>

    <echo/>
    <echo message="Creating tokens.xml"/>
    <xslt style="${extract-tokens-file}" in="${build.dir}/temp-${generic-shortname}-grammar.xml"
          out="${build.dir}/tokens-with-dups.xml"
          force="yes" extension=".xml"
          destdir=".">
      <param name="spec" expression="${generic-shortname}"/>
      <param name="grammar-file"
             expression="${build.dir}/temp-${generic-shortname}-grammar.xml"/>
    </xslt>
    <xslt style="${elim-dups-file}" in="${build.dir}/tokens-with-dups.xml"
          out="${build.dir}/tokens.xml"
          force="yes" extension=".xml"
          destdir=".">
    </xslt>

    <!-- The preprocess step is to pull together the source files and omit all  -->
    <!--   all material that doesn't belong to 'this' document.                 -->
    <echo/>
    <echo message="Creating ${generic-shortname}-preprocessed.xml"/>
    <xslt in="${spec.xml}" out="${build.dir}/${generic-shortname}-preprocessed.xml"
          style="${preprocess-spec-file}" force="yes"
          classpathref="saxon9.classpath">
      <param name="not-spec" expression="${not-this-generic-shortname}"/>
    </xslt>

    <!-- The assembly step is used to bring together all of the source files    -->
    <!--   that are incorporated by using entity references, but also to        -->
    <!--   transform grammar-related productions into XML elements that can be  -->
    <!--   readily rendered into a form needed in the HTML document.            -->
    <echo/>
    <echo message="Creating ${generic-shortname}-assembled.xml"/>
    <xslt in="${build.dir}/${generic-shortname}-preprocessed.xml"
          out="${build.dir}/${generic-shortname}-assembled.xml"
          style="${assemble-spec-file}" force="yes"
          classpathref="saxon9.classpath">
      <param name="grammar-file" expression="${build.dir}/temp-${generic-shortname}-grammar.xml"/>
      <param name="tokens-file" expression="${build.dir}/tokens.xml"/>
      <param name="not-spec" expression="${not-this-generic-shortname}"/>
      <param name="spec" expression="${generic-shortname}${this-spec-version-code}"/>
    </xslt>

    <echo/>
    <echo message="Validating ${generic-shortname}-assembled.xml"/>
    <xmlvalidate file="${build.dir}/${generic-shortname}-assembled.xml"
                 failonerror="yes" lenient="no" warn="yes"/>

    <echo/>
    <echo message="Transforming ${generic-shortname}-assembled.xml"/>
    <xslt in="${build.dir}/${generic-shortname}-assembled.xml"
          out="${build.dir}/${generic-shortname}-html.html"
          style="${spec.style}" force="yes"
          classpathref="saxon9.classpath">
      <param name="spec" expression="${generic-shortname}"/>
      <param name="kwFull" expression="brief"/>
      <param name="kwSort" expression="cluster"/>
    </xslt>

    <!-- 2009-11-25, Jim: Added param to pass DSTAMP and TSTAMP properties -->
    <echo/>
    <echo message="Fixing up ${generic-shortname}.html"/>
    <xslt in="${build.dir}/${generic-shortname}-html.html"
          out="${spec.html}"
          style="${shared.style.dir}/html-fix.xsl"
          classpathref="saxon9.classpath" force="yes">
      <param name="currentDateTime" expression="${DSTAMP} ${TSTAMP}"/>
    </xslt>

    <echo/>
    <echo message="Transforming ${generic-shortname}-assembled.xml with diffs"/>
    <xslt in="${build.dir}/${generic-shortname}-assembled.xml"
          out="${build.dir}/${generic-shortname}-diff-html.html"
          style="${spec.style}" force="yes"
          classpathref="saxon9.classpath">
      <param name="spec" expression="${generic-shortname}"/>
      <param name="kwFull" expression="brief"/>
      <param name="kwSort" expression="cluster"/>
      <param name="show-markup" expression="1"/>
    </xslt>

    <!-- 2009-11-25, Jim: Added param to pass DSTAMP and TSTAMP properties -->
    <echo/>
    <echo message="Fixing up ${generic-shortname}-diff.html"/>
    <xslt in="${build.dir}/${generic-shortname}-diff-html.html"
          out="${spec.diffs.html}"
          style="${shared.style.dir}/html-fix.xsl"
          classpathref="saxon9.classpath" force="yes">
      <param name="currentDateTime" expression="${DSTAMP} ${TSTAMP}"/>
    </xslt>
  </target>

  <!-- ======================================================================== -->

  <!-- Overrides internal template -->
  <target name="-copy-xml" depends="init, chk.spec"
          if="build.spec" unless="spec.exists">
    <echo message="Copying XML for ${shortname}..." />

    <xslt in="${build.dir}/${generic-shortname}-assembled.xml"
          out="${dist.dir}/${shortname}.xml"
          style="${shared.style.dir}/identity.xsl"
          classpathref="saxon9.classpath" force="yes"/>
  </target>

  <!-- ======================================================================== -->

  <target name="namespacedocs"
          depends="style-namespacedocs, init"/>

  <!-- ======================================================================== -->

  <target name="chk.namespacedocs">

    <condition property="localnamespacedoc.exists">
      <uptodate targetfile="${dist.dir}/ns-local.html">
        <srcfiles file="${base.dir}/build.xml"/>
        <srcfiles file="${etc.dir}/build-constants.xml"/>
        <srcfiles file="${etc.dir}/build-impl.xml"/>
        <srcfiles file="${etc.dir}/status-entities.dtd"/>
        <srcfiles file="${etc.dir}/status-general.xml"/>
        <srcfiles file="${src.dir}/ns-local.xml"/>
        <srcfiles file="${shared.style.dir}/xsl-query.xsl"/>
        <srcfiles file="${shared.style.dir}/xmlspec.xsl"/>
        <srcfiles file="${shared.style.dir}/ns-blank.xsl"/>
        <srcfiles file="${shared.schema.dir}/xsl-query.dtd"/>
        <srcfiles file="${shared.schema.dir}/xmlspec.dtd"/>
        <srcfiles file="${shared.schema.dir}/elements.dtd"/>
        <srcfiles file="${shared.schema.dir}/tree-diagram.dtd"/>
        <srcfiles file="${shared.schema.dir}/qtnamespaces.dtd"/>
      </uptodate>
    </condition>

    <condition property="xquerynamespacedoc.exists">
      <uptodate targetfile="${dist.dir}/ns-xquery.html">
        <srcfiles file="${base.dir}/build.xml"/>
        <srcfiles file="${etc.dir}/build-constants.xml"/>
        <srcfiles file="${etc.dir}/build-impl.xml"/>
        <srcfiles file="${etc.dir}/status-entities.dtd"/>
        <srcfiles file="${etc.dir}/status-general.xml"/>
        <srcfiles file="${src.dir}/ns-xquery.xml"/>
        <srcfiles file="${shared.style.dir}/xsl-query.xsl"/>
        <srcfiles file="${shared.style.dir}/xmlspec.xsl"/>
        <srcfiles file="${shared.style.dir}/ns-blank.xsl"/>
        <srcfiles file="${shared.schema.dir}/xsl-query.dtd"/>
        <srcfiles file="${shared.schema.dir}/xmlspec.dtd"/>
        <srcfiles file="${shared.schema.dir}/elements.dtd"/>
        <srcfiles file="${shared.schema.dir}/tree-diagram.dtd"/>
        <srcfiles file="${shared.schema.dir}/qtnamespaces.dtd"/>
      </uptodate>
    </condition>

  </target>

  <!-- ======================================================================== -->

  <target name="style-namespacedocs"
          depends="chk.namespacedocs, init"
          unless="localnamespacedoc.exists, featuresnamespacedoc.exists">
    <echo message="Building XQuery 'local' and 'features' Namespace Docs ..." />

    <echo message="Transforming namespace XML source to HTML with RDDL"/>
    <xslt in="${src.dir}/ns-local.xml"
          out="${build.dir}/ns-local.html"
          style="${shared.style.dir}/ns-blank.xsl" force="yes"
          classpathref="saxon9.classpath"/>

    <echo message="Generating RDF from HTML"/>
    <xslt in="${build.dir}/ns-local.html"
          out="${dist.dir}/ns-local.rdf"
          style="${shared.style.dir}/qt-ns-grddl.xsl" force="yes"
          classpathref="saxon9.classpath">
      <param name="doc" expression="http://www.w3.org/2005/xquery-local-functions"/>
    </xslt>

    <echo message="Fixing up HTML namespace document by removing traces of RDDL"/>
    <xslt in="${build.dir}/ns-local.html"
          out="${dist.dir}/ns-local.html"
          style="${shared.style.dir}/html-namespace-fixup.xsl" force="yes"
          classpathref="saxon9.classpath"/>

    <echo message="Fixing up RDDL namespace document to add xhtml namespace"/>
    <xslt in="${build.dir}/ns-local.html"
          out="${dist.dir}/ns-local.xhtml"
          style="${shared.style.dir}/rddl-namespace-fixup.xsl" force="yes"
          classpathref="saxon9.classpath"/>

    <echo message="Tidy up the HTML file for pubrules"/>
    <exec executable="tidy">
      <arg value="--doctype"/>
      <arg value="transitional"/>
      <arg value="-utf8"/>
      <arg value="-mnq"/>
      <arg value="-asxml"/>
      <arg value="${dist.dir}/ns-local.html"/>
      <arg value="-o"/>
      <arg value="${dist.dir}/ns-local.html"/>
    </exec>


    <echo message="Transforming namespace XML source to HTML with RDDL"/>
    <xslt in="${src.dir}/ns-xquery.xml"
          out="${build.dir}/ns-xquery.html"
          style="${shared.style.dir}/ns-blank.xsl" force="yes"
          classpathref="saxon9.classpath"/>

    <echo message="Generating RDF from HTML"/>
    <xslt in="${build.dir}/ns-xquery.html"
          out="${dist.dir}/ns-xquery.rdf"
          style="${shared.style.dir}/qt-ns-grddl.xsl" force="yes"
          classpathref="saxon9.classpath">
      <param name="doc" expression="http://www.w3.org/2011/xquery-features"/>
    </xslt>

    <echo message="Fixing up HTML namespace document by removing traces of RDDL"/>
    <xslt in="${build.dir}/ns-xquery.html"
          out="${dist.dir}/ns-xquery.html"
          style="${shared.style.dir}/html-namespace-fixup.xsl" force="yes"
          classpathref="saxon9.classpath"/>

    <echo message="Fixing up RDDL namespace document to add xhtml namespace"/>
    <xslt in="${build.dir}/ns-xquery.html"
          out="${dist.dir}/ns-xquery.xhtml"
          style="${shared.style.dir}/rddl-namespace-fixup.xsl" force="yes"
          classpathref="saxon9.classpath"/>

    <echo message="Tidy up the HTML file for pubrules"/>
    <exec executable="tidy">
      <arg value="--doctype"/>
      <arg value="transitional"/>
      <arg value="-utf8"/>
      <arg value="-mnq"/>
      <arg value="-asxml"/>
      <arg value="${dist.dir}/ns-xquery.html"/>
      <arg value="-o"/>
      <arg value="${dist.dir}/ns-xquery.html"/>
    </exec>

  </target>

</project>

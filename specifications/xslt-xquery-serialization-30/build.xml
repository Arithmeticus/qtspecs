<?xml version="1.0" encoding='utf-8'?>
<project name="serialization" default="all" basedir=".">

<!-- Import a bunch of global property definitions -->
  <dirname property="etc.dir" file="../../etc/*"/>
  <import file="${etc.dir}/build-constants.xml"/>

<!-- Set properties for "this" document's build requirements -->
  <property name="generic-shortname" value="xslt-xquery-serialization"/>
  <property name="this-spec-version-code" value="30"/>

  <property name="spec.code" value="SER${this-spec-version-code}"/>
  <property name="shortname" value="${generic-shortname}-${this-spec-version-code}"/>
  <property name="spec.uri" value="${W3C.TR}/${shortname}/"/>
  <property name="spec.xml" value="${src.dir}/${generic-shortname}.xml"/>
  <property name="spec.diffs.html" value="${dist.dir}/Overview-diff.html"/>

  <!-- 2008-09-03, Jim: The following property has no meaning at present,     -->
  <!--   because we do not build errata in the qtspecs tree. Maybe later...   -->
<!--  <property name="errata.xml" value="${src.dir}/${generic-shortname}-errata.xml"/> -->

  <property name="spec.style" value="${local.style.dir}/serialization-diff.xsl"/>

  <property name="namespace-name" value="xslt-xquery-serialization"/>

<!-- Import target, etc. definitions that work globally -->
  <import file="${etc.dir}/build-impl.xml"/>

<!-- Recall that any targets defined herein override targets of the same name -->
<!--   that are defined in build-impl.xml.  If you cannot find a target of a  -->
<!--   given name in this file, look in build-impl.xml.                       -->

<!-- ======================================================================== -->

  <!-- additional properties -->

<!-- This spec doesn't require an assembly step, so this property is undefined-->
<!--  <property name="assemble-spec-file" value="????"/> -->

  <!-- Baseline date from which to show differences. -->
  <!-- Value is in the form of an ISO 8601 date.     -->
  <!--* PR: 2013-10-22 *-->
  <!--* CR: 2013-03-28 *-->
  <!--* 5th WD: 2013-01-08 *-->
  <!--* 4th WD: 2011-12-13 *-->
  <!--* 3rd WD: 2011-06-14 *-->
  <!--* 1.0 Second Edition: 2010-12-14 *-->
  <!--* 2nd WD: 2010-12-14 *-->
  <!--* 1st WD: 2009-12-15 *-->
  <!--* 1.0 First Edition: 2007-01-23 *-->
  <!--* <property name="diff.baseline" value="2013-10-22"/>  *-->
  <property name="diff.baseline" value="2007-01-23"/>
  <!--* <property name="diff.baseline" value="2010-12-14"/> *-->

  <!-- ====================================================================== -->

  <!-- The "help" template displays on the message medium the names of the    -->
  <!--   various targets in this project and their purposes.                  -->
  <target name="help">
    <echo message="This project to build ${shortname} includes a number of targets."/>
    <echo message="To invoke any of these targets from the command line, use 'ant target-name'"/>
    <echo message="  all -- the default target (target-name not required); builds 'everything'"/>
    <echo message="  chk.spec -- determines whether the spec HTML must be created"/>
    <echo message="  -style-spec -- transforms the document sources into near-pubrules-ready HTML"/>
    <echo message="  diffspec -- causes the diff doc to be created"/>
    <echo message="  check.diffs.spec -- determines whether the diff doc must be created"/>
    <echo message="  style-diffs-spec -- transforms the document sources into near-pubrules-ready HTML with diffs"/>
    <echo message="  tidy-diffs-spec -- transforms near-pubrules-ready HTML with diffs to pubrules-ready HTML"/>
    <echo message="  namespacedoc - Causes namespace doc to be created"/>
    <echo message="  chk.namespacedoc - checks whether the namespace document must be built"/>
    <echo message="  style-namespacedoc - transforms namespace document sources into XHTML and RDF namespace docs"/>
    <echo message="The targets that are most likely to be desired from the command line are 'all', '-stylespec', 'diffspec', and 'namespacedoc'."/>
  </target>

<!-- ======================================================================== -->

  <!-- Overrides global template to omit ",errata" -->
  <target name="all" depends="clean, spec, namespacedoc"
          description="This is the default target."/>

  <!-- ====================================================================== -->

  <target name="chk.spec" depends="init">
    <uptodate property="spec.exists"
              targetfile="${spec.html}">
      <srcfiles file="${base.dir}/build.xml"/>
      <srcfiles file="${etc.dir}/build-constants.xml"/>
      <srcfiles file="${etc.dir}/build-impl.xml"/>
      <srcfiles file="${etc.dir}/status-entities.dtd"/>
      <srcfiles file="${etc.dir}/status-general.xml"/>
      <srcfiles dir="${src.dir}" includes="**/*.xml"/>
      <srcfiles dir="${shared.style.dir}" includes="xsl-query.xsl"/>
      <srcfiles dir="${shared.style.dir}" includes="xmlspec.xsl"/>
      <srcfiles file="${shared.schema.dir}/xsl-query.dtd"/>
      <srcfiles file="${shared.schema.dir}/xmlspec.dtd"/>
      <srcfiles file="${shared.schema.dir}/elements.dtd"/>
      <srcfiles file="${shared.schema.dir}/tree-diagram.dtd"/>
    </uptodate>
  </target>


  <target name="-style-spec" depends="init, chk.spec, validate-spec">
    <echo message="Building Serialization 3.0..." />
<echo>we'll use the classpath ${saxon9.classpath}</echo>
    <!--<java fork="true" classname="net.sf.saxon.Transform">
      <classpath refid="saxon9.classpath"/>
      <arg value="-o"/>
      <arg value="${build.dir}/${generic-shortname}-html.html"/>
      <arg value="${spec.xml}"/>
      <arg value="${spec.style}"/>
      <arg value="diff.baseline=${diff.baseline}"/>
      <arg value="specdoc=${spec.code}"/>
      <arg value="show-markup=0"/>
    </java>-->
    
    <xslt in="${spec.xml}"
      out="${build.dir}/${generic-shortname}-html.html"
      style="${spec.style}"
      classpathref="saxon9.classpath" force="yes">
      <param name="diff.baseline" expression="${diff.baseline}"/>
      <param name="specdoc" expression="${spec.code}"/>
      <param name="show-markup" expression="0"/>
    </xslt>

<!-- 2009-11-25, Jim: Added HTML fixup -->
<echo message="Fixing up ${generic-shortname}.html"/>
    <xslt in="${build.dir}/${generic-shortname}-html.html"
          out="${spec.html}"
          style="${shared.style.dir}/html-fix.xsl"
          classpathref="saxon9.classpath" force="yes">
      <param name="currentDateTime" expression="${DSTAMP} ${TSTAMP}"/>
    </xslt>

    <echo message="Building Serialization 3.0 Diff..." />

    <!--<java fork="true" classname="net.sf.saxon.Transform">
      <classpath refid="saxon9.classpath"/>
      <arg value="-o"/>
      <arg value="${build.dir}/${generic-shortname}-diff-html.html"/>
      <arg value="${spec.xml}"/>
      <arg value="${spec.style}"/>
      <arg value="diff.baseline=${diff.baseline}"/>
      <arg value="specdoc=${spec.code}"/>
      <arg value="show-markup=1"/>
    </java>-->
    
    <xslt in="${spec.xml}"
      out="${build.dir}/${generic-shortname}-diff-html.html"
      style="${spec.style}"
      classpathref="saxon9.classpath" force="yes">
      <param name="diff.baseline" expression="${diff.baseline}"/>
      <param name="specdoc" expression="${spec.code}"/>
      <param name="show-markup" expression="1"/>
    </xslt>

<!-- 2009-11-25, Jim: Added HTML fixup -->
<echo message="Fixing up ${generic-shortname}.html"/>
    <xslt in="${build.dir}/${generic-shortname}-diff-html.html"
          out="${spec.diffs.html}"
          style="${shared.style.dir}/html-fix.xsl"
          classpathref="saxon9.classpath" force="yes">
      <param name="currentDateTime" expression="${DSTAMP} ${TSTAMP}"/>
    </xslt>

    <antcall target="tidy">
      <param name="html.file" value="${spec.diffs.html}"/>
    </antcall>
  </target>

<!-- ======================================================================== -->

  <!-- Overrides internal template -->
  <target name="-copy-xml" depends="init,chk.spec"
          if="build.spec" unless="spec.exists">
    <echo message="Copying XML for ${shortname}..." />

    <xslt in="${spec.xml}"
          out="${dist.dir}/${shortname}.xml"
          style="${shared.style.dir}/identity.xsl"
          classpathref="saxon9.classpath" force="yes"/>
  </target>

<!-- ======================================================================== -->

  <target name="namespacedoc"
          depends="style-namespacedoc,init"/>

<!-- ======================================================================== -->

  <target name="chk.namespacedoc">

    <condition property="namespacedoc.exists">
      <uptodate targetfile="${dist.dir}/ns-${namespace-name}.html">
         <srcfiles file="${base.dir}/build.xml"/>
         <srcfiles file="${etc.dir}/build-constants.xml"/>
         <srcfiles file="${etc.dir}/build-impl.xml"/>
         <srcfiles file="${etc.dir}/status-entities.dtd"/>
         <srcfiles file="${etc.dir}/status-general.xml"/>
         <srcfiles file="${src.dir}/ns-${namespace-name}.xml"/>
         <srcfiles file="${shared.style.dir}/xsl-query.xsl"/>
         <srcfiles file="${shared.style.dir}/xmlspec.xsl"/>
         <srcfiles file="${shared.style.dir}/ns-blank.xsl"/>
         <srcfiles file="${shared.schema.dir}/xsl-query.dtd"/>
         <srcfiles file="${shared.schema.dir}/xmlspec.dtd"/>
         <srcfiles file="${shared.schema.dir}/elements.dtd"/>
         <srcfiles file="${shared.schema.dir}/tree-diagram.dtd"/>
         <srcfiles file="${shared.schema.dir}/qtnamespaces.dtd"/>
      </uptodate>
    </condition>

  </target>

<!-- ======================================================================== -->

  <target name="style-namespacedoc"
          depends="chk.namespacedoc,init"
          unless="namespacedoc.exists">
    <echo message="Building Serialization 3.0 Namespace Doc ..." />

    <echo message="Transforming namespace XML source to HTML with RDDL"/>
    <xslt in="${src.dir}/ns-${namespace-name}.xml"
	        out="${build.dir}/ns-${namespace-name}.html"
	        style="${local.style.dir}/ns-xslt-xquery-serialization.xsl" force="yes"
	        classpathref="saxon9.classpath"/>

    <echo message="Generating RDF from HTML"/>
    <xslt in="${build.dir}/ns-${namespace-name}.html"
	        out="${dist.dir}/ns-${namespace-name}.rdf"
	        style="${shared.style.dir}/qt-ns-grddl.xsl" force="yes"
	        classpathref="saxon9.classpath">
      <param name="doc" expression="http://www.w3.org/2005/XQueryX"/>
    </xslt>

    <echo message="Fixing up HTML namespace document by removing traces of RDDL"/>
    <xslt in="${build.dir}/ns-${namespace-name}.html"
	        out="${dist.dir}/ns-${namespace-name}.html"
	        style="${shared.style.dir}/html-namespace-fixup.xsl" force="yes"
	        classpathref="saxon9.classpath"/>

    <echo message="Fixing up RDDL namespace document to add xhtml namespace"/>
    <xslt in="${build.dir}/ns-${namespace-name}.html"
	        out="${dist.dir}/ns-${namespace-name}.xhtml"
	        style="${shared.style.dir}/rddl-namespace-fixup.xsl" force="yes"
	        classpathref="saxon9.classpath"/>

    <echo message="Tidy up the HTML file for pubrules"/>
    <exec executable="tidy">
      <arg value="--doctype"/>
      <arg value="transitional"/>
      <arg value="-utf8"/>
      <arg value="-mnq"/>
      <arg value="-asxml"/>
      <arg value="${dist.dir}/ns-${namespace-name}.html"/>
    </exec>

  </target>

</project>

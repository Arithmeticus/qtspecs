<?xml version="1.0"?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:xs="http://www.w3.org/2001/XMLSchema"
                xmlns:my="http://www.w3.org/qtspecs/build/functions"
                version="2.0">
  <xsl:import href="../../../style/xsl-query.xsl"/>

  <!-- Baseline date from which differences will be shown -->
  <xsl:param name="diff.baseline" select="'0001-01-01'"/>

<xsl:param name="additional.css">
<xsl:text>
dd.indent { margin-left: 2em; }
p.element-syntax { border: solid thin; background-color: #ffccff }
div.proto { border: solid thin; background-color: #ffccff }
div.example { border: solid thin; background-color: blue; padding: 1em }
span.verb { font: small-caps 100% sans-serif }
span.error { font-size: small }
</xsl:text>
</xsl:param>

<!-- ==================================================================== -->

<!-- changed templates to auto generate an appendix with a list
     of links to open issues. -->
<xsl:template name="autogenerated-appendices-toc"/>

<xsl:template name="autogenerated-appendices"/>

  <xsl:template match="processing-instruction('schema-for-params')">
    <pre>
      <xsl:sequence
         select="unparsed-text('../src/schema-for-serialization-parameters.xsd')"/>
    </pre>
  </xsl:template>

  <!--* 2014-03-28 : CMSMcQ : trying to get examples to stop turning green 
      *                       when they shouldn't.
      *-->
  <xsl:template match="eg[@diff]">
    <xsl:variable name="handling" as="xs:string" select="my:diff-markup-effect(.)"/>
    <xsl:choose>
      <xsl:when test="$handling = 'normal'">
	<xsl:variable name="this">
	  <xsl:copy>
	    <xsl:copy-of select="@* except (@diff | @at)"/>
	    <xsl:copy-of select="child::node()"/>
	  </xsl:copy>
	</xsl:variable>
	<xsl:apply-templates select="$this"/>
      </xsl:when>
      <xsl:when test="$handling = 'delete'"/>
      <xsl:otherwise>
	<xsl:apply-imports/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>

  <!--* 2014-04-01 : CMSMcQ : experimental modification to diff function 
      * from xsl-query.xsl:  recognize special cases of deletion inside
      * insertion and insertion inside deletion.
      *-->
  <xsl:function name="my:diff-markup-effect" as="xs:string">
    <xsl:param name="el" as="element()?"/>
    <!--
      Given element $el,
      looking at its 'diff' and 'at' attributes (if any),
      and knowing the globals $show.diff.markup and $diff.baseline,
      return a string that indicates what should be done with the element:
      'normal'        : transform as if diff markup didn't exist.
      'delete'        : transform to nothing.
      'diff-highlight': transform with modifications that will highlight changes.
    -->
    <xsl:choose>

      <xsl:when test="empty($el)">
        <!--
          The caller looked for an ancestor or descendant with @diff,
          and didn't find one.
        -->
        <xsl:sequence select="'normal'"/>
      </xsl:when>

      <xsl:when test="$show.diff.markup = 0">
        <!--
          'Execute' all diff markup (regardless of @at).
          (Suppress deleted content, and let everything else through.)
        -->
        <xsl:choose>
          <xsl:when test="$el/@diff = 'del'">
            <xsl:sequence select="'delete'"/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:sequence select="'normal'"/>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:when>

      <xsl:otherwise>
        <!--
          In the document being generated, highlight diffs.
          For diffs marked with @at,
          highlight those that occur "after" $diff.baseline,
          and execute the others.
        -->
        <xsl:choose>

          <xsl:when test="empty($el/@diff)">
            <!-- This node does not have diff markup. -->
            <xsl:sequence select="'normal'"/>
          </xsl:when>

          <xsl:when test="
              $el/@at
              and
              string($el/@at) le $diff.baseline
          ">
            <!--
              This node has diff markup,
              but that markup occurred "before" the baseline,
              so execute it.
            -->
            <xsl:choose>
              <xsl:when test="$el/@diff = 'del'">
                <xsl:sequence select="'delete'"/>
              </xsl:when>
              <xsl:otherwise>
                <xsl:sequence select="'normal'"/>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:when>

          <xsl:otherwise>
            <!--
              This node has diff markup
              that occurred "after" the baseline,
              so highlight it.
            -->
	    <!--* no, don't always highlight it. *-->
            <!--* <xsl:sequence select="'highlight'"/> *-->
	    <xsl:variable name="local-diff" select="string($el/@diff)"/>	    
	    <xsl:choose>
	      <xsl:when test="$el/ancestor::*[@diff 
		and string(@at) gt $diff.baseline]">
		<!--* another diff is active *-->
		<xsl:choose>
		  <xsl:when test="$local-diff = 'del'
			    and 
			    $el/ancestor::*
			    [@diff=('add', 'chg')
			    and
			    @at gt $diff.baseline]">
		    <!--* deletion inside added or changed text:  suppress. *-->
		    <xsl:sequence select="'delete'"/>
		  </xsl:when>
		  <!--* deletion inside deletion:  
                           fine, highlight it, no big deal *-->

		  <xsl:when test="$local-diff = 'add'
			    and 
			    $el/ancestor::*
			    [@diff='del' 
			    and
			    @at gt $diff.baseline]">
		    <!--* Insertion inside deleted text:  we added some text
			* to the baseline, and then we deleted the entire
			* context.  Suppress this insertion, it is not an 
			* insertion of the current text vis-a-vis the baseline 
                        text *-->
		    <xsl:variable name="anc" select="$el/ancestor::*
			    [@diff='del' 
			    and
			    @at gt $diff.baseline]"/>
		    <!--*
		    <xsl:message>Marked insertion found within text that we meant to delete.  How is this happening?!
		    * local:  <xsl:value-of select="concat($el/name(), ' diff=', $el/@diff, ' at=', $el/@at)"/>
		    * ancestor:  <xsl:value-of select="concat($anc/name(), ' diff=', $anc/@diff, ' at=', $anc/@at)"/>
		    </xsl:message>
		    *-->
		    <xsl:sequence select="'delete'"/>
		  </xsl:when>
		  <xsl:when test="$local-diff = 'add'
			    and 
			    $el/ancestor::*
			    [@diff='chg' 
			    and
			    @at gt $diff.baseline]">
		    <!--* insertion inside changed text:  
                        * needs no highlighting. *-->
		    <xsl:sequence select="'normal'"/>
		  </xsl:when>
		  <!--* add within add also needs no special highlighting 
		      * in principle, but for ad hoc reasons we say to
		      * highlight it (for 'eg' inside added text, otherwise
                      * the example is gray not green).
		      *-->
		  <xsl:otherwise>
		    <xsl:sequence select="'highlight'"/>
		  </xsl:otherwise>
		</xsl:choose>
	      </xsl:when>
	      <xsl:otherwise>
		<!--* no ancestors with active diffs *-->
		<xsl:sequence select="'highlight'"/>
	      </xsl:otherwise>
	    </xsl:choose>
          </xsl:otherwise>

        </xsl:choose>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:function>

</xsl:stylesheet>


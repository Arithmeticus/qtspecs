<?xml version="1.0"?>
<xqx:module xmlns:xqxuf="http://www.w3.org/2006/xqupdate"
            xmlns:xqx="http://www.w3.org/2005/XQueryX"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.w3.org/2006/xqupdate
                          ../../xquery-updates/src/XQueryX-Update-Facility-extensions.xsd
                http://www.w3.org/2005/XQueryX
                ../../xqueryx/xqueryx.xsd">

<!--
for $keyword at $i in ("car", "skateboard", "canoe"),
    $parent in doc("part-tree.xml")//part[@name=$keyword]
let $descendants := $parent//part
for $p in ($parent, $descendants)
return 
  do replace value of $p/@partid with $i*1000+$p/@partid
-->

  <xqx:versionDecl>
    <xqx:version>1.0</xqx:version>
  </xqx:versionDecl>
  <xqx:mainModule>
    <xqx:queryBody>
    <xqx:flworExpr>
      <xqx:forClause>
      <xqx:forClauseItem>
        <xqx:typedVariableBinding>
        <xqx:varName>keyword</xqx:varName>
      </xqx:typedVariableBinding>
      <xqx:positionalVariableBinding>i</xqx:positionalVariableBinding>
      <xqx:forExpr>
        <xqx:sequenceExpr>
          <xqx:stringConstantExpr>
          <xqx:value>car</xqx:value>
        </xqx:stringConstantExpr>
          <xqx:stringConstantExpr>
          <xqx:value>skateboard</xqx:value>
        </xqx:stringConstantExpr>
          <xqx:stringConstantExpr>
          <xqx:value>canoe</xqx:value>
        </xqx:stringConstantExpr>
        </xqx:sequenceExpr>
      </xqx:forExpr>
      </xqx:forClauseItem>
      <xqx:forClauseItem>
        <xqx:typedVariableBinding>
        <xqx:varName>parent</xqx:varName>
      </xqx:typedVariableBinding>
      <xqx:forExpr>
        <xqx:pathExpr>
          <xqx:stepExpr>
          <xqx:filterExpr>
            <xqx:functionCallExpr>
            <xqx:functionName xqx:prefix="fn">doc</xqx:functionName>
            <xqx:arguments>
               <xqx:stringConstantExpr>
               <xqx:value>part-tree.xml</xqx:value>
             </xqx:stringConstantExpr>
            </xqx:arguments>
          </xqx:functionCallExpr>
          </xqx:filterExpr>
        </xqx:stepExpr>
        <xqx:stepExpr>
          <xqx:xpathAxis>descendant-or-self</xqx:xpathAxis>
          <xqx:nameTest>part</xqx:nameTest>
          <xqx:predicates>
            <xqx:equalOp>
            <xqx:firstOperand>
              <xqx:pathExpr>
              <xqx:stepExpr>
                <xqx:xpathAxis>attribute</xqx:xpathAxis>
              <xqx:nameTest>name</xqx:nameTest>
              </xqx:stepExpr>
            </xqx:pathExpr>
            </xqx:firstOperand>
            <xqx:secondOperand>
              <xqx:varRef>
              <xqx:name>keyword</xqx:name>
            </xqx:varRef>
            </xqx:secondOperand>
          </xqx:equalOp>
          </xqx:predicates>
        </xqx:stepExpr>
        </xqx:pathExpr>
      </xqx:forExpr>
      </xqx:forClauseItem>
    </xqx:forClause>
    <xqx:letClause>
      <xqx:letClauseItem>
        <xqx:typedVariableBinding>
        <xqx:varName>descendants</xqx:varName>
      </xqx:typedVariableBinding>
      <xqx:letExpr>
        <xqx:pathExpr>
          <xqx:stepExpr>
          <xqx:filterExpr>
            <xqx:varRef>
            <xqx:name>parent</xqx:name>
          </xqx:varRef>
          </xqx:filterExpr>
        </xqx:stepExpr>
        <xqx:stepExpr>
          <xqx:xpathAxis>descendant-or-self</xqx:xpathAxis>
          <xqx:nameTest>part</xqx:nameTest>
        </xqx:stepExpr>
        </xqx:pathExpr>
      </xqx:letExpr>
      </xqx:letClauseItem>
    </xqx:letClause>
      <xqx:forClause>
      <xqx:forClauseItem>
        <xqx:typedVariableBinding>
        <xqx:varName>p</xqx:varName>
      </xqx:typedVariableBinding>
      <xqx:forExpr>
        <xqx:sequenceExpr>
          <xqx:varRef>
          <xqx:name>parent</xqx:name>
        </xqx:varRef>
          <xqx:varRef>
          <xqx:name>descendants</xqx:name>
        </xqx:varRef>
        </xqx:sequenceExpr>
      </xqx:forExpr>
      </xqx:forClauseItem>
    </xqx:forClause>
    <xqx:returnClause>
      <xqxuf:ufTransformExpr>
        <xqxuf:ufTransformCopies>
          <xqxuf:ufTransformCopy>
            <xqx:varRef><xqx:name>p</xqx:name></xqx:varRef>
          <xqx:integerConstantExpr><xqx:value>42</xqx:value></xqx:integerConstantExpr>
          </xqxuf:ufTransformCopy>
          <xqxuf:ufTransformCopy>
              <xqx:varRef><xqx:name>q</xqx:name></xqx:varRef>
          <xqx:integerConstantExpr><xqx:value>666</xqx:value></xqx:integerConstantExpr>
          </xqxuf:ufTransformCopy>
          <xqxuf:ufTransformCopy>
            <xqx:varRef><xqx:name>r</xqx:name></xqx:varRef>
          <xqx:integerConstantExpr><xqx:value>13</xqx:value></xqx:integerConstantExpr>
          </xqxuf:ufTransformCopy>
      </xqxuf:ufTransformCopies>
            <xqxuf:ufEmptyExpr/>
      <xqxuf:ufReturnExpr>
        <xqx:stringConstantExpr><xqx:value>I think it is finished</xqx:value></xqx:stringConstantExpr>
      </xqxuf:ufReturnExpr>
      </xqxuf:ufTransformExpr>
<!--
      <xqxuf:ufReplaceExpr>
        <xqxuf:ufReplaceValue/>
      <xqxuf:ufTargetExpr>
        <xqx:pathExpr>
          <xqx:stepExpr>
          <xqx:filterExpr>
            <xqx:varRef>
            <xqx:name>p</xqx:name>
          </xqx:varRef>
          </xqx:filterExpr>
        </xqx:stepExpr>
        <xqx:stepExpr>
          <xqx:xpathAxis>attribute</xqx:xpathAxis>
          <xqx:nameTest>partid</xqx:nameTest>
        </xqx:stepExpr>
        </xqx:pathExpr>
      </xqxuf:ufTargetExpr>
      <xqxuf:ufReplacementExpr>
        <xqx:addOp>
          <xqx:firstOperand>
          <xqx:multiplyOp>
            <xqx:firstOperand>
            <xqx:varRef>
              <xqx:name>i</xqx:name>
            </xqx:varRef>
          </xqx:firstOperand>
          <xqx:secondOperand>
            <xqx:integerConstantExpr>
              <xqx:value>1000</xqx:value>
            </xqx:integerConstantExpr>
          </xqx:secondOperand>
          </xqx:multiplyOp>
        </xqx:firstOperand>
        <xqx:secondOperand>
            <xqx:pathExpr>
              <xqx:stepExpr>
              <xqx:filterExpr>
                <xqx:varRef>
                <xqx:name>p</xqx:name>
               </xqx:varRef>
              </xqx:filterExpr>
            </xqx:stepExpr>
            <xqx:stepExpr>
              <xqx:xpathAxis>attribute</xqx:xpathAxis>
              <xqx:nameTest>partid</xqx:nameTest>
            </xqx:stepExpr>
            </xqx:pathExpr>
        </xqx:secondOperand>
        </xqx:addOp>
      </xqxuf:ufReplacementExpr>
      </xqxuf:ufReplaceExpr>
-->
    </xqx:returnClause>
    </xqx:flworExpr>
  </xqx:queryBody>
  </xqx:mainModule>
</xqx:module>
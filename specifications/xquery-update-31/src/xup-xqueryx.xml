<?xml version="1.0" encoding="UTF-8"?>
<div1 id="id-xquf-xqueryx">
<head>XML Syntax (XQueryX) for &language;</head>

<p>
<bibref ref="xqueryx-31"/> defines an XML representation of <bibref ref="xquery-31"/>. 
<bibref ref="xquery-update-31-requirements-use-cases"/> states
"The syntax for updates MAY have more than one syntax binding. 
One syntax MUST be convenient for humans to read and write. 
One syntax MUST be expressed in XML in a way that reflects
the underlying structure of the operations."
This appendix specifies an XML Schema that defines the
XML representation of &language; by representing the abstract syntax
found in <specref ref="id-grammar"/>. 
This XML representation for &language; integrates
with the XML representation for XQuery 3.1.</p>

<p>
The XML Schema specified in this appendix accomplishes its integration by importing
the XML Schema defined for XQueryX in <bibref ref="xqueryx-31"/>,
incorporating all of its type and element definitions. 
It then extends that schema by adding definitions of new types and elements
in a namespace belonging to the Update Facility specification, as well as
redefining one complex type. 
</p>


<div2 id="id-xquf-update-schema">
<head>Schema</head>

<p>
This section specifies the two XML Schemas that define the complex types and elements
for XQueryX in support of &language;, including changes to the prolog
and the addition of several new expressions.</p>

<eg>
&xupx-schema;

&xupx-redef-schema;
</eg>

</div2>


<div2 id="id-xquf-update-stylesheet">
<head>Stylesheet</head>

<p>
This section specifies the XSLT stylesheet that defines the semantics of XQueryX
in support of &language;. It imports the XSLT stylesheet defined in <bibref ref="xqueryx-31"/>,
and provides additional templates that
define the semantics of the XQueryX representation of &language;
by transforming that XQueryX representation into
the human readable syntax of &language;. 
</p>

<eg>
&xupx-stylesheet;
</eg>

</div2>


<div2 id="id-xquf-update-examples">
<head>Example</head>

<p>
The following example is based on the data and queries in the use cases
in <bibref ref="xquery-update-31-requirements-use-cases"/>. 
In this example, we show the English description of the query,
the XQuery Update Facility solution given in <bibref ref="xquery-update-31-requirements-use-cases"/>,
an XQueryX solution, and the XQuery Update Facility expression
that results from applying the Update Facility XQueryX-to-XQuery Update Facility transformation
defined by the stylesheet in <specref ref="id-xquf-update-stylesheet"/>
to the Update Facility XQueryX solution.
The XQuery Update Facility expression that is produced is presented only as a sanity-check&mdash;the
intent of the stylesheet is not to recreate the original
XQuery expression, but to produce <emph>a</emph> valid
XQuery expression with the same semantics. 
The semantics of the Update Facility XQueryX solution are determined by the
semantics of the XQuery Update Facility expression that
results from that transformation. 
The "correctness" of that transformation is determined by
asking the following the question:
Can some Update Facility XQueryX processor QX process some
Update Facility XQueryX document D1 to produce results R1,
after which the stylesheet is used to translate D1 into an
XQuery Update Facility expression E1 that, when processed by some
XQuery Update Facility processor Q, produces results R2 that are equivalent
(under some meaningful definition of "equivalent") to results R1?
</p>

<p>Comparison of the results of the Update Facility XQueryX-to-XQuery Update Facility
transformation given in this document with the XQuery Update Facility solutions
in <bibref ref="xquery-update-31-requirements-use-cases"/> may be helpful in evaluating
the correctness of the Update Facility XQueryX solution in each example. </p>

<p>The XQuery Update Facility Use Cases solution given for each
example is provided only to assist readers of this
document in understanding the Update Facility XQueryX solution. 
There is no intent to imply that this
document specifies a "compilation" or "transformation" of
XQuery Update Facility syntax into Update Facility XQueryX syntax. 
</p>

<p>In the following example, note that path expressions are expanded to show their
structure. Also, note that the prefix syntax for binary operators like "and" makes the
precedence explicit. In general, humans find it easier to read an XML representation
that does not expand path expressions, but it is less convenient for programmatic
representation and manipulation.  XQueryX is designed as a language that is convenient
for production and modification by software, and not as a convenient syntax for humans to
read and write. </p>

<p>Finally, please note that white space, including new lines, have been added to
some of the Update Facility XQueryX documents and XQuery Update Facility expressions for readability. 
That additional white space is not produced by the
Update Facility XQueryX-to-XQuery Update Facility transformation.</p>

<p>This example is based on Q6 from <bibref ref="xquery-update-31-requirements-use-cases"/>,
use case Parts: "modifying recursive documents":</p>


<div3 id="id-xquery-rep"><head>XQuery Representation</head>

<eg>&xupx-example1a;</eg></div3>


<div3 id="id-xqueryx-rep"><head>XQueryX Representation</head>

<eg>&xupx-example1b;</eg></div3>


<div3 id="id-transformed-rep"><head>Transformed XQuery Representation</head>

<p>Application of the stylesheet in <specref ref="id-xquf-update-stylesheet"/> to the
Update Facility XQueryX representation results in the following XQuery representation:</p>
<eg>&xupx-example1c;</eg></div3>

</div2>

</div1>

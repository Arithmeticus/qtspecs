CHANGES.TXT for XQueryX 1.1

Items below are not yet incorporated into the editor's drafts unless
they are marked with 'DONE'. Once completed items have been entered
into the revision log, they are deleted from this document.


Status of XQueryX 1.1 Document and Change Proposals

Updated 2010-06-23 by Jim


****************************************************************
****************************************************************

STILL MUST BE DONE!!!

****************************************************************
****************************************************************

(none)



====================================
====================================
The following items can be deleted
from changes.txt, as they have been
made to the XQueryX sources.
====================================
====================================


--------------------------------------------------------------------------------------
The following errata have been applied and checked in on or about the specified dates:
--------------------------------------------------------------------------------------

XQueryX 1.0 Errata:

XQX.E1   2007-08-15  Jim
XQX.E2   2007-09-11  Jim
XQX.E3   2007-09-11  Jim
XQX.E4   2008-01-23  Jim
XQX.E5   2008-01-23  Jim


---------------------------------------------------
The following changes were published on 2008-XX-XX:
---------------------------------------------------

(None) The First Public Working Draft of XQueryX 1.1 has not yet been published. 


----------------------------------------------------
The following changes were checked in on 2008-09-10:
----------------------------------------------------

(1) Support for XQuery 1.1 Group-by
Add group-by clause to FLWOR expression.
Decided in F2F at Oracle, week of 3/31/08.

(2) Support for XQuery 1.1 Windowing
Approved changes to windowing syntax as proposed in Query/2008Apr/0004, with two friendly amendments:
(a) Put "for" in front of "sliding window" and "tumbling window"
(b) Change "force end when $x = 5" to "end only when $x = 5". 
Decided in F2F at Oracle, week of 3/31/08.


----------------------------------------------------
The following changes were checked in on 2008-09-18:
----------------------------------------------------

(1) Support for XQuery 1.1 Simplified FLWOR
Snelson proposal for simplified FLWOR syntax:
http://lists.w3.org/Archives/Member/w3c-xml-query-wg/2008May/0043.html
Decided in F2F at Edinburgh, week of 6/23/08.

(2) Support for XQuery 1.1 COUNT clause
Snelson proposal to add "count" clause to FLWOR:
http://lists.w3.org/Archives/Member/w3c-xml-query-wg/2008Jun/0112.html
Note: this proposal REVERSES the previous decision 
(Query/2008Mar/0080, 3/31/08) to add "at" to the return clause. 
Decided in F2F at Edinburgh, week of 6/23/08.

(3) Support for XQuery 1.1 Outer-for 
DC proposal in Query/2008Mar/0095, as amended: change keyword "ofor" to "outer" "for". Concern that this proposal provides no support for full outer join. People encouraged to submit new proposals for full outer join.
Decided in F2F at Oracle, week of 3/31/08.

(4) Support for XQuery 1.1 Bug 5472
M.Kay proposal to extend the "validate" expression to add optional ("as" typename)? following ValidationMode. As now, the operand expression must return exactly one document or element node.
Approved in F2F at Oracle, week of 3/31/08.

(5) Support for XQuery 1.1 Nondeterministic Functions
DC proposal in Query/2008Mar/0084, as amended: Allow keywords on external function decls only. Support both "deterministic" and "nondeterministic". Default is nondeterministic. The compiler infers the property of internal functions by static analysis.
Approved in F2F at Oracle, week of 3/31/08.

(6) Support for XQuery 1.1 Defaults for external variables
DC proposal in Query/2008Mar/0092, as amended: Change "default" to ":=".
Approved in F2F at Oracle, week of 3/31/08.


----------------------------------------------------
The following changes were checked in on 2008-10-01:
----------------------------------------------------

(1) Support for XQuery 1.1 Try/catch
JR try/catch proposal in Query/2008Jun/0170. Group approved the proposal, with minor revisions, to be added to XQuery 1.1. Text and examples relating to updates and/or scripting should be changed to non-normative notes (or deleted) since XQuery 1.1 does not include updates or scripting.
Approved in F2F at Edinburgh, week of 6/23/08.



----------------------------------------------------
The following changes were checked in on 2008-11-25:
----------------------------------------------------

(1) XQuery 1.1: Number formatting
Proposal relating to number formatting as specified here: 
http://lists.w3.org/Archives/Member/w3c-xml-query-wg/2008Jun/0111.html
Adds "format declaration" to query prolog (impacts XQuery grammar).
Approved in F2F at Edinburgh, week of 6/23/08.
- Grammar added, clarification sought:
  http://lists.w3.org/Archives/Member/w3c-xml-query-wg/2008Sep/0143.html
Approved at the Redmond F2F in October 2008:
THIS HAS BEEN TESTED (enough, I think)

(2)  Implement Snelson proposal on XQuery version declarations found
at http://www.w3.org/Bugs/Public/show_bug.cgi?id=5804#c1. Change the
definition so that an XQuery 1.1 processor must also provide an XQuery 1.0
processor (which it uses if there's an XQuery 1.0 declaration). (Changes
item i.) Change to iii - remove the part that allows an XQuery 1.1 processor
to reject a module with an XQuery 1.0 declaration.
- Undefined behavior if version is not 1.1 or 1.0.
THIS HAS BEEN TESTED


(3) XQuery 1.1: Context item declaration:
Accepted this proposal:
http://lists.w3.org/Archives/Member/w3c-xml-query-wg/2008Jun/0157.html
Requires two new error codes.
Decided in F2F at Edinburgh, week of 6/23/08.
- Grammar ###
THIS HAS BEEN TESTED


(4) Support for XQuery 1.1 Computed namespace constructor:
Accepted this proposal:
http://lists.w3.org/Archives/Member/w3c-xml-query-wg/2008Jun/0179.html
Proposal contains some errors in examples. Should specify an error if the parent of a computed namespace constructor is a document node (add this to 3.7.3.3, Document Node Constructors, Rule 3.) Also add a new node-kind: "namespace-node()" to node tests.
Decided in F2F at Edinburgh, week of 6/23/08.
THIS HAS BEEN TESTED


(5) Mike Kay's feedback on the validate expression found here: http://lists.w3.org/Archives/Member/w3c-xml-query-wg/2008Oct/0127.html.
Decided ????
THIS HAS BEEN TESTED

(6) Support for XQuery 1.1 In a FLWOR, the count clause should be accepted as intermediate clause only (not initial clause). Requires change to grammar  and draft document. Snelson was not present, will be given a chance to object.
Decided in Telcon 376, 9/9/08.
THIS HAS BEEN TESTED


----------------------------------------------------
The following changes were checked in on 2009-01-13:
----------------------------------------------------

(1) Fix Bugzilla Bugs 6309 and 6310 (details of definition of certain windowing clauses)


----------------------------------------------------
The following changes were checked in on 2009-03-03:
----------------------------------------------------

(1) Adjust definition of tumblingWindowClause type to mirror the syntax of the slidingWindowClause type


----------------------------------------------------
The following changes were checked in on 2009-09-06:
----------------------------------------------------

(1) Bugzilla Bug# 7053 (errlist syntax)


------------------------------------------------------------------
The following XQuery 1.1 changes do not require XQX modifications:
------------------------------------------------------------------
(1) Support for XQuery 1.1 Declaring serialization options:
Accepted this proposal with some amendments:
http://lists.w3.org/Archives/Member/w3c-xml-query-wg/2008May/0064.html
Adds options to the Prolog, and some error conditions.  Group likes the general approach, but prefers not to add new grammar. Instead, use J.Robie's "declare option" proposal in
http://lists.w3.org/Archives/Member/w3c-xml-query-wg/2008Jun/0015.html
with a new predefined namespace "output" that has an option for every serialization parameter. Result looks like this:
declare option output:method="xml";
declare option output:encoding="iso-8859-1";
declare option output:indent="yes";
Revised proposal approved in F2F at Edinburgh, week of 6/23/08.

  * XQX will generate XQ code using whatever QName and value is provided

(2) Version numbers other than 1.0 or 1.1
http://www.w3.org/Bugs/Public/show_bug.cgi?id=6919
http://www.w3.org/Bugs/Public/show_bug.cgi?id=5804#c11

  * XQX will simply output whatever version is specified

(3) Use BindingExpression for variable bindings (or eliminate)
http://www.w3.org/Bugs/Public/show_bug.cgi?id=6921

  * XQ no longer has this production, XQX never did. 

(4)  Fix two typos in Binary Operators table
http://www.w3.org/Bugs/Public/show_bug.cgi?id=7048

  * Not relevant to XQX


---------------------------------------------------
The following changes were checked in on 2009-10-09
---------------------------------------------------
(1) private/public functions
    See http://lists.w3.org/Archives/Member/w3c-xml-query-wg/2008Oct/0152.html
    * Schema: add attribute:
          <xsd:attribute name="private" use="optional"
                   type="xsd:boolean" default="false"/>
      to functionDecl type
    * Stylesheet: modify template xqx:functionDecl to add:
           <xsl:choose>
             <xsl:when test="@private">
               <xsl:text>private </xsl:text>
             </xsl:when>
             <xsl:otherwise>
               <xsl:text>public </xsl:text>
             </xsl:otherwise>
           </xsl:choose>
    TESTED 2009-10-09

(2) Bugzilla Bug# 6927, [XQuery11] XQuery 1.1
> is not an LL(k) language because of the optional "outer" keyword
> http://www.w3.org/Bugs/Public/show_bug.cgi?id=6927
Proposal:
     Get rid of "outer" keyword.
     Use "allowing empty".
     Insert it between TypeDeclaration? and PositionalVar?.
    * Schema: In forClause, delete:
        <xsd:attribute name="outer" type="xsd:boolean" default="false"/>
    * Schema: In forClauseItem type, insert:
        <xsd:element name="allowingEmpty" type="emptyContent"/>
      following typedVariableBinding
    * Stylesheet: In template forClause, delete:
        <xsl:if test="@xqx:outer='true'">
          <xsl:text> outer</xsl:text>
        </xsl:if>
    * Stylesheet: Create new template xqx:allowingEmpty:
          <xsl:template match="xqx:allowingEmpty">
            <xsl:text> allowing empty </xsl:text>
          </xsl:template>
    TESTED 2009-10-09


---------------------------------------------------
The following changes were checked in on 2009-10-22
---------------------------------------------------

(1) switch expression

    - SwitchExpr ::= "switch" "(" Expr ")"
                     SwitchCaseClause+ "default" "return" ExprSingle

    - SwitchCaseClause ::= ("case" ExprSingle")+ "return" ExprSingle
    TESTED 2009-10-22



(2) Higher-order functions
    - PrimaryExpr ::=
      ...
      | FunctionItemExpr

    - FunctionItemExpr ::= LiteralFunctionItem | InlineFunction

    - LiteralFunctionItem ::= QName "#" IntegerLiteral

    - InlineFunction ::=
        "function" "(" ParamList? ")" ("as" SequenceType)? EnclosedExpr
XSL NOTES:
NEW  <xsd:element name="literalFunctionItemExpr" type="literalFunctionItemExpr" substitutionGroup="expr"/>
NEW  <xsd:element name="inlineFunctionItemExpr" type="inlineFunctionItemExpr" substitutionGroup="expr"/>


    - FilterExpr ::=
        PrimaryExpr (Predicate | DynamicFunctionInvocation)*

    - DynamicFunctionInvocation ::=
        "(" (ExprSingle ("," ExprSingle)*)? ")"
XSL NOTES:
NEW  <xsl:template match="xqx:DynamicFunctionInvocation">

    - FunctionTest ::=
        AnyFunctionTest
      | TypedFunctionTest

    - AnyFunctionTest ::= "function" "(" "*" ")"

    - TypedFunctionTest ::=
        "function" "(" (SequenceType ("," SequenceType)*)? ")"
          "as" SequenceType

XSL NOTES:
NEW  <xsl:template match="xqx:anyFunctionTest">
NEW  <xsl:template match="xqx:typedFunctionTest">
NEW  <xsl:template match="xqx:paramTypeList">


    - ItemType ::=
      ...
      | FunctionTest
      | ParenthesizedItemType

    - ParenthesizedItemType ::= "(" ItemType ")"

XSL NOTES:
NEW  <xsl:template match="xqx:parenthesizedItemType">

TESTED 2009-10-22 and 2009-10-23



(1) Changes to Context Item declaration
http://www.w3.org/Bugs/Public/show_bug.cgi?id=6272

(2) Type of External Variable
http://www.w3.org/Bugs/Public/show_bug.cgi?id=6731#c2




---------------------------------------------------
The following changes were checked in on 2010-05-10
---------------------------------------------------

* "%-annotations" -- see http://lists.w3.org/Archives/Member/w3c-xsl-query/2010Mar/0180.html as amended by http://lists.w3.org/Archives/Member/w3c-xsl-query/2010Apr/0190.html, agenda item J4.4.5
  - Delete "public", "private", "deterministic", and "nondeterministic" from function options
  - Note: Only "updating" will remain (in XQuery Updating Facility) because of late stage of processing
  - Replace with "%" QName ( "(" Literal ( "," Literal )? ")" )?


-------------------------------------------------------
The following changes were checked in before 2010-06-23
-------------------------------------------------------

* Possible modification to typeswitch expression syntax

AGREED 2010-03-09 -- SEE http://lists.w3.org/Archives/Member/w3c-xsl-query/2010Feb/0220.html

  Unchanged?
    - TypeSwitchExpr ::= "typeswitch" "(" Expr ")"
                         CaseClause+ "default" $VarName? "return" ExprSingle
  NEW SYNTAX
    - CaseClause ::= "case" ($VarName "as")? SequenceType "return" ExprSingle


---------------------------------------------------
The following changes were checked in on 2010-06-23
---------------------------------------------------

* Syntactic sugar for HOF partial invocation

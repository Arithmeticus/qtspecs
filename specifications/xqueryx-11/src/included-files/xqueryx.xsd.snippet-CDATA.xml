<![CDATA[  <!-- The base class -->  <xsd:complexType name="expr"/>  <xsd:element name="expr" type="expr" abstract="true"/>    <!-- Simple wrapper class -->  <xsd:complexType name="exprWrapper">    <xsd:sequence>      <xsd:element ref="expr"/>    </xsd:sequence>  </xsd:complexType>    <xsd:complexType name="flworExpr">    <xsd:complexContent>      <xsd:extension base="expr">        <xsd:sequence>          <xsd:choice>            <xsd:element ref="forClause"/>            <xsd:element ref="letClause"/>            <xsd:element ref="windowClause"/>          </xsd:choice>          <xsd:sequence>            <xsd:choice minOccurs="0" maxOccurs="unbounded">              <xsd:element ref="forClause"/>              <xsd:element ref="letClause"/>              <xsd:element ref="windowClause"/>              <xsd:element ref="countClause"/>              <xsd:element ref="whereClause"/>              <xsd:element ref="groupByClause"/>              <xsd:element ref="orderByClause"/>            </xsd:choice>          <xsd:element ref="returnClause"/>        </xsd:sequence>        </xsd:sequence>      </xsd:extension>    </xsd:complexContent>  </xsd:complexType>  <xsd:element name="flworExpr" type="flworExpr" substitutionGroup="expr"/>  <xsd:complexType name="forClause">    <xsd:sequence>      <xsd:element ref="forClauseItem" minOccurs="1" maxOccurs="unbounded"/>    </xsd:sequence>    <xsd:attribute name="outer" type="xsd:boolean" default="false"/>  </xsd:complexType>  <xsd:element name="forClause" type="forClause"/>  <xsd:complexType name="forClauseItem">    <xsd:sequence>  	  <xsd:element ref="typedVariableBinding"/>	    <xsd:element ref="positionalVariableBinding" minOccurs="0" maxOccurs="1"/>      <xsd:element ref="forLetClauseItemExtensions" minOccurs="0"                   maxOccurs="unbounded"/>      <xsd:element name="forExpr" type="exprWrapper"/>    </xsd:sequence>  </xsd:complexType>  <xsd:element name="forClauseItem" type="forClauseItem"/>  <xsd:element name="forLetClauseItemExtensions" abstract="true"/>  <xsd:complexType name="letClause">    <xsd:sequence>      <xsd:element ref="letClauseItem" maxOccurs="unbounded"/>    </xsd:sequence>  </xsd:complexType>  <xsd:element name="letClause" type="letClause"/>  <xsd:complexType name="letClauseItem">    <xsd:sequence>      <xsd:choice>        <xsd:sequence>          <xsd:element ref="typedVariableBinding"/>          <xsd:element ref="forLetClauseItemExtensions"                       minOccurs="0" maxOccurs="unbounded"/>        </xsd:sequence>        <xsd:element ref="forLetClauseItemExtensions"                     minOccurs="0" maxOccurs="unbounded"/>      </xsd:choice>      <xsd:element name="letExpr" type="exprWrapper"/>    </xsd:sequence>  </xsd:complexType>  <xsd:element name="letClauseItem" type="letClauseItem"/>  <xsd:element name="whereClause" type="exprWrapper"/>]]>
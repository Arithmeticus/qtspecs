<?xml version="1.0" encoding="UTF-8"?><test-suite-result xmlns="http://www.w3.org/2005/02/query-test-XQTSResult">
   <implementation name="Saxon-EE" version="9.3.0.1" anonymous-result-column="false">
      <organization name="Saxonica" website="http://www.saxonica.com/" anonymous="false"/>
      <submittor name="Michael Kay" title="Director" email="mike@saxonica.com"/>
      <description/>
      <implementation-defined-items>
         <implementation-defined-item name="expressionUnicode" value="Whatever is supported by the Java JDK in use"/>
         <implementation-defined-item name="collations" value="URIs corresponding to RuleBasedCollators that can be constructed by the Java VM, plus any user-defined collations whose implementation is on the Java classpath"/>
         <implementation-defined-item name="implicitTimezone" value="Taken from the system clock. For this test run, +01:00"/>
         <implementation-defined-item name="warningsMethod" value="Controlled using the JAXP-defined ErrorListener interface."/>
         <implementation-defined-item name="errorsMethod" value="Errors are reported using the JAXP ErrorListener interface."/>
         <implementation-defined-item name="XMLVersion" value="XML 1.0 or 1.1 can be selected under user control."/>
         <implementation-defined-item name="overwrittenContextComponents" value="None"/>
         <implementation-defined-item name="axes" value="All the axes are supported."/>
         <implementation-defined-item name="defaultOrderEmpty" value="By default, empty collates least."/>
         <implementation-defined-item name="pragmas" value="The saxon:validate-type pragma validates an expression against a named simple or complex type"/>
         <implementation-defined-item name="optionDeclarations" value="saxon:default declares default values for external variables. saxon:memo-function declares functions that are to be implemented as memo-functions.  saxon:output declares serialization parameters. For detailed semantics, see the user documentation."/>
         <implementation-defined-item name="externalFunctionProtocols" value="Saxon supports calls on external Java methods. There is a plug-in architecture allowing additional external function libraries and binding mechanisms to be supported by third parties."/>
         <implementation-defined-item name="moduleLocationHints" value="An actual URI for the location of the module source code must be provided in the import declaration, or via a ModuleURIResolver nominated using the Java API"/>
         <implementation-defined-item name="staticTypingExtensions" value="Saxon does not support strict static typing, although it does report type errors at compile time if they can be detected at compile time."/>
         <implementation-defined-item name="serializationInvocation" value="Saxon supports a Java API that gives full access to serialization, reusing parts of the JAXP API where appropriate."/>
         <implementation-defined-item name="serializationDefaults" value="As described in the XQuery specification (but if running from the command line, indent=yes is set by default)"/>
         <implementation-defined-item name="externalFunctionCall" value="An unsuccessful call to an external function results in a dynamic error"/>
         <implementation-defined-item name="limits" value="Documented in the detailed conformance documentation"/>
         <implementation-defined-item name="traceDestination" value="If a TraceListener is registered, the trace output is sent to the TraceListener. Otherwise it is sent as text to System.err."/>
         <implementation-defined-item name="integerOperations" value="Saxon supports unlimited-precision integer arithmetic"/>
         <implementation-defined-item name="decimalDigits" value="Saxon implements arbitrary-precision decimal arithmetic. The default precision for division is 18 digits, but this is configurable."/>
         <implementation-defined-item name="roundOrTruncate" value="Not applicable, since Saxon supports indefinite precision."/>
         <implementation-defined-item name="Unicode" value="Saxon validates that characters in strings and names are as permitted by XML 1.0 (or XML 1.1 at user option), unless the value thas already been validated by an XML parser, in which case it depends on the user's choice of parser"/>
         <implementation-defined-item name="normalizationForms" value="Saxon supports NFC, NFD, NFKC, and NFKD."/>
         <implementation-defined-item name="collationUnits" value="All collations based on Java's RuleBasedCollator have this property. User-defined collations may or may non have this property."/>
         <implementation-defined-item name="secondsDigits" value="Saxon supports 4 digits for the year and 6 digits for fractional seconds on dateTimes and durations."/>
         <implementation-defined-item name="stringToDecimal" value="Not applicable, since Saxon supports arbitrary-precision decimal numbers"/>
         <implementation-defined-item name="weakenStable" value="Saxon provides an extension function saxon:discard-document() that removes a document from the stable set. It also allows a user-defined collection URI resolver to return an unstable collection."/>
         <implementation-defined-item name="additionalTypes" value="Saxon allows any Java object to be wrapped as an XPath item, and defines a mapping of Java class names to XPath type names so that such objects carry full dynamic type information with them."/>
         <implementation-defined-item name="undefinedProperties" value="Access to undefined values is an error."/>
         <implementation-defined-item name="sequenceNormalization" value="Sequences are always normalized to documents before the serializer is invoked. However, the Java application may change the way in which a result sequence is converted to a document before invoking the serializer."/>
         <implementation-defined-item name="outputMethods" value="Saxon allows a user-specified serialization class to be nominated using this mechanism. The class may be a SAX ContentHandler or a Saxon Receiver."/>
         <implementation-defined-item name="normalizationFormBehavior" value="Any normalization form other than NFC, NFD, NFKC, or NFKD is treated as an error."/>
         <implementation-defined-item name="additionalParams" value="Saxon supports a number of additional serialization parameters in the namespace http://saxon.sf.net/.  These include saxon:indent-spaces, saxon:character-representation, saxon:require-well-formed, and saxon:next-in-chain"/>
         <implementation-defined-item name="encodingPhase" value="Saxon allows the serialization destination to be a Java Writer (a character stream) rather than a byte  stream."/>
         <implementation-defined-item name="CDATASerialization" value="Saxon provides the standard cdata-section-elements mechanism only."/>
      </implementation-defined-items>
      <features>
         <feature name="MinimalConformance" supported="true"/>
         <feature name="Schema Import" supported="true"/>
         <feature name="Schema Validation" supported="true"/>
         <feature name="Static Typing" supported="false"/>
         <feature name="Static Typing Extensions" supported="false"/>
         <feature name="Full Axis" supported="true"/>
         <feature name="Module" supported="true"/>
      </features>
   </implementation>
   <syntax>XQuery</syntax>
   <test-run dateRun="2010-09-23">
      <test-suite version="1.0.3"/>
      <transformation/>
      <comparison/>
      <otherComments/>
   </test-run>
   <test-case name="validate-sc-1" result="pass"/>
   <test-case name="validateexpr-sc-2" result="pass"/>
   <test-case name="validateexpr-sc-4" result="pass"/>
   <test-case name="validateexpr-sc-5" result="pass"/>
   <test-case name="validateexpr-sc-6" result="pass"/>
   <test-case name="validateexpr-sc-7" result="pass"/>
   <test-case name="validateexpr-sc-8" result="pass"/>
   <test-case name="validateexpr-sc-9" result="pass"/>
   <test-case name="validateexpr-27" result="pass"/>
   <test-case name="fn-resolve-uri-24" result="pass"/>
   <test-case name="fn-resolve-uri-25" result="pass"/>
   <test-case name="K2-MatchesFunc-11" result="pass"/>
   <test-case name="K2-MatchesFunc-12" result="pass"/>
   <test-case name="K2-MatchesFunc-13" result="pass"/>
   <test-case name="K2-MatchesFunc-14" result="pass"/>
   <test-case name="K2-ReplaceFunc-4" result="pass"/>
   <test-case name="K2-ReplaceFunc-5" result="pass"/>
   <test-case name="K2-ReplaceFunc-6" result="pass"/>
   <test-case name="K2-ReplaceFunc-7" result="pass"/>
   <test-case name="K2-MatchesFunc-8" result="pass"/>
   <test-case name="K2-MatchesFunc-9" result="pass"/>
   <test-case name="K2-MatchesFunc-10" result="pass"/>
   <test-case name="K2-ReplaceFunc-3" result="pass"/>
   <test-case name="K-SeqExprCast-232" result="pass"/>
   <test-case name="K-SeqExprCast-254" result="pass"/>
   <test-case name="K-SeqExprCast-269" result="pass"/>
   <test-case name="K-SeqExprCast-284" result="pass"/>
   <test-case name="K-SeqExprCast-305" result="pass"/>
   <test-case name="K-SeqExprCast-341" result="pass"/>
   <test-case name="K-SeqExprCast-366" result="pass"/>
   <test-case name="K-SeqExprCast-402" result="pass"/>
   <test-case name="fn-matches-26" result="pass"/>
   <test-case name="fn-matches-27" result="pass"/>
   <test-case name="fn-matches-28" result="pass"/>
   <test-case name="fn-matches-29" result="pass"/>
   <test-case name="fn-matches-30" result="pass"/>
   <test-case name="op-multiply-yearMonthDuration-1" result="pass"/>
   <test-case name="op-multiply-yearMonthDuration-20" result="pass"/>
   <test-case name="op-divide-yearMonthDuration-17" result="pass"/>
   
   
   
   
   
   
   
   
   
   
   
   
   
   <test-case name="fn-matches-35" result="pass"/>
   <test-case name="fn-matches-36" result="pass"/>
   <test-case name="fn-matches-37" result="pass"/>
   <test-case name="fn-matches-38" result="pass"/>
   <test-case name="fn-matches-39" result="pass"/>
   <test-case name="fn-matches-40" result="pass"/>
   <test-case name="fn-doc-available-7" result="pass"/>
   <test-case name="K2-SeqDocAvailableFunc-1" result="pass"/>
   <test-case name="fn-idref-dtd-24" result="pass"/>
   <test-case name="fn-idref-30" result="pass"/>
   <test-case name="fn-idref-31" result="pass"/>
   <test-case name="fn-element-with-id-1" result="pass"/>
   <test-case name="fn-element-with-id-2" result="pass"/>
   <test-case name="fn-element-with-id-3" result="pass"/>
   <test-case name="fn-element-with-id-4" result="pass"/>
   <test-case name="fn-element-with-id-5" result="pass"/>
   <test-case name="fn-distinct-values-1" result="pass"/>
   
   
   
   
   
   <test-case name="Constr-attr-enclexpr-8" result="pass"/>
   <test-case name="Constr-cont-baseuri-3" result="pass"/>
   <test-case name="Constr-cont-attr-9" result="pass"/>
   <test-case name="Constr-docnode-enclexpr-1" result="pass"/>
   <test-case name="Constr-docnode-enclexpr-2" result="pass"/>
   <test-case name="Constr-docnode-enclexpr-3" result="pass"/>
   <test-case name="Constr-docnode-enclexpr-4" result="pass"/>
   <test-case name="op-numeric-integer-dividefloat2args-1" result="pass"/>
   <test-case name="op-numeric-integer-dividefloat2args-2" result="pass"/>
   <test-case name="op-numeric-integer-dividefloat2args-3" result="pass"/>
   <test-case name="op-numeric-integer-dividefloat2args-4" result="pass"/>
   <test-case name="op-numeric-integer-dividefloat2args-5" result="pass"/>
   <test-case name="op-numeric-integer-dividedouble2args-1" result="pass"/>
   <test-case name="op-numeric-integer-dividedouble2args-2" result="pass"/>
   <test-case name="op-numeric-integer-dividedouble2args-3" result="pass"/>
   <test-case name="op-numeric-integer-dividedouble2args-4" result="pass"/>
   <test-case name="op-numeric-integer-dividedouble2args-5" result="pass"/>
   <test-case name="Axes090" result="pass"/>
   <test-case name="Axes091" result="pass"/>
   <test-case name="Axes092" result="pass"/>
   <test-case name="Axes093" result="pass"/>
   <test-case name="Axes094" result="pass"/>
   <test-case name="Axes095" result="pass"/>
   <test-case name="Axes102" result="pass"/>
   <test-case name="Axes103" result="pass"/>
   <test-case name="Axes104" result="pass"/>
   <test-case name="Axes105" result="pass"/>
   <test-case name="Axes106" result="pass"/>
   <test-case name="Axes107" result="pass"/>
   <test-case name="Axes108" result="pass"/>
   <test-case name="Axes109" result="pass"/>
   <test-case name="Axes110" result="pass"/>
   <test-case name="Axes111" result="pass"/>
   <test-case name="Axes096" result="pass"/>
   <test-case name="Axes097" result="pass"/>
   <test-case name="Axes098" result="pass"/>
   <test-case name="Axes099" result="pass"/>
   <test-case name="Axes100" result="pass"/>
   <test-case name="Axes101" result="pass"/>
   <test-case name="K-FilterExpr-73" result="pass"/>
   <test-case name="nodeexpression3" result="pass"/>
   <test-case name="ForExprType060" result="pass"/>
   <test-case name="ForExprType061" result="pass"/>
   <test-case name="op-numeric-divideintg2args-6" result="pass"/>
   <test-case name="K2-NumericDivide-17" result="pass"/>
   <test-case name="WhereExpr001" result="pass"/>
   <test-case name="WhereExpr003" result="pass"/>
   <test-case name="WhereExpr009" result="pass"/>
   <test-case name="K-WhereExpr-4" result="pass"/>
   <test-case name="K-WhereExpr-10" result="pass"/>
   <test-case name="K-WhereExpr-11" result="pass"/>
   
   
   
   
   
   
   
   <test-case name="K2-CopyNamespacesProlog-1" result="pass"/>
   
   
   
   
   
   
   
   <test-case name="sequence-type-10" result="pass"/>
   <test-case name="sequence-type-12" result="pass"/>
   <test-case name="sequence-type-14" result="pass"/>
   <test-case name="sequence-type-16" result="pass"/>
   <test-case name="sequence-type-18" result="pass"/>
   <test-case name="K-SeqExprCastable-20" result="pass"/>
   <test-case name="K-SeqExprCastable-21" result="pass"/>
   <test-case name="K-SeqExprCastable-23" result="pass"/>
   <test-case name="K-SeqExprCastable-34" result="pass"/>
   <test-case name="K-SeqExprCastable-35" result="pass"/>
   <test-case name="K-SeqExprCastable-36" result="pass"/>
   <test-case name="K-SeqExprCastable-38" result="pass"/>
   <test-case name="K2-SeqExprCastable-1" result="pass"/>
   <test-case name="K2-SeqExprCastable-2" result="pass"/>
   <test-case name="fn-abs-1" result="pass"/>
   <test-case name="fn-ceiling-1" result="pass"/>
   <test-case name="fn-floor-1" result="pass"/>
   <test-case name="fn-round-1" result="pass"/>
   <test-case name="fn-round-half-to-even-1" result="pass"/>
   <test-case name="fn-round-half-to-even-2" result="pass"/>
   <test-case name="fn-max-4" result="pass"/>
   <test-case name="fn-max-5" result="pass"/>
   <test-case name="fn-max-6" result="pass"/>
   <test-case name="fn-max-7" result="pass"/>
   <test-case name="fn-max-8" result="pass"/>
   <test-case name="fn-max-9" result="pass"/>
   <test-case name="fn-max-10" result="pass"/>
   <test-case name="fn-min-4" result="pass"/>
   <test-case name="fn-min-5" result="pass"/>
   <test-case name="fn-min-6" result="pass"/>
   <test-case name="fn-min-7" result="pass"/>
   <test-case name="fn-min-8" result="pass"/>
   <test-case name="fn-min-9" result="pass"/>
   <test-case name="fn-min-10" result="pass"/>
   <test-case name="fn-sum-1" result="pass"/>
   <test-case name="fn-sum-3" result="pass"/>
   <test-case name="op-numeric-add-1" result="pass"/>
   <test-case name="op-numeric-subtract-1" result="pass"/>
   <test-case name="op-numeric-multiply-1" result="pass"/>
   <test-case name="op-numeric-divide-1" result="pass"/>
   <test-case name="op-numeric-mod-1" result="pass"/>
   <test-case name="op-numeric-unary-plus-1" result="pass"/>
   <test-case name="op-numeric-unary-minus-1" result="pass"/>
   <test-case name="validateexpr-30" result="pass"/>
   <test-case name="validateexpr-31" result="pass"/>
   <test-case name="validateexpr-32" result="pass"/>
   <test-case name="validateexpr-33" result="pass"/>
   <test-case name="step-expr-si-1" result="pass"/>
   <test-case name="step-expr-si-2" result="pass"/>
   <test-case name="step-expr-si-3" result="pass"/>
   <test-case name="following-sibling-attr" result="pass"/>
   <test-case name="preceding-sibling-attr" result="pass"/>
   <test-case name="fn-datacomplextype-1" result="pass"/>
   <test-case name="Constr-cont-nsmode-7" result="pass"/>
   <test-case name="Constr-cont-nsmode-8" result="pass"/>
   <test-case name="Constr-cont-nsmode-9" result="pass"/>
   <test-case name="Constr-cont-nsmode-10" result="pass"/>
   <test-case name="Constr-cont-document-1" result="pass"/>
   <test-case name="Constr-cont-document-2" result="pass"/>
   <test-case name="Constr-cont-document-4" result="pass"/>
   <test-case name="Constr-cont-document-5" result="pass"/>
   <test-case name="Constr-docnode-nested-3" result="pass"/>
   <test-case name="Constr-docnode-nested-4" result="pass"/>
   <test-case name="CondExpr022" result="pass"/>
   <test-case name="CastableAs648" result="pass"/>
   <test-case name="CastableAs649" result="pass"/>
   <test-case name="CastableAs650" result="pass"/>
   <test-case name="errors-and-optimization-1" result="pass"/>
   <test-case name="errors-and-optimization-2" result="pass"/>
   <test-case name="errors-and-optimization-3" result="pass"/>
   <test-case name="errors-and-optimization-4" result="pass"/>
   <test-case name="errors-and-optimization-5" result="pass"/>
   <test-case name="errors-and-optimization-6" result="pass"/>
   <test-case name="errors-and-optimization-7" result="pass"/>
   <test-case name="K2-SeqExprCastable-3" result="pass"/>
   <test-case name="K2-SeqExprCastable-4" result="pass"/>
   <test-case name="errata6-001" result="pass"/>
   <test-case name="errata6-002" result="pass"/>
   <test-case name="errata6-003" result="pass"/>
   <test-case name="errata6-004" result="pass"/>
   <test-case name="errata6-005" result="pass"/>
   <test-case name="errata6-006" result="pass"/>
   <test-case name="errata6-007" result="pass"/>
   <test-case name="validate-constraints-1" result="pass"/>
   <test-case name="validate-constraints-2" result="pass"/>
   <test-case name="validate-constraints-3" result="pass"/>
   <test-case name="modules-19" result="pass"/>
   <test-case name="modules-20" result="pass"/>
   <test-case name="modules-21" result="pass"/>
   <test-case name="modules-22" result="pass"/>
   <test-case name="modules-23" result="pass"/>
   <test-case name="modules-24" result="pass"/>
   <test-case name="modules-25" result="pass"/>
   <test-case name="modules-26" result="pass"/>
   <test-case name="modules-27" result="pass"/>
   <test-case name="modules-28" result="pass" comment="expected XQST0093 , got XQST0054"/>
   <?file Modules/ModuleImport/modules-28.xq?><test-case name="errata8-001" result="pass" comment="expected XQST0093 , got XQST0054"/>
   <?file Modules/ModuleImport/errata8-001.xq?><test-case name="errata8-002" result="pass"/>
   <test-case name="errata8-003" result="pass"/>
   <test-case name="K2-ComputeConAttr-51" result="pass"/>
   <test-case name="K2-ComputeConAttr-54" result="pass"/>
   <test-case name="K2-NameTest-21" result="pass"/>
   <test-case name="K2-NameTest-22" result="pass"/>
   <test-case name="K2-NameTest-23" result="pass"/>
   <test-case name="DirectConElemAttr-1" result="pass"/>
   <test-case name="DirectConElemAttr-2" result="pass"/>
   <test-case name="Constr-namespace-24" result="pass"/>
   <test-case name="Constr-namespace-25" result="pass"/>
   <test-case name="K2-DirectConElemNamespace-15" result="pass"/>
   <test-case name="K2-DirectConElemNamespace-16" result="pass"/>
   <test-case name="K2-DirectConElemNamespace-17" result="pass"/>
   <test-case name="K2-DirectConElemNamespace-18" result="pass"/>
   <test-case name="K2-DirectConElemNamespace-34" result="pass"/>
   <test-case name="K2-DirectConElemNamespace-35" result="pass"/>
   <test-case name="K2-DirectConElemNamespace-36" result="pass"/>
   <test-case name="K2-DirectConElemNamespace-37" result="pass"/>
   <test-case name="K2-DirectConElemNamespace-44" result="pass" comment="expected XPST0003 , got XQST0022"/>
   <?file Construct/DirectConElem/DirectConElemNamespace/K2-DirectConElemNamespace-44.xq?><test-case name="K2-DirectConElemNamespace-59" result="pass"/>
   <test-case name="K2-DirectConElemNamespace-61" result="pass" comment="expected XPST0003 , got XQST0022"/>
   <?file Construct/DirectConElem/DirectConElemNamespace/K2-DirectConElemNamespace-61.xq?><test-case name="K2-DirectConElemNamespace-63" result="pass" comment="expected XPST0003 , got XQST0022"/>
   <?file Construct/DirectConElem/DirectConElemNamespace/K2-DirectConElemNamespace-63.xq?><test-case name="K2-DirectConElemNamespace-67" result="pass" comment="expected XPST0003 , got XQST0022"/>
   <?file Construct/DirectConElem/DirectConElemNamespace/K2-DirectConElemNamespace-67.xq?><test-case name="K2-DirectConElemNamespace-69" result="pass" comment="expected XPST0003 , got XQST0022"/>
   <?file Construct/DirectConElem/DirectConElemNamespace/K2-DirectConElemNamespace-69.xq?><test-case name="K2-DirectConElemNamespace-71" result="pass"/>
   <test-case name="K2-DirectConElemNamespace-72" result="pass"/>
   <test-case name="K2-DirectConElemNamespace-73" result="pass"/>
   <test-case name="K2-DirectConElemNamespace-74" result="pass"/>
   <test-case name="DirectConElemNamespace-3" result="pass"/>
   <test-case name="DirectConElemNamespace-4" result="pass"/>
   <test-case name="DirectConElemNamespace-5" result="pass"/>
   <test-case name="DirectConElemNamespace-6" result="pass"/>
   <test-case name="orderBy60" result="pass"/>
   <test-case name="orderBy61" result="pass"/>
   <test-case name="orderBy62" result="pass"/>
   <test-case name="K2-OrderbyExprWithout-1" result="pass"/>
   <test-case name="GenCompEq-1" result="pass"/>
   <test-case name="GenCompEq-2" result="pass"/>
   <test-case name="GenCompEq-3" result="pass"/>
   <test-case name="GenCompEq-4" result="pass"/>
   <test-case name="GenCompEq-5" result="pass"/>
   <test-case name="GenCompEq-6" result="pass"/>
   <test-case name="validateexpr-28" result="pass"/>
   <test-case name="K2-DirectConElem-40" result="pass"/>
   <test-case name="K2-DirectConElemAttr-69" result="pass"/>
   <test-case name="comp-elem-bad-name-1" result="pass" comment="expected XQDY0096 , got XQDY0074"/>
   <?file Construct/ComputeCon/ComputeConElem/comp-elem-bad-name-1.xq?><test-case name="comp-elem-bad-name-2" result="pass"/>
   <test-case name="comp-elem-bad-name-3" result="pass"/>
   <test-case name="comp-elem-bad-name-4" result="pass"/>
   <test-case name="comp-elem-bad-name-5" result="pass"/>
   <test-case name="comp-elem-bad-name-6" result="pass"/>
   <test-case name="K2-ComputeConAttr-38" result="pass"/>
   <test-case name="K2-ComputeConAttr-42" result="pass" comment="expected XQST0070 , got XPST0081"/>
   <?file Construct/ComputeCon/ComputeConAttr/K2-ComputeConAttr-42.xq?><test-case name="K2-ComputeConAttr-43" result="pass" comment="expected XQST0070 , got XQDY0074"/>
   <?file Construct/ComputeCon/ComputeConAttr/K2-ComputeConAttr-43.xq?><test-case name="comp-attr-bad-name-1" result="pass"/>
   <test-case name="comp-attr-bad-name-2" result="pass"/>
   <test-case name="comp-attr-bad-name-3" result="pass"/>
   <test-case name="comp-attr-bad-name-4" result="pass"/>
   <test-case name="comp-attr-bad-name-5" result="pass" comment="expected XQDY0044 , got XQDY0096"/>
   <?file Construct/ComputeCon/ComputeConAttr/comp-attr-bad-name-5.xq?><test-case name="comp-attr-bad-name-6" result="pass" comment="expected XQDY0044 , got XQDY0096"/>
   <?file Construct/ComputeCon/ComputeConAttr/comp-attr-bad-name-6.xq?><test-case name="comp-attr-bad-name-7" result="pass"/>
   <test-case name="namespaceDecl-4" result="pass"/>
   <test-case name="XML10-3ed-Mixed-content" result="pass"/>
   <test-case name="XML10-4ed-Excluded-char-1" result="pass"/>
   <test-case name="XML10-4ed-Excluded-char-2" result="pass"/>
   <test-case name="XML10-5ed-Included-char-1" result="pass"/>
   <test-case name="XML11-1ed-Included-char-1" result="pass" comment="expected XPST0003 , got XPST0081"/>
   <?file XMLEdition/XML11-1ed-Included-char-1.xq?><test-case name="PathExpr-1" result="pass"/>
   <test-case name="PathExpr-2" result="pass"/>
   <test-case name="PathExpr-3" result="pass"/>
   <test-case name="PathExpr-4" result="pass"/>
   <test-case name="PathExpr-5" result="pass"/>
   <test-case name="PathExpr-6" result="pass"/>
   <test-case name="PathExpr-7" result="pass"/>
   <test-case name="PathExpr-8" result="pass"/>
   <test-case name="PathExpr-9" result="pass"/>
   <test-case name="PathExpr-10" result="pass" comment="expected XPST0003 , got XPST0008"/>
   <?file Expressions/PathExpr/PathExpressions/PathExpr-10.xq?><test-case name="PathExpr-11" result="pass"/>
   <test-case name="PathExpr-12" result="pass"/>
   <test-case name="PathExpr-13" result="pass"/>
   <test-case name="PathExpr-14" result="pass"/>
   <test-case name="PathExpr-15" result="pass"/>
   <test-case name="PathExpr-16" result="pass"/>
   <test-case name="Steps-leading-lone-slash-1" result="pass"/>
   <test-case name="Steps-leading-lone-slash-1a" result="pass"/>
   <test-case name="Steps-leading-lone-slash-2" result="pass"/>
   <test-case name="Steps-leading-lone-slash-2a" result="pass"/>
   <test-case name="Steps-leading-lone-slash-3" result="pass"/>
   <test-case name="Steps-leading-lone-slash-3a" result="pass"/>
   <test-case name="Steps-leading-lone-slash-4" result="pass"/>
   <test-case name="Steps-leading-lone-slash-5" result="pass"/>
   <test-case name="Steps-leading-lone-slash-5a" result="pass"/>
   <test-case name="Steps-leading-lone-slash-6" result="pass"/>
   <test-case name="Steps-leading-lone-slash-7" result="pass"/>
   <test-case name="Steps-leading-lone-slash-7a" result="pass"/>
   <test-case name="Steps-leading-lone-slash-8" result="pass"/>
   <test-case name="Steps-leading-lone-slash-8a" result="pass"/>
   <test-case name="Steps-leading-lone-slash-9" result="pass"/>
   <test-case name="Steps-leading-lone-slash-10" result="pass"/>
   <test-case name="Steps-leading-lone-slash-11" result="pass"/>
   <test-case name="Steps-leading-lone-slash-12" result="pass"/>
   <test-case name="Steps-leading-lone-slash-13" result="pass"/>
   <test-case name="Steps-leading-lone-slash-14" result="pass"/>
   <test-case name="Steps-leading-lone-slash-15" result="pass"/>
   <test-case name="Steps-leading-lone-slash-16" result="pass"/>
   <test-case name="Steps-leading-lone-slash-17" result="pass"/>
   
   
   
   <test-case name="K2-DirectConElemNamespace-76" result="pass"/>
</test-suite-result>